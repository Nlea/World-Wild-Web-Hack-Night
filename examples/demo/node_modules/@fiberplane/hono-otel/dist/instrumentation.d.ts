import type { HonoLikeApp } from "./types.js";
/**
 * The type for the configuration object we use to configure the instrumentation
 * Different from @FpxConfigOptions because all properties are required
 *
 * @internal
 */
type FpxConfig = {
    /** Enable library debug logging */
    libraryDebugMode: boolean;
    monitor: {
        /** Send data to FPX about each `fetch` call made during a handler's lifetime */
        fetch: boolean;
        /** Send data to FPX about each `console.*` call made during a handler's lifetime */
        logging: boolean;
        /** Proxy Cloudflare bindings to add instrumentation */
        cfBindings: boolean;
    };
};
/**
 * The type for the configuration object the user might pass to `instrument`
 * Different from @FpxConfig because all properties are optional
 *
 * @public
 */
type FpxConfigOptions = Partial<FpxConfig & {
    monitor: Partial<FpxConfig["monitor"]>;
}>;
export declare function instrument(app: HonoLikeApp, config?: FpxConfigOptions): HonoLikeApp;
export {};
