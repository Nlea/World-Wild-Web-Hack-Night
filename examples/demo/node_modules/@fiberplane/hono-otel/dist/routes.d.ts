import type { FpxLogger } from "./logger.js";
import type { PromiseStore } from "./promiseStore.js";
import type { HonoLikeApp } from "./types.js";
type FetchFn = typeof fetch;
/**
 * TODO - In production, we should make sure this request has some sort of repudiation
 *        We only want to respond like this when we know the request came from the service
 *        and not from a random user.
 */
export declare function isRouteInspectorRequest(request: Request): boolean;
/**
 * Sends the routes from the app to the FPX service.
 *
 * @param fetchFn - The fetch function to use to send the request.
 * @param fpxEndpoint - The endpoint of the FPX service.
 * @param app - The Hono app to get the routes from.
 * @param logger - The logger to use to log messages.
 * @param promiseStore - An optional promise store to add the request to.
 * @returns `true` if the routes were sent successfully or if the request was added to the promise store, `false` otherwise
 */
export declare function sendRoutes(fetchFn: FetchFn, fpxEndpoint: string, app: HonoLikeApp, logger: FpxLogger, promiseStore?: PromiseStore): Promise<boolean>;
/**
 * Sends the routes from the app to the FPX service, then returns a response that can be used
 * for fpx route inspection requests.
 *
 * @param fetchFn - The fetch function to use to send the request.
 * @param fpxEndpoint - The endpoint of the FPX service.
 * @param app - The Hono app to get the routes from.
 * @returns A Response that can be sent back to the client
 */
export declare function respondWithRoutes(fetchFn: FetchFn, fpxEndpoint: string, app: HonoLikeApp, logger: FpxLogger): Promise<Response>;
export {};
