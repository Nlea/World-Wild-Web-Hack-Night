{
  "version": 3,
  "sources": ["../../@sagold/json-pointer/dist/jsonPointer.js", "../../valid-url/index.js", "../../nearley/lib/nearley.js", "../../smtp-address-parser/lib/grammar.ts", "../../smtp-address-parser/lib/index.ts", "../../deepmerge/dist/cjs.js", "../../fast-deep-equal/index.js", "../../jsonpointer/jsonpointer.js", "../../@fiberplane/hono/dist/create-open-api/index.js", "../../@fiberplane/hono/dist/constants.js", "../../@fiberplane/hono/dist/debug.js", "../../@fiberplane/hono/dist/fetch.js", "../../@fiberplane/hono/dist/routes/api/assistant.js", "../../@fiberplane/hono/dist/routes/api/reports.js", "../../zod/lib/index.mjs", "../../@fiberplane/hono/dist/services/base.js", "../../@fiberplane/hono/dist/services/tokens.js", "../../@fiberplane/hono/dist/services/index.js", "../../@fiberplane/hono/dist/routes/api/tokens.js", "../../@fiberplane/hono/dist/routes/api/workflows.js", "../../@fiberplane/hono/dist/routes/api/index.js", "../../@fiberplane/hono/dist/routes/api/traces.js", "../../hono/dist/jsx/constants.js", "../../hono/dist/jsx/dom/utils.js", "../../hono/dist/jsx/dom/context.js", "../../hono/dist/jsx/context.js", "../../hono/dist/jsx/intrinsic-element/common.js", "../../hono/dist/jsx/intrinsic-element/components.js", "../../hono/dist/jsx/children.js", "../../hono/dist/jsx/utils.js", "../../hono/dist/jsx/base.js", "../../hono/dist/jsx/jsx-dev-runtime.js", "../../@fiberplane/hono/dist/routes/playground.js", "../../hono/dist/utils/cookie.js", "../../hono/dist/helper/cookie/index.js", "../../hono/dist/http-exception.js", "../../hono/dist/utils/buffer.js", "../../hono/dist/validator/validator.js", "../../@hono/standard-validator/dist/index.js", "../../json-schema-library/dist/module/lib/config/strings.js", "../../json-schema-library/dist/module/lib/getTypeOf.js", "../../json-schema-library/dist/module/lib/utils/render.js", "../../json-schema-library/dist/module/lib/utils/__.js", "../../json-schema-library/dist/module/lib/utils/createCustomError.js", "../../json-schema-library/dist/module/lib/utils/flattenArray.js", "../../json-schema-library/dist/module/lib/config/settings.js", "../../json-schema-library/dist/module/lib/types.js", "../../json-schema-library/dist/module/lib/utils/filter.js", "../../json-schema-library/dist/module/lib/utils/isObject.js", "../../json-schema-library/dist/module/lib/features/oneOf.js", "../../json-schema-library/dist/module/lib/mergeSchema.js", "../../json-schema-library/dist/module/lib/utils/omit.js", "../../json-schema-library/dist/module/lib/features/if.js", "../../json-schema-library/dist/module/lib/utils/shallowCloneSchema.js", "../../json-schema-library/dist/module/lib/features/allOf.js", "../../json-schema-library/dist/module/lib/schemaNode.js", "../../json-schema-library/dist/module/lib/resolveRef.strict.js", "../../json-schema-library/dist/module/lib/resolveRef.js", "../../json-schema-library/dist/module/lib/utils/uniqueItems.js", "../../json-schema-library/dist/module/lib/features/dependencies.js", "../../json-schema-library/dist/module/lib/features/anyOf.js", "../../json-schema-library/dist/module/lib/resolveDynamicSchema.js", "../../json-schema-library/dist/module/lib/reduceSchema.js", "../../../src/utils.ts", "../../../src/copier.ts", "../../../src/index.ts", "../../json-schema-library/dist/module/lib/utils/copy.js", "../../json-schema-library/dist/module/lib/draft/index.js", "../../json-schema-library/dist/module/lib/draft04/addRemoteSchema.js", "../../json-schema-library/dist/module/lib/eachSchema.js", "../../json-schema-library/dist/module/lib/compile/joinScope.js", "../../json-schema-library/dist/module/lib/compile/getRef.js", "../../json-schema-library/dist/module/lib/compile/splitRef.js", "../../json-schema-library/dist/module/lib/compile/index.js", "../../json-schema-library/dist/module/lib/createSchemaOf.js", "../../json-schema-library/dist/module/lib/validation/errors.js", "../../json-schema-library/dist/module/lib/validation/format.js", "../../json-schema-library/dist/module/lib/getChildSchemaSelection.js", "../../json-schema-library/dist/module/lib/getSchema.js", "../../json-schema-library/dist/module/lib/utils/merge.js", "../../json-schema-library/dist/module/lib/utils/isEmpty.js", "../../json-schema-library/dist/module/lib/getTemplate.js", "../../json-schema-library/dist/module/lib/isValid.js", "../../json-schema-library/dist/module/lib/utils/punycode.ucs2decode.js", "../../json-schema-library/dist/module/lib/utils/getPrecision.js", "../../json-schema-library/dist/module/lib/validation/keyword.js", "../../json-schema-library/dist/module/lib/step.js", "../../json-schema-library/dist/module/lib/validation/type.js", "../../json-schema-library/dist/module/lib/validate.js", "../../json-schema-library/dist/module/lib/each.js", "../../json-schema-library/dist/module/lib/draft04/index.js", "../../json-schema-library/dist/module/lib/addRemoteSchema.js", "../../json-schema-library/dist/module/lib/draft06/compile/index.js", "../../json-schema-library/dist/module/lib/draft06/validation/keyword.js", "../../json-schema-library/dist/module/lib/draft06/index.js", "../../json-schema-library/dist/module/lib/draft07/index.js", "../../json-schema-library/dist/module/lib/draft2019/validation/keyword.js", "../../json-schema-library/dist/module/lib/draft2019/index.js", "../../json-schema-library/dist/module/lib/jsoneditor/index.js", "../../@fiberplane/hono/dist/schemas/workflows.js", "../../@fiberplane/hono/dist/utils/env.js", "../../@fiberplane/hono/dist/utils/context-storage.js", "../../jsonpath-plus/dist/index-browser-esm.js", "../../@fiberplane/hono/dist/routes/runner/resolvers.js", "../../@fiberplane/hono/dist/routes/runner/utils.js", "../../@fiberplane/hono/dist/routes/runner/index.js", "../../@fiberplane/hono/dist/router.js", "../../@fiberplane/hono/dist/middleware.js", "../../@fiberplane/hono/dist/index.js"],
  "sourcesContent": ["!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"jsonPointer\",[],e):\"object\"==typeof exports?exports.jsonPointer=e():t.jsonPointer=e()}(\"undefined\"!=typeof self?self:this,(()=>(()=>{\"use strict\";var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})}},e={};function n(t){return\"#\"===t||\"\"===t||Array.isArray(t)&&0===t.length||!1}t.r(e),t.d(e,{default:()=>_,get:()=>s,isRoot:()=>n,join:()=>P,remove:()=>m,removeUndefinedItems:()=>v,set:()=>g,split:()=>f,splitLast:()=>O});const o=/~1/g,r=/~0/g,i=/(^#?\\/?)/g;function l(t){return t.replace(o,\"/\").replace(r,\"~\")}function u(t){return l(decodeURIComponent(t))}function f(t){if(null==t||\"string\"!=typeof t||n(t))return Array.isArray(t)?t:[];const e=t.indexOf(\"#\")>=0?u:l,o=(t=t.replace(i,\"\")).split(\"/\");for(let t=0,n=o.length;t<n;t+=1)o[t]=e(o[t]);return o}function s(t,e,o=void 0){if(null==e||null==t)return o;if(n(e))return t;const r=c(t,f(e));return void 0===r?o:r}function c(t,e){const n=e.shift();if(void 0!==t)return void 0!==n?c(t[n],e):t}const p=/^\\[.*\\]$/,d=/^\\[(.+)\\]$/;function a(t,e){return\"__proto__\"===t||\"constructor\"==t&&e.length>0&&\"prototype\"==e[0]}function g(t,e,n){if(null==e)return t;const o=f(e);if(0===o.length)return t;null==t&&(t=p.test(o[0])?[]:{});let r,i,l=t;for(;o.length>1;)r=o.shift(),i=p.test(o[0]),a(r,o)||(l=h(l,r,i));return r=o.pop(),y(l,r,n),t}function y(t,e,n){let o;const r=e.match(d);\"[]\"===e&&Array.isArray(t)?t.push(n):r?(o=r.pop(),t[o]=n):t[e]=n}function h(t,e,n){var o,r;const i=null!==(r=null===(o=e.match(d))||void 0===o?void 0:o.pop())&&void 0!==r?r:e;if(null!=t[i])return t[i];const l=n?[]:{};return y(t,e,l),l}function v(t){let e=0,n=0;for(;e+n<t.length;)void 0===t[e+n]&&(n+=1),t[e]=t[e+n],e+=1;return t.length=t.length-n,t}function m(t,e,n){const o=f(e),r=o.pop(),i=s(t,o);return i&&delete i[r],Array.isArray(i)&&!0!==n&&v(i),t}const j=/~/g,b=/\\//g;function A(t,e){if(0===t.length)return e?\"#\":\"\";for(let n=0,o=t.length;n<o;n+=1)t[n]=t[n].replace(j,\"~0\").replace(b,\"~1\"),e&&(t[n]=encodeURIComponent(t[n]));return(e?\"#/\":\"/\")+t.join(\"/\")}function P(t,...e){const n=[];if(Array.isArray(t))return A(t,!0===arguments[1]);const o=arguments[arguments.length-1],r=\"boolean\"==typeof o?o:t&&\"#\"===t[0];for(let t=0,e=arguments.length;t<e;t+=1)n.push.apply(n,f(arguments[t]));const i=[];for(let t=0,e=n.length;t<e;t+=1)if(\"..\"===n[t]){if(0===i.length)return r?\"#\":\"\";i.pop()}else i.push(n[t]);return A(i,r)}function O(t){const e=f(t);if(0===e.length)return\"string\"==typeof t&&\"#\"===t[0]?[\"#\",e[0]]:[\"\",void 0];if(1===e.length)return\"#\"===t[0]?[\"#\",e[0]]:[\"\",e[0]];const n=e.pop();return[P(e,\"#\"===t[0]),n]}const _={get:s,set:g,remove:m,join:P,split:f,splitLast:O,isRoot:n,removeUndefinedItems:v};return e})()));", "(function(module) {\n    'use strict';\n\n    module.exports.is_uri = is_iri;\n    module.exports.is_http_uri = is_http_iri;\n    module.exports.is_https_uri = is_https_iri;\n    module.exports.is_web_uri = is_web_iri;\n    // Create aliases\n    module.exports.isUri = is_iri;\n    module.exports.isHttpUri = is_http_iri;\n    module.exports.isHttpsUri = is_https_iri;\n    module.exports.isWebUri = is_web_iri;\n\n\n    // private function\n    // internal URI spitter method - direct from RFC 3986\n    var splitUri = function(uri) {\n        var splitted = uri.match(/(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/);\n        return splitted;\n    };\n\n    function is_iri(value) {\n        if (!value) {\n            return;\n        }\n\n        // check for illegal characters\n        if (/[^a-z0-9\\:\\/\\?\\#\\[\\]\\@\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\.\\-\\_\\~\\%]/i.test(value)) return;\n\n        // check for hex escapes that aren't complete\n        if (/%[^0-9a-f]/i.test(value)) return;\n        if (/%[0-9a-f](:?[^0-9a-f]|$)/i.test(value)) return;\n\n        var splitted = [];\n        var scheme = '';\n        var authority = '';\n        var path = '';\n        var query = '';\n        var fragment = '';\n        var out = '';\n\n        // from RFC 3986\n        splitted = splitUri(value);\n        scheme = splitted[1]; \n        authority = splitted[2];\n        path = splitted[3];\n        query = splitted[4];\n        fragment = splitted[5];\n\n        // scheme and path are required, though the path can be empty\n        if (!(scheme && scheme.length && path.length >= 0)) return;\n\n        // if authority is present, the path must be empty or begin with a /\n        if (authority && authority.length) {\n            if (!(path.length === 0 || /^\\//.test(path))) return;\n        } else {\n            // if authority is not present, the path must not start with //\n            if (/^\\/\\//.test(path)) return;\n        }\n\n        // scheme must begin with a letter, then consist of letters, digits, +, ., or -\n        if (!/^[a-z][a-z0-9\\+\\-\\.]*$/.test(scheme.toLowerCase()))  return;\n\n        // re-assemble the URL per section 5.3 in RFC 3986\n        out += scheme + ':';\n        if (authority && authority.length) {\n            out += '//' + authority;\n        }\n\n        out += path;\n\n        if (query && query.length) {\n            out += '?' + query;\n        }\n\n        if (fragment && fragment.length) {\n            out += '#' + fragment;\n        }\n\n        return out;\n    }\n\n    function is_http_iri(value, allowHttps) {\n        if (!is_iri(value)) {\n            return;\n        }\n\n        var splitted = [];\n        var scheme = '';\n        var authority = '';\n        var path = '';\n        var port = '';\n        var query = '';\n        var fragment = '';\n        var out = '';\n\n        // from RFC 3986\n        splitted = splitUri(value);\n        scheme = splitted[1]; \n        authority = splitted[2];\n        path = splitted[3];\n        query = splitted[4];\n        fragment = splitted[5];\n\n        if (!scheme)  return;\n\n        if(allowHttps) {\n            if (scheme.toLowerCase() != 'https') return;\n        } else {\n            if (scheme.toLowerCase() != 'http') return;\n        }\n\n        // fully-qualified URIs must have an authority section that is\n        // a valid host\n        if (!authority) {\n            return;\n        }\n\n        // enable port component\n        if (/:(\\d+)$/.test(authority)) {\n            port = authority.match(/:(\\d+)$/)[0];\n            authority = authority.replace(/:\\d+$/, '');\n        }\n\n        out += scheme + ':';\n        out += '//' + authority;\n        \n        if (port) {\n            out += port;\n        }\n        \n        out += path;\n        \n        if(query && query.length){\n            out += '?' + query;\n        }\n\n        if(fragment && fragment.length){\n            out += '#' + fragment;\n        }\n        \n        return out;\n    }\n\n    function is_https_iri(value) {\n        return is_http_iri(value, true);\n    }\n\n    function is_web_iri(value) {\n        return (is_http_iri(value) || is_https_iri(value));\n    }\n\n})(module);\n", "(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n", null, "\"use strict\";\n\n// const punycode = require('punycode');\nconst nearley = require(\"nearley\");\n\nimport { default as myGrammar } from \"./grammar\";\nmyGrammar.ParserStart = \"Mailbox\";\nconst grammar = nearley.Grammar.fromCompiled(myGrammar);\n\n// <https://tools.ietf.org/html/rfc5321#section-4.1.2>\n\nexport function parse(address: string) {\n    const parser = new nearley.Parser(grammar);\n    parser.feed(address);\n\n    if (parser.results.length !== 1) {\n        throw new Error(\"address parsing failed: ambiguous grammar\");\n    }\n\n    return parser.results[0];\n}\n\n/** Strip +something, strip '.'s, and map to lower case.\n */\nexport function normalize_dot_string(dot_string: string) {\n    const tagless = (function () {\n        const plus_loc = dot_string.indexOf(\"+\");\n        if (plus_loc === -1) {\n            return dot_string;\n        }\n        return dot_string.substr(0, plus_loc);\n    })();\n    const dotless = tagless.replace(/\\./g, \"\");\n    return dotless.toLowerCase();\n}\n\n/** The G style address normalization.\n */\nexport function normalize(address: string) {\n    const a = parse(address);\n    const domain = a.domainPart.AddressLiteral ?? a.domainPart.DomainName.toLowerCase();\n    const local = a.localPart.QuotedString ?? normalize_dot_string(a.localPart.DotString);\n    return `${local}@${domain}`;\n}\n\nexport function canonicalize_quoted_string(quoted_string: string) {\n    const unquoted = quoted_string.substr(1).substr(0, quoted_string.length - 2);\n    const unescaped = unquoted.replace(/(?:\\\\(.))/g, \"$1\");\n    const reescaped = unescaped.replace(/(?:([\"\\\\]))/g, \"\\\\$1\");\n    return `\"${reescaped}\"`; // re-quote\n}\n\n/**\n * Apply a canonicalization consistent with standards to support\n * comparison as a string.\n */\nexport function canonicalize(address: string) {\n    const a = parse(address);\n    const domain = a.domainPart.AddressLiteral ?? a.domainPart.DomainName.toLowerCase();\n    const local = a.localPart.QuotedString\n        ? canonicalize_quoted_string(a.localPart.QuotedString)\n        : a.localPart.DotString;\n    return `${local}@${domain}`;\n}\n", "'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "var hasExcape = /~/\nvar escapeMatcher = /~[01]/g\nfunction escapeReplacer (m) {\n  switch (m) {\n    case '~1': return '/'\n    case '~0': return '~'\n  }\n  throw new Error('Invalid tilde escape: ' + m)\n}\n\nfunction untilde (str) {\n  if (!hasExcape.test(str)) return str\n  return str.replace(escapeMatcher, escapeReplacer)\n}\n\nfunction setter (obj, pointer, value) {\n  var part\n  var hasNextPart\n\n  for (var p = 1, len = pointer.length; p < len;) {\n    if (pointer[p] === 'constructor' || pointer[p] === 'prototype' || pointer[p] === '__proto__') return obj\n\n    part = untilde(pointer[p++])\n    hasNextPart = len > p\n\n    if (typeof obj[part] === 'undefined') {\n      // support setting of /-\n      if (Array.isArray(obj) && part === '-') {\n        part = obj.length\n      }\n\n      // support nested objects/array when setting values\n      if (hasNextPart) {\n        if ((pointer[p] !== '' && pointer[p] < Infinity) || pointer[p] === '-') obj[part] = []\n        else obj[part] = {}\n      }\n    }\n\n    if (!hasNextPart) break\n    obj = obj[part]\n  }\n\n  var oldValue = obj[part]\n  if (value === undefined) delete obj[part]\n  else obj[part] = value\n  return oldValue\n}\n\nfunction compilePointer (pointer) {\n  if (typeof pointer === 'string') {\n    pointer = pointer.split('/')\n    if (pointer[0] === '') return pointer\n    throw new Error('Invalid JSON pointer.')\n  } else if (Array.isArray(pointer)) {\n    for (const part of pointer) {\n      if (typeof part !== 'string' && typeof part !== 'number') {\n        throw new Error('Invalid JSON pointer. Must be of type string or number.')\n      }\n    }\n    return pointer\n  }\n\n  throw new Error('Invalid JSON pointer.')\n}\n\nfunction get (obj, pointer) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  var len = pointer.length\n  if (len === 1) return obj\n\n  for (var p = 1; p < len;) {\n    obj = obj[untilde(pointer[p++])]\n    if (len === p) return obj\n    if (typeof obj !== 'object' || obj === null) return undefined\n  }\n}\n\nfunction set (obj, pointer, value) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  if (pointer.length === 0) throw new Error('Invalid JSON pointer for set.')\n  return setter(obj, pointer, value)\n}\n\nfunction compile (pointer) {\n  var compiled = compilePointer(pointer)\n  return {\n    get: function (object) {\n      return get(object, compiled)\n    },\n    set: function (object, value) {\n      return set(object, compiled, value)\n    }\n  }\n}\n\nexports.get = get\nexports.set = set\nexports.compile = compile\n", "/**\n * Create an OpenAPI specification for a Hono application\n * @param app - The Hono application to create the OpenAPI specification for\n * @param options - The options for the OpenAPI specification\n * @returns The OpenAPI specification\n * @example\n * ```ts\n * const app = new Hono();\n *\n * app.get(\"/\", (c) => c.text(\"Hello, World!\"));\n *\n * app.get(\"/openapi.json\", (c) => {\n *   const spec = createOpenAPISpec(app, {\n *     info: { title: \"My API\", version: \"1.0.0\" },\n *   });\n *   return c.json(spec);\n * });\n * ```\n */\nexport function createOpenAPISpec(app, options) {\n    const routes = app.routes;\n    const paths = routes\n        .filter(({ method }) => method.toLowerCase() !== \"all\")\n        .reduce((paths, { path, method }) => {\n        const methodLower = method.toLowerCase();\n        // Convert Hono path params (e.g. /users/:id) to OpenAPI path params (e.g. /users/{id})\n        // and extract the param names for documentation\n        const { openApiPath, pathParams } = (path.match(/:([^/]+)/g) || []).reduce((acc, param) => ({\n            openApiPath: acc.openApiPath.replace(param, `{${param.slice(1)}}`),\n            pathParams: [...acc.pathParams, param.slice(1)],\n        }), { openApiPath: path, pathParams: [] });\n        const operation = {\n            summary: `${method.toUpperCase()} ${openApiPath}`,\n            ...(pathParams.length > 0 && {\n                parameters: pathParams.map((param) => ({\n                    name: param,\n                    in: \"path\",\n                    required: true,\n                    schema: { type: \"string\" },\n                })),\n            }),\n            responses: {\n                \"200\": { description: \"Successful operation\" },\n            },\n        };\n        paths[openApiPath] = {\n            ...paths[openApiPath],\n            [methodLower]: operation,\n        };\n        return paths;\n    }, {});\n    // Construct the final OpenAPI spec without spread operators\n    const spec = {\n        openapi: \"3.0.0\",\n        info: options.info ?? { title: \"Hono API\", version: \"1.0.0\" },\n        paths,\n    };\n    if (options.tags) {\n        spec.tags = options.tags;\n    }\n    if (options.servers) {\n        spec.servers = options.servers;\n    }\n    if (options.components) {\n        spec.components = options.components;\n    }\n    if (options.security) {\n        spec.security = options.security;\n    }\n    return spec;\n}\n", "export const DEFAULT_PLAYGROUND_SERVICES_URL = \"https://services.fp.dev\";\n/**\n * Fiberplane services URL.\n */\nexport const ENV_FIBERPLANE_SERVICES_URL = \"FIBERPLANE_SERVICES_URL\";\n/**\n * Fiberplane otel-worker auth token.\n */\nexport const ENV_FIBERPLANE_OTEL_TOKEN = \"FIBERPLANE_OTEL_TOKEN\";\n/**\n * Fiberplane otel-worker auth token.\n * @deprecated Use {@link ENV_FIBERPLANE_OTEL_TOKEN} instead.\n */\nexport const ENV_FPX_AUTH_TOKEN = \"FPX_AUTH_TOKEN\";\n/**\n * Fiberplane otel-worker endpoint (or any other OpenTelemetry collector endpoint)\n */\nexport const ENV_FIBERPLANE_OTEL_ENDPOINT = \"FIBERPLANE_OTEL_ENDPOINT\";\n/**\n * Fiberplane otel-worker endpoint (or any other OpenTelemetry collector endpoint)\n * @deprecated Use {@link ENV_FIBERPLANE_OTEL_ENDPOINT} instead.\n */\nexport const ENV_FPX_ENDPOINT = \"FPX_ENDPOINT\";\n", "export function logIfDebug(debug, message, ...params) {\n    try {\n        // If debug is a boolean, we use it directly\n        // If \"debug\" is a Context, we check the debug flag from the context's variable's map\n        const debugEnabled = typeof debug === \"boolean\" ? debug : !!debug?.get(\"debug\");\n        if (debugEnabled) {\n            console.debug(\"[fiberplane:debug] \", message, ...params);\n        }\n    }\n    catch {\n        // If the debug log failed for whatever reason, we'll just swallow the error\n    }\n}\n", "/**\n * We export a (frozen) web standard fetch function that can be used for internal fiberplane api requests.\n *\n * This is useful for the case where the user has also instrumented their app with the @fiberplane/hono-otel package.\n *\n * In this case, we don't want to use the instrumented fetch function for internal requests,\n * otherwise we'll end up with rogue spans for internal requests.\n */\nexport const webStandardFetch = fetch;\n", "import { Hono } from \"hono\";\nimport { logIfDebug } from \"../../debug.js\";\nexport default function createAssistantApiRoute(apiKey, fetchFn, fiberplaneServicesUrl) {\n    const app = new Hono();\n    // Proxy all requests to fp-services but attach a token\n    app.all(\"*\", async (c) => {\n        logIfDebug(c, \"[assistant]\", `- ${c.req.method} ${c.req.path} -`, \"Proxying request to fiberplane api\");\n        const url = `${fiberplaneServicesUrl}${c.req.path}`;\n        const contentType = c.req.header(\"content-type\");\n        const headers = new Headers();\n        // Only include the bare minimum authentication and content-type headers\n        headers.set(\"Authorization\", `Bearer ${apiKey}`);\n        if (contentType) {\n            logIfDebug(c, \"[assistant]\", `- ${c.req.method} ${c.req.path} -`, \"content type attached to proxied request:\", contentType);\n            headers.set(\"content-type\", contentType);\n        }\n        const result = fetchFn(url, {\n            method: c.req.method,\n            headers,\n            body: c.req.raw.body,\n        });\n        return result;\n    });\n    return app;\n}\n", "import { Hono } from \"hono\";\nimport { logIfDebug } from \"../../debug.js\";\nexport default function createReportsApiRoute(apiKey, fetchFn, fiberplaneServicesUrl) {\n    const app = new Hono();\n    // Proxy all requests to fp-services but attach a token\n    app.all(\"*\", async (c) => {\n        logIfDebug(c, \"[reports]\", `- ${c.req.method} ${c.req.path} -`, \"Proxying request to fiberplane api\");\n        const url = `${fiberplaneServicesUrl}${c.req.path}`;\n        const contentType = c.req.header(\"content-type\");\n        const headers = new Headers();\n        // Only include the bare minimum authentication and content-type headers\n        headers.set(\"Authorization\", `Bearer ${apiKey}`);\n        if (contentType) {\n            logIfDebug(c, \"[reports]\", `- ${c.req.method} ${c.req.path} -`, \"content type attached to proxied request:\", contentType);\n            headers.set(\"content-type\", contentType);\n        }\n        const result = fetchFn(url, {\n            method: c.req.method,\n            headers,\n            body: c.req.raw.body,\n        });\n        return result;\n    });\n    return app;\n}\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\"\n        ? params(data)\n        : typeof params === \"string\"\n            ? { message: params }\n            : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nfunction custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    var _a, _b;\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "export class BaseService {\n    apiKey;\n    baseUrl;\n    fetch;\n    constructor(apiKey, baseUrl, fetch) {\n        this.apiKey = apiKey;\n        this.baseUrl = baseUrl;\n        this.fetch = fetch;\n    }\n    async request(schema, endpoint, options = {}) {\n        const url = `${this.baseUrl}${endpoint}`;\n        const headers = {\n            Authorization: `Bearer ${this.apiKey}`,\n            \"Content-Type\": \"application/json\",\n            ...options.headers,\n        };\n        const response = await this.fetch(url, { ...options, headers });\n        if (!response.ok) {\n            throw new Error(`API request failed: ${response.statusText}`);\n        }\n        const json = await response.json();\n        return schema.parse(json);\n    }\n}\n", "import { z } from \"zod\";\nimport { BaseService } from \"./base.js\";\nconst CreateTokenResponseSchema = z.object({ token: z.string() });\nconst VerifyTokenResponseSchema = z.object({ valid: z.boolean() });\nconst RevokeTokenResponseSchema = z.object({ success: z.boolean() });\nexport class TokenService extends BaseService {\n    async createToken(metadata) {\n        return this.request(CreateTokenResponseSchema, \"/tokens\", {\n            method: \"PUT\",\n            body: JSON.stringify({ metadata }),\n        });\n    }\n    async verifyToken(token) {\n        return this.request(VerifyTokenResponseSchema, \"/tokens/verify\", {\n            method: \"POST\",\n            body: JSON.stringify({ token }),\n        });\n    }\n    async revokeToken(token) {\n        return this.request(RevokeTokenResponseSchema, `/tokens/revoke/${token}`, {\n            method: \"DELETE\",\n        });\n    }\n}\n", "import { TokenService } from \"./tokens.js\";\nexport class FpService {\n    tokens;\n    constructor({ apiKey, baseUrl = \"http://localhost:7676/api\", fetch, }) {\n        this.tokens = new TokenService(apiKey, baseUrl, fetch);\n    }\n}\n", "import { Hono } from \"hono\";\nimport { z } from \"zod\";\nimport { logIfDebug } from \"../../debug.js\";\nimport { FpService } from \"../../services/index.js\";\n// Temporary implementation\nexport default function createTokensApiRoute(apiKey, fetchFn, fiberplaneServicesUrl) {\n    const app = new Hono();\n    const service = new FpService({\n        apiKey,\n        fetch: fetchFn,\n        baseUrl: `${fiberplaneServicesUrl}/api`,\n    });\n    app.get(\"/\", async (c) => {\n        logIfDebug(c, \"[tokens]\", \"- GET / -\");\n        c.json({ lol: \"broek\" });\n    });\n    app.put(\"/\", async (c) => {\n        logIfDebug(c, \"[tokens]\", \"- PUT / -\");\n        const requestBody = await c.req.json();\n        const { metadata } = z.object({ metadata: z.string() }).parse(requestBody);\n        const response = await service.tokens.createToken(metadata);\n        logIfDebug(c, \"[tokens]\", \"- PUT / -\", \"Token generated:\", response);\n        return c.json(response);\n    });\n    app.post(\"/verify\", async (c) => {\n        logIfDebug(c, \"[tokens]\", \"- POST /verify -\");\n        const requestBody = await c.req.json();\n        const { token } = z.object({ token: z.string() }).parse(requestBody);\n        const response = await service.tokens.verifyToken(token);\n        logIfDebug(c, \"[tokens]\", \"- POST /verify -\", \"Token verified:\", response);\n        return c.json(response);\n    });\n    app.delete(\"/revoke\", async (c) => {\n        logIfDebug(c, \"[tokens]\", \"- DELETE /revoke -\");\n        const requestBody = await c.req.json();\n        const { token } = z.object({ token: z.string() }).parse(requestBody);\n        const response = await service.tokens.revokeToken(token);\n        logIfDebug(c, \"[tokens]\", \"- DELETE /revoke -\", \"Token revoked:\", response);\n        return c.json(response);\n    });\n    return app;\n}\n", "import { Hono } from \"hono\";\nimport { logIfDebug } from \"../../debug.js\";\nexport default function createWorkflowsApiRoute(apiKey, fetchFn, fiberplaneServicesUrl) {\n    const app = new Hono();\n    // Proxy all requests to fp-services but attach a token\n    app.all(\"*\", async (c) => {\n        const url = `${fiberplaneServicesUrl}${c.req.path}`;\n        const contentType = c.req.header(\"content-type\");\n        const partitionKey = c.req.header(\"X-Fiberplane-Partition-Key\");\n        logIfDebug(c, \"[workflows]\", `- ${c.req.method} ${c.req.path} -`, \"Proxying request to: \", url);\n        const headers = new Headers();\n        // Only include the bare minimum authentication and content-type headers\n        headers.set(\"Authorization\", `Bearer ${apiKey}`);\n        if (contentType) {\n            logIfDebug(c, \"[workflows]\", `- ${c.req.method} ${c.req.path} -`, \"content type attached to proxied request:\", contentType);\n            headers.set(\"content-type\", contentType);\n        }\n        if (partitionKey) {\n            headers.set(\"X-Fiberplane-Partition-Key\", partitionKey);\n            logIfDebug(c, \"[workflows]\", `- ${c.req.method} ${c.req.path} -`, \"partition key attached to proxied request:\", partitionKey);\n        }\n        const result = fetchFn(url, {\n            method: c.req.method,\n            headers,\n            body: c.req.raw.body,\n        });\n        return result;\n    });\n    return app;\n}\n", "import { Hono } from \"hono\";\nimport createAssistantApiRoute from \"./assistant.js\";\nimport createReportsApiRoute from \"./reports.js\";\nimport createTokensApiRoute from \"./tokens.js\";\nimport createWorkflowsApiRoute from \"./workflows.js\";\n/**\n * Creates the internal API router (except for the tracing routes)\n *\n * @NOTE - Tracing routes are not gated by a Fiberplane API key,\n *         so those routes are set up in a different factory.\n */\nexport default function createApiRoutes(fetchFn, apiKey, fiberplaneServicesUrl) {\n    const app = new Hono();\n    app.route(\"/workflows\", createWorkflowsApiRoute(apiKey, fetchFn, fiberplaneServicesUrl));\n    app.route(\"/tokens\", createTokensApiRoute(apiKey, fetchFn, fiberplaneServicesUrl));\n    app.route(\"/reports\", createReportsApiRoute(apiKey, fetchFn, fiberplaneServicesUrl));\n    app.route(\"/assistant\", createAssistantApiRoute(apiKey, fetchFn, fiberplaneServicesUrl));\n    return app;\n}\n", "import { Hono } from \"hono\";\nimport { logIfDebug } from \"../../debug.js\";\nexport default function createTracesApiRoute(fetchFn, otelEndpoint, otelToken) {\n    const app = new Hono();\n    app.get(\"/\", async (c) => {\n        logIfDebug(c, \"[traces]\", \"- GET / -\", \"Proxying request to fiberplane api\");\n        if (!otelEndpoint) {\n            logIfDebug(c, \"[traces]\", \"- GET / -\", \"otel endpoint undefined, returning early\");\n            return c.json({ error: \"Tracing is not enabled\" }, 402);\n        }\n        if (!otelToken) {\n            logIfDebug(c, \"[traces]\", \"- GET / -\", \"otel token undefined, skipping auth header\");\n        }\n        else {\n            logIfDebug(c, \"[traces]\", \"- GET / -\", \"otel token defined, adding auth header\");\n        }\n        try {\n            const otelBaseUrl = getOtelBaseUrl(otelEndpoint);\n            const requestUrl = `${otelBaseUrl}/v1/traces`;\n            const response = await fetchFn(requestUrl, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\",\n                    ...(otelToken ? { Authorization: `Bearer ${otelToken}` } : {}),\n                },\n            });\n            logIfDebug(c, \"[traces]\", \"- GET / -\", \"API response from traces endpoint:\", response);\n            const data = (await response.json());\n            return c.json(data);\n        }\n        catch (error) {\n            console.error(\"Failed to fetch traces:\", error);\n            return c.json({ error: \"Failed to fetch traces\" }, 500);\n        }\n    });\n    app.get(\"/:traceId/spans\", async (c) => {\n        logIfDebug(c, \"[traces]\", \"- GET /:traceId/spans -\", \"Proxying request to fiberplane api\");\n        if (!otelEndpoint) {\n            return c.json({ error: \"Tracing is not enabled\" }, 402);\n        }\n        if (!otelToken) {\n            logIfDebug(c, \"[traces]\", \"- GET /:traceId/spans -\", \"otel token undefined, skipping auth header\");\n        }\n        try {\n            const otelBaseUrl = getOtelBaseUrl(otelEndpoint);\n            const traceId = c.req.param(\"traceId\");\n            const requestUrl = `${otelBaseUrl}/v1/traces/${traceId}/spans`;\n            const response = await fetch(requestUrl, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\",\n                    ...(otelToken ? { Authorization: `Bearer ${otelToken}` } : {}),\n                },\n            });\n            logIfDebug(c, \"[traces]\", \"- GET /:traceId/spans -\", \"API response from spans endpoint:\", response);\n            const data = (await response.json());\n            return c.json(data);\n        }\n        catch (error) {\n            console.error(\"Failed to fetch spans:\", error);\n            return c.json({ error: \"Failed to fetch spans\" }, 500);\n        }\n    });\n    return app;\n}\nfunction getOtelBaseUrl(otelEndpoint) {\n    const url = new URL(otelEndpoint);\n    return url.origin;\n}\n", "// src/jsx/constants.ts\nvar DOM_RENDERER = Symbol(\"RENDERER\");\nvar DOM_ERROR_HANDLER = Symbol(\"ERROR_HANDLER\");\nvar DOM_STASH = Symbol(\"STASH\");\nvar DOM_INTERNAL_TAG = Symbol(\"INTERNAL\");\nvar DOM_MEMO = Symbol(\"MEMO\");\nvar PERMALINK = Symbol(\"PERMALINK\");\nexport {\n  DOM_ERROR_HANDLER,\n  DOM_INTERNAL_TAG,\n  DOM_MEMO,\n  DOM_RENDERER,\n  DOM_STASH,\n  PERMALINK\n};\n", "// src/jsx/dom/utils.ts\nimport { DOM_INTERNAL_TAG } from \"../constants.js\";\nvar setInternalTagFlag = (fn) => {\n  ;\n  fn[DOM_INTERNAL_TAG] = true;\n  return fn;\n};\nexport {\n  setInternalTagFlag\n};\n", "// src/jsx/dom/context.ts\nimport { DOM_ERROR_HANDLER } from \"../constants.js\";\nimport { globalContexts } from \"../context.js\";\nimport { setInternalTagFlag } from \"./utils.js\";\nvar createContextProviderFunction = (values) => ({ value, children }) => {\n  if (!children) {\n    return void 0;\n  }\n  const props = {\n    children: [\n      {\n        tag: setInternalTagFlag(() => {\n          values.push(value);\n        }),\n        props: {}\n      }\n    ]\n  };\n  if (Array.isArray(children)) {\n    props.children.push(...children.flat());\n  } else {\n    props.children.push(children);\n  }\n  props.children.push({\n    tag: setInternalTagFlag(() => {\n      values.pop();\n    }),\n    props: {}\n  });\n  const res = { tag: \"\", props, type: \"\" };\n  res[DOM_ERROR_HANDLER] = (err) => {\n    values.pop();\n    throw err;\n  };\n  return res;\n};\nvar createContext = (defaultValue) => {\n  const values = [defaultValue];\n  const context = createContextProviderFunction(values);\n  context.values = values;\n  context.Provider = context;\n  globalContexts.push(context);\n  return context;\n};\nexport {\n  createContext,\n  createContextProviderFunction\n};\n", "// src/jsx/context.ts\nimport { raw } from \"../helper/html/index.js\";\nimport { JSXFragmentNode } from \"./base.js\";\nimport { DOM_RENDERER } from \"./constants.js\";\nimport { createContextProviderFunction } from \"./dom/context.js\";\nvar globalContexts = [];\nvar createContext = (defaultValue) => {\n  const values = [defaultValue];\n  const context = (props) => {\n    values.push(props.value);\n    let string;\n    try {\n      string = props.children ? (Array.isArray(props.children) ? new JSXFragmentNode(\"\", {}, props.children) : props.children).toString() : \"\";\n    } finally {\n      values.pop();\n    }\n    if (string instanceof Promise) {\n      return string.then((resString) => raw(resString, resString.callbacks));\n    } else {\n      return raw(string);\n    }\n  };\n  context.values = values;\n  context.Provider = context;\n  context[DOM_RENDERER] = createContextProviderFunction(values);\n  globalContexts.push(context);\n  return context;\n};\nvar useContext = (context) => {\n  return context.values.at(-1);\n};\nexport {\n  createContext,\n  globalContexts,\n  useContext\n};\n", "// src/jsx/intrinsic-element/common.ts\nvar deDupeKeyMap = {\n  title: [],\n  script: [\"src\"],\n  style: [\"data-href\"],\n  link: [\"href\"],\n  meta: [\"name\", \"httpEquiv\", \"charset\", \"itemProp\"]\n};\nvar domRenderers = {};\nvar dataPrecedenceAttr = \"data-precedence\";\nexport {\n  dataPrecedenceAttr,\n  deDupeKeyMap,\n  domRenderers\n};\n", "// src/jsx/intrinsic-element/components.ts\nimport { raw } from \"../../helper/html/index.js\";\nimport { JSXNode, getNameSpaceContext } from \"../base.js\";\nimport { toArray } from \"../children.js\";\nimport { PERMALINK } from \"../constants.js\";\nimport { useContext } from \"../context.js\";\nimport { dataPrecedenceAttr, deDupeKeyMap } from \"./common.js\";\nvar metaTagMap = /* @__PURE__ */ new WeakMap();\nvar insertIntoHead = (tagName, tag, props, precedence) => ({ buffer, context }) => {\n  if (!buffer) {\n    return;\n  }\n  const map = metaTagMap.get(context) || {};\n  metaTagMap.set(context, map);\n  const tags = map[tagName] ||= [];\n  let duped = false;\n  const deDupeKeys = deDupeKeyMap[tagName];\n  if (deDupeKeys.length > 0) {\n    LOOP:\n      for (const [, tagProps] of tags) {\n        for (const key of deDupeKeys) {\n          if ((tagProps?.[key] ?? null) === props?.[key]) {\n            duped = true;\n            break LOOP;\n          }\n        }\n      }\n  }\n  if (duped) {\n    buffer[0] = buffer[0].replaceAll(tag, \"\");\n  } else if (deDupeKeys.length > 0) {\n    tags.push([tag, props, precedence]);\n  } else {\n    tags.unshift([tag, props, precedence]);\n  }\n  if (buffer[0].indexOf(\"</head>\") !== -1) {\n    let insertTags;\n    if (precedence === void 0) {\n      insertTags = tags.map(([tag2]) => tag2);\n    } else {\n      const precedences = [];\n      insertTags = tags.map(([tag2, , precedence2]) => {\n        let order = precedences.indexOf(precedence2);\n        if (order === -1) {\n          precedences.push(precedence2);\n          order = precedences.length - 1;\n        }\n        return [tag2, order];\n      }).sort((a, b) => a[1] - b[1]).map(([tag2]) => tag2);\n    }\n    insertTags.forEach((tag2) => {\n      buffer[0] = buffer[0].replaceAll(tag2, \"\");\n    });\n    buffer[0] = buffer[0].replace(/(?=<\\/head>)/, insertTags.join(\"\"));\n  }\n};\nvar returnWithoutSpecialBehavior = (tag, children, props) => raw(new JSXNode(tag, props, toArray(children ?? [])).toString());\nvar documentMetadataTag = (tag, children, props, sort) => {\n  if (\"itemProp\" in props) {\n    return returnWithoutSpecialBehavior(tag, children, props);\n  }\n  let { precedence, blocking, ...restProps } = props;\n  precedence = sort ? precedence ?? \"\" : void 0;\n  if (sort) {\n    restProps[dataPrecedenceAttr] = precedence;\n  }\n  const string = new JSXNode(tag, restProps, toArray(children || [])).toString();\n  if (string instanceof Promise) {\n    return string.then(\n      (resString) => raw(string, [\n        ...resString.callbacks || [],\n        insertIntoHead(tag, resString, restProps, precedence)\n      ])\n    );\n  } else {\n    return raw(string, [insertIntoHead(tag, string, restProps, precedence)]);\n  }\n};\nvar title = ({ children, ...props }) => {\n  const nameSpaceContext = getNameSpaceContext();\n  if (nameSpaceContext) {\n    const context = useContext(nameSpaceContext);\n    if (context === \"svg\" || context === \"head\") {\n      return new JSXNode(\n        \"title\",\n        props,\n        toArray(children ?? [])\n      );\n    }\n  }\n  return documentMetadataTag(\"title\", children, props, false);\n};\nvar script = ({\n  children,\n  ...props\n}) => {\n  const nameSpaceContext = getNameSpaceContext();\n  if ([\"src\", \"async\"].some((k) => !props[k]) || nameSpaceContext && useContext(nameSpaceContext) === \"head\") {\n    return returnWithoutSpecialBehavior(\"script\", children, props);\n  }\n  return documentMetadataTag(\"script\", children, props, false);\n};\nvar style = ({\n  children,\n  ...props\n}) => {\n  if (![\"href\", \"precedence\"].every((k) => k in props)) {\n    return returnWithoutSpecialBehavior(\"style\", children, props);\n  }\n  props[\"data-href\"] = props.href;\n  delete props.href;\n  return documentMetadataTag(\"style\", children, props, true);\n};\nvar link = ({ children, ...props }) => {\n  if ([\"onLoad\", \"onError\"].some((k) => k in props) || props.rel === \"stylesheet\" && (!(\"precedence\" in props) || \"disabled\" in props)) {\n    return returnWithoutSpecialBehavior(\"link\", children, props);\n  }\n  return documentMetadataTag(\"link\", children, props, \"precedence\" in props);\n};\nvar meta = ({ children, ...props }) => {\n  const nameSpaceContext = getNameSpaceContext();\n  if (nameSpaceContext && useContext(nameSpaceContext) === \"head\") {\n    return returnWithoutSpecialBehavior(\"meta\", children, props);\n  }\n  return documentMetadataTag(\"meta\", children, props, false);\n};\nvar newJSXNode = (tag, { children, ...props }) => new JSXNode(tag, props, toArray(children ?? []));\nvar form = (props) => {\n  if (typeof props.action === \"function\") {\n    props.action = PERMALINK in props.action ? props.action[PERMALINK] : void 0;\n  }\n  return newJSXNode(\"form\", props);\n};\nvar formActionableElement = (tag, props) => {\n  if (typeof props.formAction === \"function\") {\n    props.formAction = PERMALINK in props.formAction ? props.formAction[PERMALINK] : void 0;\n  }\n  return newJSXNode(tag, props);\n};\nvar input = (props) => formActionableElement(\"input\", props);\nvar button = (props) => formActionableElement(\"button\", props);\nexport {\n  button,\n  form,\n  input,\n  link,\n  meta,\n  script,\n  style,\n  title\n};\n", "// src/jsx/children.ts\nvar toArray = (children) => Array.isArray(children) ? children : [children];\nvar Children = {\n  map: (children, fn) => toArray(children).map(fn),\n  forEach: (children, fn) => {\n    toArray(children).forEach(fn);\n  },\n  count: (children) => toArray(children).length,\n  only: (_children) => {\n    const children = toArray(_children);\n    if (children.length !== 1) {\n      throw new Error(\"Children.only() expects only one child\");\n    }\n    return children[0];\n  },\n  toArray\n};\nexport {\n  Children,\n  toArray\n};\n", "// src/jsx/utils.ts\nvar normalizeElementKeyMap = /* @__PURE__ */ new Map([\n  [\"className\", \"class\"],\n  [\"htmlFor\", \"for\"],\n  [\"crossOrigin\", \"crossorigin\"],\n  [\"httpEquiv\", \"http-equiv\"],\n  [\"itemProp\", \"itemprop\"],\n  [\"fetchPriority\", \"fetchpriority\"],\n  [\"noModule\", \"nomodule\"],\n  [\"formAction\", \"formaction\"]\n]);\nvar normalizeIntrinsicElementKey = (key) => normalizeElementKeyMap.get(key) || key;\nvar styleObjectForEach = (style, fn) => {\n  for (const [k, v] of Object.entries(style)) {\n    const key = k[0] === \"-\" || !/[A-Z]/.test(k) ? k : k.replace(/[A-Z]/g, (m) => `-${m.toLowerCase()}`);\n    fn(\n      key,\n      v == null ? null : typeof v === \"number\" ? !key.match(\n        /^(?:a|border-im|column(?:-c|s)|flex(?:$|-[^b])|grid-(?:ar|[^a])|font-w|li|or|sca|st|ta|wido|z)|ty$/\n      ) ? `${v}px` : `${v}` : v\n    );\n  }\n};\nexport {\n  normalizeIntrinsicElementKey,\n  styleObjectForEach\n};\n", "// src/jsx/base.ts\nimport { raw } from \"../helper/html/index.js\";\nimport { escapeToBuffer, resolveCallbackSync, stringBufferToString } from \"../utils/html.js\";\nimport { DOM_RENDERER, DOM_MEMO } from \"./constants.js\";\nimport { createContext, globalContexts, useContext } from \"./context.js\";\nimport { domRenderers } from \"./intrinsic-element/common.js\";\nimport * as intrinsicElementTags from \"./intrinsic-element/components.js\";\nimport { normalizeIntrinsicElementKey, styleObjectForEach } from \"./utils.js\";\nvar nameSpaceContext = void 0;\nvar getNameSpaceContext = () => nameSpaceContext;\nvar toSVGAttributeName = (key) => /[A-Z]/.test(key) && key.match(\n  /^(?:al|basel|clip(?:Path|Rule)$|co|do|fill|fl|fo|gl|let|lig|i|marker[EMS]|o|pai|pointe|sh|st[or]|text[^L]|tr|u|ve|w)/\n) ? key.replace(/([A-Z])/g, \"-$1\").toLowerCase() : key;\nvar emptyTags = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n];\nvar booleanAttributes = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"defer\",\n  \"disabled\",\n  \"download\",\n  \"formnovalidate\",\n  \"hidden\",\n  \"inert\",\n  \"ismap\",\n  \"itemscope\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"selected\"\n];\nvar childrenToStringToBuffer = (children, buffer) => {\n  for (let i = 0, len = children.length; i < len; i++) {\n    const child = children[i];\n    if (typeof child === \"string\") {\n      escapeToBuffer(child, buffer);\n    } else if (typeof child === \"boolean\" || child === null || child === void 0) {\n      continue;\n    } else if (child instanceof JSXNode) {\n      child.toStringToBuffer(buffer);\n    } else if (typeof child === \"number\" || child.isEscaped) {\n      ;\n      buffer[0] += child;\n    } else if (child instanceof Promise) {\n      buffer.unshift(\"\", child);\n    } else {\n      childrenToStringToBuffer(child, buffer);\n    }\n  }\n};\nvar JSXNode = class {\n  tag;\n  props;\n  key;\n  children;\n  isEscaped = true;\n  localContexts;\n  constructor(tag, props, children) {\n    this.tag = tag;\n    this.props = props;\n    this.children = children;\n  }\n  get type() {\n    return this.tag;\n  }\n  get ref() {\n    return this.props.ref || null;\n  }\n  toString() {\n    const buffer = [\"\"];\n    this.localContexts?.forEach(([context, value]) => {\n      context.values.push(value);\n    });\n    try {\n      this.toStringToBuffer(buffer);\n    } finally {\n      this.localContexts?.forEach(([context]) => {\n        context.values.pop();\n      });\n    }\n    return buffer.length === 1 ? \"callbacks\" in buffer ? resolveCallbackSync(raw(buffer[0], buffer.callbacks)).toString() : buffer[0] : stringBufferToString(buffer, buffer.callbacks);\n  }\n  toStringToBuffer(buffer) {\n    const tag = this.tag;\n    const props = this.props;\n    let { children } = this;\n    buffer[0] += `<${tag}`;\n    const normalizeKey = nameSpaceContext && useContext(nameSpaceContext) === \"svg\" ? (key) => toSVGAttributeName(normalizeIntrinsicElementKey(key)) : (key) => normalizeIntrinsicElementKey(key);\n    for (let [key, v] of Object.entries(props)) {\n      key = normalizeKey(key);\n      if (key === \"children\") {\n      } else if (key === \"style\" && typeof v === \"object\") {\n        let styleStr = \"\";\n        styleObjectForEach(v, (property, value) => {\n          if (value != null) {\n            styleStr += `${styleStr ? \";\" : \"\"}${property}:${value}`;\n          }\n        });\n        buffer[0] += ' style=\"';\n        escapeToBuffer(styleStr, buffer);\n        buffer[0] += '\"';\n      } else if (typeof v === \"string\") {\n        buffer[0] += ` ${key}=\"`;\n        escapeToBuffer(v, buffer);\n        buffer[0] += '\"';\n      } else if (v === null || v === void 0) {\n      } else if (typeof v === \"number\" || v.isEscaped) {\n        buffer[0] += ` ${key}=\"${v}\"`;\n      } else if (typeof v === \"boolean\" && booleanAttributes.includes(key)) {\n        if (v) {\n          buffer[0] += ` ${key}=\"\"`;\n        }\n      } else if (key === \"dangerouslySetInnerHTML\") {\n        if (children.length > 0) {\n          throw \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\";\n        }\n        children = [raw(v.__html)];\n      } else if (v instanceof Promise) {\n        buffer[0] += ` ${key}=\"`;\n        buffer.unshift('\"', v);\n      } else if (typeof v === \"function\") {\n        if (!key.startsWith(\"on\")) {\n          throw `Invalid prop '${key}' of type 'function' supplied to '${tag}'.`;\n        }\n      } else {\n        buffer[0] += ` ${key}=\"`;\n        escapeToBuffer(v.toString(), buffer);\n        buffer[0] += '\"';\n      }\n    }\n    if (emptyTags.includes(tag) && children.length === 0) {\n      buffer[0] += \"/>\";\n      return;\n    }\n    buffer[0] += \">\";\n    childrenToStringToBuffer(children, buffer);\n    buffer[0] += `</${tag}>`;\n  }\n};\nvar JSXFunctionNode = class extends JSXNode {\n  toStringToBuffer(buffer) {\n    const { children } = this;\n    const res = this.tag.call(null, {\n      ...this.props,\n      children: children.length <= 1 ? children[0] : children\n    });\n    if (typeof res === \"boolean\" || res == null) {\n      return;\n    } else if (res instanceof Promise) {\n      if (globalContexts.length === 0) {\n        buffer.unshift(\"\", res);\n      } else {\n        const currentContexts = globalContexts.map((c) => [c, c.values.at(-1)]);\n        buffer.unshift(\n          \"\",\n          res.then((childRes) => {\n            if (childRes instanceof JSXNode) {\n              childRes.localContexts = currentContexts;\n            }\n            return childRes;\n          })\n        );\n      }\n    } else if (res instanceof JSXNode) {\n      res.toStringToBuffer(buffer);\n    } else if (typeof res === \"number\" || res.isEscaped) {\n      buffer[0] += res;\n      if (res.callbacks) {\n        buffer.callbacks ||= [];\n        buffer.callbacks.push(...res.callbacks);\n      }\n    } else {\n      escapeToBuffer(res, buffer);\n    }\n  }\n};\nvar JSXFragmentNode = class extends JSXNode {\n  toStringToBuffer(buffer) {\n    childrenToStringToBuffer(this.children, buffer);\n  }\n};\nvar jsx = (tag, props, ...children) => {\n  props ??= {};\n  if (children.length) {\n    props.children = children.length === 1 ? children[0] : children;\n  }\n  const key = props.key;\n  delete props[\"key\"];\n  const node = jsxFn(tag, props, children);\n  node.key = key;\n  return node;\n};\nvar initDomRenderer = false;\nvar jsxFn = (tag, props, children) => {\n  if (!initDomRenderer) {\n    for (const k in domRenderers) {\n      ;\n      intrinsicElementTags[k][DOM_RENDERER] = domRenderers[k];\n    }\n    initDomRenderer = true;\n  }\n  if (typeof tag === \"function\") {\n    return new JSXFunctionNode(tag, props, children);\n  } else if (intrinsicElementTags[tag]) {\n    return new JSXFunctionNode(\n      intrinsicElementTags[tag],\n      props,\n      children\n    );\n  } else if (tag === \"svg\" || tag === \"head\") {\n    nameSpaceContext ||= createContext(\"\");\n    return new JSXNode(tag, props, [\n      new JSXFunctionNode(\n        nameSpaceContext,\n        {\n          value: tag\n        },\n        children\n      )\n    ]);\n  } else {\n    return new JSXNode(tag, props, children);\n  }\n};\nvar shallowEqual = (a, b) => {\n  if (a === b) {\n    return true;\n  }\n  const aKeys = Object.keys(a).sort();\n  const bKeys = Object.keys(b).sort();\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n  for (let i = 0, len = aKeys.length; i < len; i++) {\n    if (aKeys[i] === \"children\" && bKeys[i] === \"children\" && !a.children?.length && !b.children?.length) {\n      continue;\n    } else if (a[aKeys[i]] !== b[aKeys[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\nvar memo = (component, propsAreEqual = shallowEqual) => {\n  let computed = null;\n  let prevProps = void 0;\n  const wrapper = (props) => {\n    if (prevProps && !propsAreEqual(prevProps, props)) {\n      computed = null;\n    }\n    prevProps = props;\n    return computed ||= component(props);\n  };\n  wrapper[DOM_MEMO] = propsAreEqual;\n  wrapper[DOM_RENDERER] = component;\n  return wrapper;\n};\nvar Fragment = ({\n  children\n}) => {\n  return new JSXFragmentNode(\n    \"\",\n    {\n      children\n    },\n    Array.isArray(children) ? children : children ? [children] : []\n  );\n};\nvar isValidElement = (element) => {\n  return !!(element && typeof element === \"object\" && \"tag\" in element && \"props\" in element);\n};\nvar cloneElement = (element, props, ...children) => {\n  return jsx(\n    element.tag,\n    { ...element.props, ...props },\n    ...children\n  );\n};\nvar reactAPICompatVersion = \"19.0.0-hono-jsx\";\nexport {\n  Fragment,\n  JSXFragmentNode,\n  JSXNode,\n  booleanAttributes,\n  cloneElement,\n  getNameSpaceContext,\n  isValidElement,\n  jsx,\n  jsxFn,\n  memo,\n  reactAPICompatVersion,\n  shallowEqual\n};\n", "// src/jsx/jsx-dev-runtime.ts\nimport { jsxFn } from \"./base.js\";\nimport { Fragment } from \"./base.js\";\nfunction jsxDEV(tag, props, key) {\n  let node;\n  if (!props || !(\"children\" in props)) {\n    node = jsxFn(tag, props, []);\n  } else {\n    const children = props.children;\n    node = Array.isArray(children) ? jsxFn(tag, props, children) : jsxFn(tag, props, [children]);\n  }\n  node.key = key;\n  return node;\n}\nexport {\n  Fragment,\n  jsxDEV\n};\n", "import { jsx as _jsx, jsxs as _jsxs } from \"hono/jsx/jsx-runtime\";\nimport { Hono } from \"hono\";\nexport default function createPlayground(sanitizedOptions) {\n    const app = new Hono();\n    const { cdn, mountedPath, openapi } = sanitizedOptions;\n    const cssBundleUrl = new URL(\"index.css\", cdn).href;\n    const jsBundleUrl = new URL(\"index.js\", cdn).href;\n    app.get(\"/*\", (c) => {\n        return c.html(_jsxs(\"html\", { lang: \"en\", children: [_jsxs(\"head\", { children: [_jsx(\"title\", { children: \"API Playground\" }), _jsx(\"meta\", { charSet: \"utf-8\" }), _jsx(\"meta\", { name: \"viewport\", content: \"width=device-width, initial-scale=1\" }), _jsx(\"link\", { rel: \"stylesheet\", href: cssBundleUrl })] }), _jsxs(\"body\", { children: [_jsx(\"div\", { id: \"root\", \"data-options\": JSON.stringify({\n                                mountedPath,\n                                openapi,\n                            }) }), _jsx(\"script\", { type: \"module\", src: jsBundleUrl })] })] }));\n    });\n    return app;\n}\n", "// src/utils/cookie.ts\nimport { decodeURIComponent_ } from \"./url.js\";\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\nvar getCryptoKey = async (secret) => {\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\n};\nvar makeSignature = async (value, secret) => {\n  const key = await getCryptoKey(secret);\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\n};\nvar verifySignature = async (base64Signature, value, secret) => {\n  try {\n    const signatureBinStr = atob(base64Signature);\n    const signature = new Uint8Array(signatureBinStr.length);\n    for (let i = 0, len = signatureBinStr.length; i < len; i++) {\n      signature[i] = signatureBinStr.charCodeAt(i);\n    }\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\n  } catch {\n    return false;\n  }\n};\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\nvar parse = (cookie, name) => {\n  if (name && cookie.indexOf(name) === -1) {\n    return {};\n  }\n  const pairs = cookie.trim().split(\";\");\n  const parsedCookie = {};\n  for (let pairStr of pairs) {\n    pairStr = pairStr.trim();\n    const valueStartPos = pairStr.indexOf(\"=\");\n    if (valueStartPos === -1) {\n      continue;\n    }\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {\n      continue;\n    }\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"')) {\n      cookieValue = cookieValue.slice(1, -1);\n    }\n    if (validCookieValueRegEx.test(cookieValue)) {\n      parsedCookie[cookieName] = decodeURIComponent_(cookieValue);\n      if (name) {\n        break;\n      }\n    }\n  }\n  return parsedCookie;\n};\nvar parseSigned = async (cookie, secret, name) => {\n  const parsedCookie = {};\n  const secretKey = await getCryptoKey(secret);\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\n    const signatureStartPos = value.lastIndexOf(\".\");\n    if (signatureStartPos < 1) {\n      continue;\n    }\n    const signedValue = value.substring(0, signatureStartPos);\n    const signature = value.substring(signatureStartPos + 1);\n    if (signature.length !== 44 || !signature.endsWith(\"=\")) {\n      continue;\n    }\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\n    parsedCookie[key] = isVerified ? signedValue : false;\n  }\n  return parsedCookie;\n};\nvar _serialize = (name, value, opt = {}) => {\n  let cookie = `${name}=${value}`;\n  if (name.startsWith(\"__Secure-\") && !opt.secure) {\n    throw new Error(\"__Secure- Cookie must have Secure attributes\");\n  }\n  if (name.startsWith(\"__Host-\")) {\n    if (!opt.secure) {\n      throw new Error(\"__Host- Cookie must have Secure attributes\");\n    }\n    if (opt.path !== \"/\") {\n      throw new Error('__Host- Cookie must have Path attributes with \"/\"');\n    }\n    if (opt.domain) {\n      throw new Error(\"__Host- Cookie must not have Domain attributes\");\n    }\n  }\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\n    if (opt.maxAge > 3456e4) {\n      throw new Error(\n        \"Cookies Max-Age SHOULD NOT be greater than 400 days (34560000 seconds) in duration.\"\n      );\n    }\n    cookie += `; Max-Age=${opt.maxAge | 0}`;\n  }\n  if (opt.domain && opt.prefix !== \"host\") {\n    cookie += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    cookie += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    if (opt.expires.getTime() - Date.now() > 3456e7) {\n      throw new Error(\n        \"Cookies Expires SHOULD NOT be greater than 400 days (34560000 seconds) in the future.\"\n      );\n    }\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) {\n    cookie += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    cookie += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    cookie += `; SameSite=${opt.sameSite.charAt(0).toUpperCase() + opt.sameSite.slice(1)}`;\n  }\n  if (opt.priority) {\n    cookie += `; Priority=${opt.priority}`;\n  }\n  if (opt.partitioned) {\n    if (!opt.secure) {\n      throw new Error(\"Partitioned Cookie must have Secure attributes\");\n    }\n    cookie += \"; Partitioned\";\n  }\n  return cookie;\n};\nvar serialize = (name, value, opt) => {\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nvar serializeSigned = async (name, value, secret, opt = {}) => {\n  const signature = await makeSignature(value, secret);\n  value = `${value}.${signature}`;\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nexport {\n  parse,\n  parseSigned,\n  serialize,\n  serializeSigned\n};\n", "// src/helper/cookie/index.ts\nimport { parse, parseSigned, serialize, serializeSigned } from \"../../utils/cookie.js\";\nvar getCookie = (c, key, prefix) => {\n  const cookie = c.req.raw.headers.get(\"Cookie\");\n  if (typeof key === \"string\") {\n    if (!cookie) {\n      return void 0;\n    }\n    let finalKey = key;\n    if (prefix === \"secure\") {\n      finalKey = \"__Secure-\" + key;\n    } else if (prefix === \"host\") {\n      finalKey = \"__Host-\" + key;\n    }\n    const obj2 = parse(cookie, finalKey);\n    return obj2[finalKey];\n  }\n  if (!cookie) {\n    return {};\n  }\n  const obj = parse(cookie);\n  return obj;\n};\nvar getSignedCookie = async (c, secret, key, prefix) => {\n  const cookie = c.req.raw.headers.get(\"Cookie\");\n  if (typeof key === \"string\") {\n    if (!cookie) {\n      return void 0;\n    }\n    let finalKey = key;\n    if (prefix === \"secure\") {\n      finalKey = \"__Secure-\" + key;\n    } else if (prefix === \"host\") {\n      finalKey = \"__Host-\" + key;\n    }\n    const obj2 = await parseSigned(cookie, secret, finalKey);\n    return obj2[finalKey];\n  }\n  if (!cookie) {\n    return {};\n  }\n  const obj = await parseSigned(cookie, secret);\n  return obj;\n};\nvar setCookie = (c, name, value, opt) => {\n  let cookie;\n  if (opt?.prefix === \"secure\") {\n    cookie = serialize(\"__Secure-\" + name, value, { path: \"/\", ...opt, secure: true });\n  } else if (opt?.prefix === \"host\") {\n    cookie = serialize(\"__Host-\" + name, value, {\n      ...opt,\n      path: \"/\",\n      secure: true,\n      domain: void 0\n    });\n  } else {\n    cookie = serialize(name, value, { path: \"/\", ...opt });\n  }\n  c.header(\"Set-Cookie\", cookie, { append: true });\n};\nvar setSignedCookie = async (c, name, value, secret, opt) => {\n  let cookie;\n  if (opt?.prefix === \"secure\") {\n    cookie = await serializeSigned(\"__Secure-\" + name, value, secret, {\n      path: \"/\",\n      ...opt,\n      secure: true\n    });\n  } else if (opt?.prefix === \"host\") {\n    cookie = await serializeSigned(\"__Host-\" + name, value, secret, {\n      ...opt,\n      path: \"/\",\n      secure: true,\n      domain: void 0\n    });\n  } else {\n    cookie = await serializeSigned(name, value, secret, { path: \"/\", ...opt });\n  }\n  c.header(\"set-cookie\", cookie, { append: true });\n};\nvar deleteCookie = (c, name, opt) => {\n  const deletedCookie = getCookie(c, name);\n  setCookie(c, name, \"\", { ...opt, maxAge: 0 });\n  return deletedCookie;\n};\nexport {\n  deleteCookie,\n  getCookie,\n  getSignedCookie,\n  setCookie,\n  setSignedCookie\n};\n", "// src/http-exception.ts\nvar HTTPException = class extends Error {\n  res;\n  status;\n  constructor(status = 500, options) {\n    super(options?.message, { cause: options?.cause });\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      const newResponse = new Response(this.res.body, {\n        status: this.status,\n        headers: this.res.headers\n      });\n      return newResponse;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n", "// src/utils/buffer.ts\nimport { sha256 } from \"./crypto.js\";\nvar equal = (a, b) => {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  const va = new DataView(a);\n  const vb = new DataView(b);\n  let i = va.byteLength;\n  while (i--) {\n    if (va.getUint8(i) !== vb.getUint8(i)) {\n      return false;\n    }\n  }\n  return true;\n};\nvar timingSafeEqual = async (a, b, hashFunction) => {\n  if (!hashFunction) {\n    hashFunction = sha256;\n  }\n  const [sa, sb] = await Promise.all([hashFunction(a), hashFunction(b)]);\n  if (!sa || !sb) {\n    return false;\n  }\n  return sa === sb && a === b;\n};\nvar bufferToString = (buffer) => {\n  if (buffer instanceof ArrayBuffer) {\n    const enc = new TextDecoder(\"utf-8\");\n    return enc.decode(buffer);\n  }\n  return buffer;\n};\nvar bufferToFormData = (arrayBuffer, contentType) => {\n  const response = new Response(arrayBuffer, {\n    headers: {\n      \"Content-Type\": contentType\n    }\n  });\n  return response.formData();\n};\nexport {\n  bufferToFormData,\n  bufferToString,\n  equal,\n  timingSafeEqual\n};\n", "// src/validator/validator.ts\nimport { getCookie } from \"../helper/cookie/index.js\";\nimport { HTTPException } from \"../http-exception.js\";\nimport { bufferToFormData } from \"../utils/buffer.js\";\nvar jsonRegex = /^application\\/([a-z-\\.]+\\+)?json(;\\s*[a-zA-Z0-9\\-]+\\=([^;]+))*$/;\nvar multipartRegex = /^multipart\\/form-data(;\\s?boundary=[a-zA-Z0-9'\"()+_,\\-./:=?]+)?$/;\nvar urlencodedRegex = /^application\\/x-www-form-urlencoded(;\\s*[a-zA-Z0-9\\-]+\\=([^;]+))*$/;\nvar validator = (target, validationFunc) => {\n  return async (c, next) => {\n    let value = {};\n    const contentType = c.req.header(\"Content-Type\");\n    switch (target) {\n      case \"json\":\n        if (!contentType || !jsonRegex.test(contentType)) {\n          break;\n        }\n        try {\n          value = await c.req.json();\n        } catch {\n          const message = \"Malformed JSON in request body\";\n          throw new HTTPException(400, { message });\n        }\n        break;\n      case \"form\": {\n        if (!contentType || !(multipartRegex.test(contentType) || urlencodedRegex.test(contentType))) {\n          break;\n        }\n        let formData;\n        if (c.req.bodyCache.formData) {\n          formData = await c.req.bodyCache.formData;\n        } else {\n          try {\n            const arrayBuffer = await c.req.arrayBuffer();\n            formData = await bufferToFormData(arrayBuffer, contentType);\n            c.req.bodyCache.formData = formData;\n          } catch (e) {\n            let message = \"Malformed FormData request.\";\n            message += e instanceof Error ? ` ${e.message}` : ` ${String(e)}`;\n            throw new HTTPException(400, { message });\n          }\n        }\n        const form = {};\n        formData.forEach((value2, key) => {\n          if (key.endsWith(\"[]\")) {\n            ;\n            (form[key] ??= []).push(value2);\n          } else if (Array.isArray(form[key])) {\n            ;\n            form[key].push(value2);\n          } else if (key in form) {\n            form[key] = [form[key], value2];\n          } else {\n            form[key] = value2;\n          }\n        });\n        value = form;\n        break;\n      }\n      case \"query\":\n        value = Object.fromEntries(\n          Object.entries(c.req.queries()).map(([k, v]) => {\n            return v.length === 1 ? [k, v[0]] : [k, v];\n          })\n        );\n        break;\n      case \"param\":\n        value = c.req.param();\n        break;\n      case \"header\":\n        value = c.req.header();\n        break;\n      case \"cookie\":\n        value = getCookie(c);\n        break;\n    }\n    const res = await validationFunc(value, c);\n    if (res instanceof Response) {\n      return res;\n    }\n    c.req.addValidatedData(target, res);\n    await next();\n  };\n};\nexport {\n  validator\n};\n", "// src/index.ts\nimport { validator } from \"hono/validator\";\nvar sValidator = (target, schema, hook) => (\n  // @ts-expect-error not typed well\n  validator(target, async (value, c) => {\n    const result = await schema[\"~standard\"].validate(value);\n    if (hook) {\n      const hookResult = await hook(\n        result.issues ? { data: value, error: result.issues, success: false, target } : { data: value, success: true, target },\n        c\n      );\n      if (hookResult) {\n        if (hookResult instanceof Response) {\n          return hookResult;\n        }\n        if (\"response\" in hookResult) {\n          return hookResult.response;\n        }\n      }\n    }\n    if (result.issues) {\n      return c.json({ data: value, error: result.issues, success: false }, 400);\n    }\n    return result.value;\n  })\n);\nexport {\n  sValidator\n};\n", "/* eslint max-len: 0 */\nexport default {\n    // validation errors\n    AdditionalItemsError: \"Array at `{{pointer}}` may not have an additional item `{{key}}`\",\n    AdditionalPropertiesError: \"Additional property `{{property}}` on `{{pointer}}` does not match schema `{{schema}}`\",\n    AllOfError: \"Value `{{value}}` at `{{pointer}}` does not match schema of `{{allOf}}`\",\n    AnyOfError: \"Value `{{value}}` at `{{pointer}}` does not match any schema of `{{anyOf}}`\",\n    ConstError: \"Expected value at `{{pointer}}` to be `{{expected}}`, but value given is `{{value}}`\",\n    containsAnyError: \"The array at `{{pointer}}` must contain at least one item\",\n    ContainsArrayError: \"The property at `{{pointer}}` must not be an array\",\n    ContainsError: \"The array at `{{pointer}}` must contain an element that matches `{{schema}}`\",\n    ContainsMinError: \"The array at `{{pointer}}` contains {{delta}} too few items matching `{{schema}}`\",\n    ContainsMaxError: \"The array at `{{pointer}}` contains {{delta}} too many items matching `{{schema}}`\",\n    EnumError: \"Expected given value `{{value}}` in `{{pointer}}` to be one of `{{values}}`\",\n    ForbiddenPropertyError: \"Property name `{{property}}` at `{{pointer}}` is not allowed\",\n    FormatDateError: \"Value `{{value}}` at `{{pointer}}` is not a valid date\",\n    FormatDateTimeError: \"Value `{{value}}` at `{{pointer}}` is not a valid date-time\",\n    FormatDurationError: \"Value `{{value}}` at `{{pointer}}` is not a valid duration\",\n    FormatEmailError: \"Value `{{value}}` at `{{pointer}}` is not a valid email\",\n    FormatHostnameError: \"Value `{{value}}` at `{{pointer}}` is not a valid hostname\",\n    FormatIPV4Error: \"Value `{{value}}` at `{{pointer}}` is not a valid IPv4 address\",\n    FormatIPV4LeadingZeroError: \"IPv4 addresses starting with zero are invalid, since they are interpreted as octals\",\n    FormatIPV6Error: \"Value `{{value}}` at `{{pointer}}` is not a valid IPv6 address\",\n    FormatIPV6LeadingZeroError: \"IPv6 addresses starting with zero are invalid, since they are interpreted as octals\",\n    FormatJsonPointerError: \"Value `{{value}}` at `{{pointer}}` is not a valid json-pointer\",\n    FormatRegExError: \"Value `{{value}}` at `{{pointer}}` is not a valid regular expression\",\n    FormatTimeError: \"Value `{{value}}` at `{{pointer}}` is not a valid time\",\n    FormatURIError: \"Value `{{value}}` at `{{pointer}}` is not a valid uri\",\n    FormatURIReferenceError: \"Value `{{value}}` at `{{pointer}}` is not a valid uri-reference\",\n    FormatURITemplateError: \"Value `{{value}}` at `{{pointer}}` is not a valid uri-template\",\n    FormatURLError: \"Value `{{value}}` at `{{pointer}}` is not a valid url\",\n    FormatUUIDError: \"Value `{{value}}` at `{{pointer}}` is not a valid uuid\",\n    InvalidDataError: \"No value may be specified in `{{pointer}}`\",\n    InvalidPropertyNameError: \"Invalid property name `{{property}}` at `{{pointer}}`\",\n    MaximumError: \"Value in `{{pointer}}` is `{{length}}`, but should be `{{maximum}}` at maximum\",\n    MaxItemsError: \"Too many items in `{{pointer}}`, should be `{{maximum}}` at most, but got `{{length}}`\",\n    MaxLengthError: \"Value `{{pointer}}` should have a maximum length of `{{maxLength}}`, but got `{{length}}`.\",\n    MaxPropertiesError: \"Too many properties in `{{pointer}}`, should be `{{maxProperties}}` at most, but got `{{length}}`\",\n    MinimumError: \"Value in `{{pointer}}` is `{{length}}`, but should be `{{minimum}}` at minimum\",\n    MinItemsError: \"Too few items in `{{pointer}}`, should be at least `{{minItems}}`, but got `{{length}}`\",\n    MinItemsOneError: \"At least one item is required in `{{pointer}}`\",\n    MinLengthError: \"Value `{{pointer}}` should have a minimum length of `{{minLength}}`, but got `{{length}}`.\",\n    MinLengthOneError: \"A value is required in `{{pointer}}`\",\n    MinPropertiesError: \"Too few properties in `{{pointer}}`, should be at least `{{minProperties}}`, but got `{{length}}`\",\n    MissingDependencyError: \"The required propery '{{missingProperty}}' in `{{pointer}}` is missing\",\n    MissingOneOfPropertyError: \"Value at `{{pointer}}` property: `{{property}}`\",\n    MultipleOfError: \"Expected `{{value}}` in `{{pointer}}` to be multiple of `{{multipleOf}}`\",\n    MultipleOneOfError: \"Value `{{value}}` should not match multiple schemas in oneOf `{{matches}}`\",\n    NoAdditionalPropertiesError: \"Additional property `{{property}}` in `{{pointer}}` is not allowed\",\n    NotError: \"Value `{{value}}` at pointer should not match schema `{{not}}`\",\n    OneOfError: \"Value `{{value}}` in `{{pointer}}` does not match any given oneof schema\",\n    OneOfPropertyError: \"Failed finding a matching oneOfProperty schema in `{{pointer}}` where `{{property}}` matches `{{value}}`\",\n    PatternError: \"Value in `{{pointer}}` should match `{{description}}`, but received `{{received}}`\",\n    PatternPropertiesError: \"Property `{{key}}` does not match any patterns in `{{pointer}}`. Valid patterns are: {{patterns}}\",\n    RequiredPropertyError: \"The required property `{{key}}` is missing at `{{pointer}}`\",\n    SchemaWarning: \"Failed retrieving a schema from '{{pointer}}' to key '{{key}}'\",\n    TypeError: \"Expected `{{value}}` ({{received}}) in `{{pointer}}` to be of type `{{expected}}`\",\n    UndefinedValueError: \"Value must not be undefined in `{{pointer}}`\",\n    UnevaluatedPropertyError: \"Invalid unevaluated property `{{pointer}}`\",\n    UnevaluatedItemsError: \"Invalid unevaluated item `{{pointer}}`\",\n    UniqueItemsError: \"Items in array must be unique. Value `{{value}}` in `{{pointer}}` is a duplicate of {{duplicatePointer}}.\",\n    UnknownPropertyError: \"Could not find a valid schema for property `{{pointer}}` within object\",\n    ValueNotEmptyError: \"A value for `{{property}}` is required at `{{pointer}}`\"\n};\n", "const toString = Object.prototype.toString;\nexport default function getTypeOf(value) {\n    const type = toString\n        .call(value)\n        .match(/\\s([^\\]]+)\\]/)\n        .pop()\n        .toLowerCase();\n    if (type === \"file\") {\n        return \"object\";\n    }\n    return type;\n}\n", "import getTypeOf from \"../getTypeOf\";\nconst OBJECT_TYPE = \"object\";\nconst ARRAY_TYPE = \"array\";\n/**\n * Renders data into a string by {{variables}}.\n * Given a template string, removes all {{property}} substrings and replaces them with the property in the given data\n *\n * @param template - template string containing variables in handelbars/mustache style\n * @param data - flat object containing properties matching variables\n * @return rendered string\n */\nexport default function render(template, data = {}) {\n    return template.replace(/\\{\\{\\w+\\}\\}/g, (match) => {\n        const key = match.replace(/[{}]/g, \"\");\n        const variable = data[key];\n        const variableType = getTypeOf(variable);\n        if (variableType === OBJECT_TYPE || variableType === ARRAY_TYPE) {\n            return JSON.stringify(variable);\n        }\n        return variable;\n    });\n}\n", "import strings from \"../config/strings\";\nimport render from \"./render\";\n/**\n * Renders the given string as defined in __@see config/strings.js__\n * @param keyword\n * @param data - template data\n * @param fallback - fallback template\n * @return resulting string\n */\nexport default function __(keyword, data, fallback = keyword) {\n    var _a;\n    const template = (_a = strings[keyword]) !== null && _a !== void 0 ? _a : fallback;\n    return render(template, data);\n}\n", "import __ from \"./__\";\nfunction dashCase(text) {\n    return text.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\nexport function createError(name, data) {\n    return {\n        type: \"error\",\n        name,\n        code: dashCase(name),\n        message: __(name, data),\n        data\n    };\n}\n/**\n * Creates a custom Error Creator. Its messages are defined by strings-object @see config/strings.ts\n *\n * @param name - id of error (camelcased)\n * @return error constructor function\n */\nexport function createCustomError(name) {\n    return createError.bind(null, name);\n}\n", "export default function flattenArray(list, result = []) {\n    for (let i = 0; i < list.length; i += 1) {\n        const item = list[i];\n        if (Array.isArray(item)) {\n            flattenArray(item, result);\n        }\n        else {\n            result.push(item);\n        }\n    }\n    return result;\n}\n", "export default {\n    DECLARATOR_ONEOF: \"oneOfProperty\",\n    /** set to false to not set __oneOfIndex on returned schema */\n    EXPOSE_ONE_OF_INDEX: true,\n    GET_TEMPLATE_RECURSION_LIMIT: 1,\n    propertyBlacklist: [\"_id\"],\n    templateDefaultOptions: {\n        addOptionalProps: false,\n        removeInvalidData: false,\n        extendDefaults: true\n    }\n};\n", "/**\n * ts type guard for json error\n * @returns true if passed type is a JsonError\n */\nexport function isJsonError(error) {\n    return (error === null || error === void 0 ? void 0 : error.type) === \"error\";\n}\n", "import { isJsonError } from \"../types\";\nexport function isPromise(obj) {\n    return obj instanceof Promise;\n}\nexport function errorOrPromise(error) {\n    return isJsonError(error) || isPromise(error);\n}\nexport function errorsOnly(error) {\n    return isJsonError(error);\n}\n", "import getTypeOf from \"../getTypeOf\";\nexport function isObject(v) {\n    return getTypeOf(v) === \"object\";\n}\n", "/**\n * @draft-04\n */\nimport flattenArray from \"../utils/flattenArray\";\nimport settings from \"../config/settings\";\nimport { errorOrPromise } from \"../utils/filter\";\nimport { isJsonError } from \"../types\";\nimport { isObject } from \"../utils/isObject\";\nconst { DECLARATOR_ONEOF, EXPOSE_ONE_OF_INDEX } = settings;\nfunction setOneOfOrigin(schema, index) {\n    if (EXPOSE_ONE_OF_INDEX && isObject(schema)) {\n        schema.__oneOfIndex = index;\n    }\n}\n/**\n * Selects and returns a oneOf schema for the given data\n *\n * @param draft - validator\n * @param data\n * @param schema - current json schema containing property oneOf\n * @param pointer - json pointer to data\n * @return oneOf schema or an error\n */\nexport function resolveOneOf(node, data) {\n    const { schema, draft, pointer } = node;\n    // !keyword: oneOfProperty\n    // an additional <DECLARATOR_ONEOF> (default `oneOfProperty`) on the schema will exactly determine the\n    // oneOf value (if set in data)\n    // @fixme\n    // abort if no data is given an DECLARATOR_ONEOF is set (used by getChildSchemaSelection)\n    // this case (data != null) should not be necessary\n    if (data != null && schema[DECLARATOR_ONEOF]) {\n        const errors = [];\n        const oneOfProperty = schema[DECLARATOR_ONEOF];\n        const oneOfValue = data[schema[DECLARATOR_ONEOF]];\n        if (oneOfValue === undefined) {\n            return draft.errors.missingOneOfPropertyError({\n                property: oneOfProperty,\n                pointer,\n                schema,\n                value: data\n            });\n        }\n        for (let i = 0; i < schema.oneOf.length; i += 1) {\n            const oneNode = node.next(schema.oneOf[i]).resolveRef();\n            const resultNode = draft.step(oneNode, oneOfProperty, data);\n            if (isJsonError(resultNode)) {\n                return resultNode;\n            }\n            let result = flattenArray(draft.validate(resultNode, oneOfValue));\n            result = result.filter(errorOrPromise);\n            if (result.length > 0) {\n                errors.push(...result);\n            }\n            else {\n                // @evaluation-info\n                setOneOfOrigin(oneNode.schema, i);\n                return resultNode.next(oneNode.schema);\n            }\n        }\n        return draft.errors.oneOfPropertyError({\n            property: oneOfProperty,\n            value: oneOfValue,\n            pointer,\n            schema,\n            errors\n        });\n    }\n    const matches = [];\n    const errors = [];\n    for (let i = 0; i < schema.oneOf.length; i += 1) {\n        const oneNode = draft.resolveRef(node.next(schema.oneOf[i]));\n        let result = flattenArray(draft.validate(oneNode, data));\n        result = result.filter(errorOrPromise);\n        if (result.length > 0) {\n            errors.push(...result);\n        }\n        else {\n            matches.push({ index: i, schema: oneNode.schema });\n        }\n    }\n    if (matches.length === 1) {\n        // @evaluation-info\n        setOneOfOrigin(matches[0].schema, matches[0].index);\n        return node.next(matches[0].schema);\n    }\n    if (matches.length > 1) {\n        return draft.errors.multipleOneOfError({\n            value: data,\n            pointer,\n            schema,\n            matches\n        });\n    }\n    return draft.errors.oneOfError({\n        value: JSON.stringify(data),\n        pointer,\n        schema,\n        oneOf: schema.oneOf,\n        errors\n    });\n}\n/**\n * Returns a ranking for the data and given schema\n *\n * @param draft\n * @param - json schema type: object\n * @param data\n * @param [pointer]\n * @return ranking value (higher is better)\n */\nfunction fuzzyObjectValue(node, data) {\n    const { draft, schema, pointer } = node;\n    if (data == null || schema.properties == null) {\n        return -1;\n    }\n    let value = 0;\n    const keys = Object.keys(schema.properties);\n    for (let i = 0; i < keys.length; i += 1) {\n        const key = keys[i];\n        if (data[key]) {\n            if (draft.isValid(data[key], schema.properties[key], pointer)) {\n                value += 1;\n            }\n        }\n    }\n    return value;\n}\n/**\n * Selects and returns a oneOf schema for the given data\n *\n * @param draft\n * @param data\n * @param [schema] - current json schema containing property oneOf\n * @param [pointer] - json pointer to data\n * @return oneOf schema or an error\n */\nexport function resolveOneOfFuzzy(node, data) {\n    const { schema, pointer, draft } = node;\n    if (!Array.isArray(schema.oneOf)) {\n        throw new Error(\"not a oneof schema\");\n        return node;\n    }\n    // !keyword: oneOfProperty\n    // an additional <DECLARATOR_ONEOF> (default `oneOfProperty`) on the schema will exactly determine the\n    // oneOf value (if set in data)\n    // @fixme\n    // abort if no data is given an DECLARATOR_ONEOF is set (used by getChildSchemaSelection)\n    // this case (data != null) should not be necessary\n    if (data != null && schema[DECLARATOR_ONEOF]) {\n        const errors = [];\n        const oneOfProperty = schema[DECLARATOR_ONEOF];\n        const oneOfValue = data[schema[DECLARATOR_ONEOF]];\n        if (oneOfValue === undefined) {\n            return draft.errors.missingOneOfPropertyError({\n                property: oneOfProperty,\n                pointer,\n                schema,\n                value: data\n            });\n        }\n        for (let i = 0; i < schema.oneOf.length; i += 1) {\n            const oneNode = draft.resolveRef(node.next(schema.oneOf[i]));\n            const resultNode = draft.step(oneNode, oneOfProperty, data);\n            if (isJsonError(resultNode)) {\n                return resultNode;\n            }\n            let result = flattenArray(draft.validate(resultNode, oneOfValue));\n            result = result.filter(errorOrPromise);\n            if (result.length > 0) {\n                errors.push(...result);\n            }\n            else {\n                // @evaluation-info\n                setOneOfOrigin(oneNode.schema, i);\n                return resultNode.next(oneNode.schema);\n            }\n        }\n        return draft.errors.oneOfPropertyError({\n            property: oneOfProperty,\n            value: oneOfValue,\n            pointer,\n            schema,\n            errors\n        });\n    }\n    // keyword: oneOf\n    const matches = [];\n    for (let i = 0; i < schema.oneOf.length; i += 1) {\n        const oneNode = draft.resolveRef(node.next(schema.oneOf[i]));\n        const one = oneNode.schema;\n        if (draft.isValid(data, one, pointer)) {\n            matches.push({ schema: one, index: i });\n        }\n    }\n    if (matches.length === 1) {\n        // @evaluation-info\n        setOneOfOrigin(matches[0].schema, matches[0].index);\n        return node.next(matches[0].schema);\n    }\n    // fuzzy match oneOf\n    if (isObject(data)) {\n        let schemaOfItem;\n        let schemaOfIndex = -1;\n        let fuzzyGreatest = 0;\n        for (let i = 0; i < schema.oneOf.length; i += 1) {\n            const oneNode = draft.resolveRef(node.next(schema.oneOf[i]));\n            const fuzzyValue = fuzzyObjectValue(oneNode, data);\n            if (fuzzyGreatest < fuzzyValue) {\n                fuzzyGreatest = fuzzyValue;\n                schemaOfItem = oneNode.schema;\n                schemaOfIndex = i;\n            }\n        }\n        if (schemaOfItem === undefined) {\n            return draft.errors.oneOfError({\n                value: JSON.stringify(data),\n                pointer,\n                schema,\n                oneOf: schema.oneOf\n            });\n        }\n        // @evaluation-info\n        setOneOfOrigin(schemaOfItem, schemaOfIndex);\n        return node.next(schemaOfItem);\n    }\n    if (matches.length > 1) {\n        return draft.errors.multipleOneOfError({ matches, pointer, schema, value: data });\n    }\n    return draft.errors.oneOfError({\n        value: JSON.stringify(data),\n        pointer,\n        schema,\n        oneOf: schema.oneOf\n    });\n}\n/**\n * validates oneOf definition for given input data\n */\nconst validateOneOf = (node, value) => {\n    if (Array.isArray(node.schema.oneOf)) {\n        const nodeOrError = node.draft.resolveOneOf(node, value);\n        if (isJsonError(nodeOrError)) {\n            return nodeOrError;\n        }\n    }\n};\nexport { validateOneOf };\n", "import getTypeOf from \"./getTypeOf\";\nimport { isObject } from \"./utils/isObject\";\nexport function mergeSchema(a, b, ...omit) {\n    if ((b === null || b === void 0 ? void 0 : b.type) === \"error\") {\n        return b;\n    }\n    else if ((a === null || a === void 0 ? void 0 : a.type) === \"error\") {\n        return a;\n    }\n    const aType = getTypeOf(a);\n    const bType = getTypeOf(b);\n    if (aType !== bType) {\n        return a;\n    }\n    const schema = mergeSchema2(a, b);\n    for (let i = 0; i < omit.length; i += 1) {\n        delete schema[omit[i]];\n    }\n    return schema;\n}\nexport function mergeSchema2(a, b, property) {\n    var _a;\n    if (isObject(a) && isObject(b)) {\n        const newObject = {};\n        [...Object.keys(a), ...Object.keys(b)]\n            .filter((item, index, array) => array.indexOf(item) === index)\n            .forEach(key => (newObject[key] = mergeSchema2(a[key], b[key], key)));\n        return newObject;\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (property === \"required\") {\n            return a.concat(b).filter((item, index, array) => array.indexOf(item) === index);\n        }\n        if (property === \"items\") {\n            const result = [];\n            for (let i = 0; i < b.length; i += 1) {\n                if (isObject(a[i]) && isObject(b[i]) && a[i].type === b[i].type) {\n                    result[i] = mergeSchema2(a[i], b[i]);\n                }\n                else {\n                    result.push((_a = b[i]) !== null && _a !== void 0 ? _a : a[i]);\n                }\n            }\n            return result;\n        }\n        const result = [];\n        const append = [];\n        for (let i = 0; i < Math.max(a.length, b.length); i += 1) {\n            if (isObject(a[i]) && isObject(b[i])) {\n                result[i] = mergeSchema2(a[i], b[i]);\n            }\n            else {\n                if (a[i] !== undefined && b[i] !== undefined) {\n                    result[i] = a[i];\n                    append.push(b[i]);\n                }\n                else if (a[i] !== undefined) {\n                    result[i] = a[i];\n                }\n                else if (b[i] !== undefined) {\n                    append.push(b[i]);\n                }\n            }\n        }\n        return [...result, ...append].filter((item, index, array) => array.indexOf(item) === index);\n    }\n    if (Array.isArray(b)) {\n        return b;\n    }\n    if (Array.isArray(a)) {\n        return a;\n    }\n    if (b !== undefined) {\n        return b;\n    }\n    return a;\n}\n", "/**\n * Omit properties from input schema. Accepts any number of properties to\n * remove. Example:\n *\n * ```ts\n * omit(myObject, \"if\", \"dependencies\");\n * ```\n *\n * @returns shallow copy of input object without specified properties\n */\nexport function omit(object, ...keysToOmit) {\n    const result = {};\n    Object.keys(object).forEach((key) => {\n        if (!keysToOmit.includes(key)) {\n            result[key] = object[key];\n        }\n    });\n    return result;\n}\n", "/**\n * returns if-then-else as a json schema. does not merge with input\n * json schema. you probably will need to do so to correctly resolve\n * references.\n *\n * @returns json schema defined by if-then-else or undefined\n */\nexport function resolveIfSchema(node, data) {\n    if (node.schema.if == null) {\n        return undefined;\n    }\n    if (node.schema.if === false) {\n        // @evaluation-info\n        // schema.__ifelse = true\n        return node.next(node.schema.else);\n    }\n    if (node.schema.if && (node.schema.then || node.schema.else)) {\n        const ifNode = node.draft.resolveRef(node.next(node.schema.if));\n        const ifErrors = node.draft.validate(ifNode, data);\n        if (ifErrors.length === 0 && node.schema.then) {\n            const thenNode = node.next(node.schema.then);\n            // @evaluation-info\n            // schema.__ifthen = true\n            return node.draft.resolveRef(thenNode);\n        }\n        if (ifErrors.length !== 0 && node.schema.else) {\n            const elseNode = node.next(node.schema.else);\n            // @evaluation-info\n            // schema.__ifelse = true\n            return node.draft.resolveRef(elseNode);\n        }\n    }\n    return undefined;\n}\n/**\n * @returns validation result of it-then-else schema\n */\nconst validateIf = (node, value) => {\n    const resolvedNode = resolveIfSchema(node, value);\n    if (resolvedNode) {\n        // @recursiveRef ok, we not just add per pointer, but any evluation to dynamic scope / validation path\n        return node.draft.validate(resolvedNode, value);\n    }\n};\nexport { validateIf };\n", "export function shallowCloneSchemaNode(node) {\n    return { ...node };\n}\n", "import { mergeSchema } from \"../mergeSchema\";\nimport { omit } from \"../utils/omit\";\nimport { resolveIfSchema } from \"./if\";\nimport { shallowCloneSchemaNode } from \"../utils/shallowCloneSchema\";\n/**\n * resolves schema\n * when complete this will have much duplication to step.object etc\n */\nexport function resolveSchema(node, data) {\n    const ifSchema = resolveIfSchema(node, data);\n    if (ifSchema) {\n        return ifSchema;\n    }\n    const schema = shallowCloneSchemaNode(node.schema);\n    return node.next(omit(schema, \"if\", \"then\", \"else\"));\n}\nexport function resolveAllOf(node, data) {\n    const { schema } = node;\n    let mergedSchema = shallowCloneSchemaNode(schema);\n    for (let i = 0; i < schema.allOf.length; i += 1) {\n        const allOfNode = node.next(schema.allOf[i]).resolveRef();\n        // @todo introduce draft.resolveSchema to iteratively resolve\n        const allOfSchema = resolveSchema(allOfNode, data).schema;\n        mergedSchema = mergeSchema(mergedSchema, allOfSchema);\n    }\n    delete mergedSchema.allOf;\n    return node.next(mergedSchema);\n}\n/**\n * @attention: subschemas have to be resolved upfront (e.g. if-else that do not apply)\n * Merge all allOf sub schema into a single schema. Returns undefined for\n * missing allOf definition.\n *\n * @returns json schema defined by allOf or undefined\n */\nexport function mergeAllOfSchema(draft, schema) {\n    const { allOf } = schema;\n    if (!Array.isArray(allOf) || allOf.length === 0) {\n        return;\n    }\n    let resolvedSchema = {};\n    allOf.forEach((subschema) => {\n        if (subschema == null) {\n            return;\n        }\n        const subSchemaNode = draft.createNode(subschema).resolveRef();\n        resolvedSchema = mergeSchema(resolvedSchema, subSchemaNode.schema);\n    });\n    return resolvedSchema;\n}\n/**\n * validate allOf definition for given input data\n */\nconst validateAllOf = (node, value) => {\n    const { draft, schema } = node;\n    const { allOf } = schema;\n    if (!Array.isArray(allOf) || allOf.length === 0) {\n        return;\n    }\n    const errors = [];\n    schema.allOf.forEach((subSchema) => {\n        errors.push(...draft.validate(node.next(subSchema), value));\n    });\n    return errors;\n};\nexport { validateAllOf };\n", "import getTypeOf from \"./getTypeOf\";\nimport { isObject } from \"./utils/isObject\";\nimport { isJsonError } from \"./types\";\nimport { mergeSchema } from \"./mergeSchema\";\nfunction merge(schema, ...omit) {\n    if (schema == null) {\n        throw new Error(`undefined schema`);\n    }\n    const node = this;\n    const mergedSchema = mergeSchema(node.schema, schema, ...omit);\n    return { ...node, schema: mergedSchema, path: [...node.path, [node.pointer, node.schema]] };\n}\nfunction resolveRef() {\n    const node = this;\n    return node.draft.resolveRef(node);\n}\nfunction next(schema, key) {\n    if (isJsonError(schema)) {\n        return schema;\n    }\n    if (schema == null) {\n        throw new Error(`undefined schema`);\n    }\n    if (!isObject(schema) && getTypeOf(schema) !== \"boolean\") {\n        throw new Error(`bad schema type ${getTypeOf(schema)}`);\n    }\n    const node = this;\n    return {\n        ...node,\n        pointer: key ? `${node.pointer}/${key}` : node.pointer,\n        schema,\n        path: [...node.path, [node.pointer, node.schema]]\n    };\n}\nexport function isSchemaNode(value) {\n    // @ts-expect-error unknown object\n    return isObject(value) && value.next && value.path && value.draft;\n}\nexport function createNode(draft, schema, pointer = \"#\") {\n    return { draft, pointer, schema, path: [], next, merge, resolveRef };\n}\n", "import { isSchemaNode } from \"./schemaNode\";\nexport default function resolveRef(node) {\n    if (!isSchemaNode(node)) {\n        throw new Error(\"schema node expected\");\n    }\n    if (node.schema == null || node.schema.$ref == null) {\n        return node;\n    }\n    if (node.schema.getRoot) {\n        // we actually always need to resolve the schema like this, since returned subschemas\n        // must resolve relative from their schema\n        const resolvedSchema = node.schema.getRoot().getRef(node.schema);\n        return node.next(resolvedSchema);\n    }\n    // tryout - this should never be called, except we missed something\n    const resolvedSchema = node.draft.rootSchema.getRef(node.schema);\n    return node.next(resolvedSchema);\n}\n", "import { isSchemaNode } from \"./schemaNode\";\n// 1. https://json-schema.org/draft/2019-09/json-schema-core#scopes\nfunction resolveRecursiveRef(node) {\n    const history = node.path;\n    // console.log(...history);\n    // RESTRICT BY CHANGE IN BASE-URL\n    let startIndex = 0;\n    for (let i = history.length - 1; i >= 0; i--) {\n        const step = history[i][1];\n        if (step.$id && /^https?:\\/\\//.test(step.$id) && step.$recursiveAnchor !== true) {\n            startIndex = i;\n            break;\n        }\n    }\n    // FROM THERE FIND FIRST OCCURENCE OF ANCHOR\n    const firstAnchor = history.find((s, index) => index >= startIndex && s[1].$recursiveAnchor === true);\n    if (firstAnchor) {\n        return node.next(firstAnchor[1]);\n    }\n    // THEN RETURN LATEST BASE AS TARGET\n    for (let i = history.length - 1; i >= 0; i--) {\n        const step = history[i][1];\n        if (step.$id) {\n            return node.next(step);\n        }\n    }\n    // OR RETURN ROOT\n    return node.next(node.draft.rootSchema);\n}\n/**\n * @todo update types\n * Note: JsonSchema my be false\n */\nexport default function resolveRef(node) {\n    if (!isSchemaNode(node)) {\n        throw new Error(\"expected node\");\n    }\n    if (node.schema == null) {\n        return node;\n    }\n    if (node.schema.$recursiveRef) {\n        return resolveRef(resolveRecursiveRef(node));\n    }\n    if (node.schema.$ref == null) {\n        return node;\n    }\n    const resolvedSchema = node.draft.rootSchema.getRef(node.schema);\n    if (resolvedSchema === false) {\n        return node.next(resolvedSchema);\n    }\n    // @draft >= 2019-09 we now merge schemas: in draft <= 7 $ref is treated as reference, not as schema\n    return node.merge(resolvedSchema, \"$ref\");\n}\n", "/**\n * @returns list with unique values only\n */\nexport function uniqueItems(list) {\n    return list.filter((item, index) => list.indexOf(item) === index);\n}\n", "import getTypeOf from \"../getTypeOf\";\nimport { mergeSchema } from \"../mergeSchema\";\nimport { uniqueItems } from \"../utils/uniqueItems\";\nimport { isObject } from \"../utils/isObject\";\n/**\n * @todo add support for dependentRequired (draft 2019-09)\n * returns dependencies as an object json schema. does not merge with input\n * json schema. you probably will need to do so to correctly resolve\n * references.\n *\n * @returns merged json schema defined by dependencies or undefined\n */\nexport function resolveDependencies(node, data) {\n    var _a;\n    const { schema } = node;\n    // @draft >= 2019-09 dependentSchemas\n    const dependencies = (_a = schema.dependencies) !== null && _a !== void 0 ? _a : schema.dependentSchemas;\n    if (!isObject(dependencies) || !isObject(data)) {\n        return;\n    }\n    let updated = false;\n    let resolvedSchema = { required: [] };\n    Object.keys(dependencies).forEach((prop) => {\n        var _a, _b;\n        if (data[prop] == null &&\n            !(((_a = schema.required) === null || _a === void 0 ? void 0 : _a.includes(prop)) || ((_b = resolvedSchema.required) === null || _b === void 0 ? void 0 : _b.includes(prop)))) {\n            return;\n        }\n        const dependency = dependencies[prop];\n        // dependency array\n        if (Array.isArray(dependency)) {\n            updated = true;\n            resolvedSchema.required.push(...dependency);\n            return;\n        }\n        // dependency schema\n        if (isObject(dependency)) {\n            updated = true;\n            const dNode = node.next(dependency).resolveRef();\n            resolvedSchema = mergeSchema(resolvedSchema, dNode.schema);\n            return;\n        }\n    });\n    if (updated) {\n        resolvedSchema.required = uniqueItems(resolvedSchema.required);\n        return resolvedSchema;\n    }\n}\n/**\n * @draft 2019-09\n */\nexport const validateDependentRequired = (node, value) => {\n    const { draft, schema, pointer } = node;\n    const dependentRequired = schema.dependentRequired;\n    if (!isObject(dependentRequired)) {\n        return undefined;\n    }\n    const errors = [];\n    Object.keys(value).forEach((property) => {\n        const dependencies = dependentRequired[property];\n        // @draft >= 6 boolean schema\n        if (dependencies === true) {\n            return;\n        }\n        if (dependencies === false) {\n            errors.push(draft.errors.missingDependencyError({ pointer, schema, value }));\n            return;\n        }\n        if (!Array.isArray(dependencies)) {\n            return;\n        }\n        for (let i = 0, l = dependencies.length; i < l; i += 1) {\n            if (value[dependencies[i]] === undefined) {\n                errors.push(draft.errors.missingDependencyError({ missingProperty: dependencies[i], pointer, schema, value }));\n            }\n        }\n    });\n    return errors;\n};\n/**\n * @draft 2019-09\n */\nexport const validateDependentSchemas = (node, value) => {\n    const { draft, schema, pointer } = node;\n    const dependentSchemas = schema.dependentSchemas;\n    if (!isObject(dependentSchemas)) {\n        return undefined;\n    }\n    const errors = [];\n    Object.keys(value).forEach((property) => {\n        const dependencies = dependentSchemas[property];\n        // @draft >= 6 boolean schema\n        if (dependencies === true) {\n            return;\n        }\n        if (dependencies === false) {\n            errors.push(draft.errors.missingDependencyError({ pointer, schema, value }));\n            return;\n        }\n        if (!isObject(dependencies)) {\n            return;\n        }\n        draft.validate(node.next(dependencies), value).map(error => errors.push(error));\n    });\n    return errors;\n};\n/**\n * validate dependencies definition for given input data\n */\nexport const validateDependencies = (node, value) => {\n    const { draft, schema, pointer } = node;\n    // @draft >= 2019-09 dependentSchemas\n    const dependencies = schema.dependencies;\n    if (!isObject(dependencies)) {\n        return undefined;\n    }\n    const errors = [];\n    Object.keys(value).forEach((property) => {\n        if (dependencies[property] === undefined) {\n            return;\n        }\n        // @draft >= 6 boolean schema\n        if (dependencies[property] === true) {\n            return;\n        }\n        if (dependencies[property] === false) {\n            errors.push(draft.errors.missingDependencyError({ pointer, schema, value }));\n            return;\n        }\n        let dependencyErrors;\n        const type = getTypeOf(dependencies[property]);\n        const propertyValue = dependencies[property];\n        if (Array.isArray(propertyValue)) {\n            dependencyErrors = propertyValue\n                .filter((dependency) => value[dependency] === undefined)\n                .map((missingProperty) => draft.errors.missingDependencyError({ missingProperty, pointer, schema, value }));\n        }\n        else if (type === \"object\") {\n            dependencyErrors = draft.validate(node.next(dependencies[property]), value);\n        }\n        else {\n            throw new Error(`Invalid dependency definition for ${pointer}/${property}. Must be string[] or schema`);\n        }\n        errors.push(...dependencyErrors);\n    });\n    return errors.length > 0 ? errors : undefined;\n};\n", "/**\n * @draft-04\n */\nimport { mergeSchema } from \"../mergeSchema\";\n/**\n * returns merged schema of all valid anyOf subschemas for the given input data.\n * Does not merge with rest input schema.\n *\n * @returns merged anyOf subschemas which are valid to the given input data.\n */\nexport function mergeValidAnyOfSchema(node, data) {\n    const { draft, schema } = node;\n    if (!Array.isArray(schema.anyOf) || schema.anyOf.length === 0) {\n        return;\n    }\n    let resolvedSchema;\n    schema.anyOf.forEach((anySchema) => {\n        const anyNode = draft.resolveRef(node.next(anySchema));\n        if (draft.validate(anyNode, data).length === 0) {\n            resolvedSchema = resolvedSchema ? mergeSchema(resolvedSchema, anyNode.schema) : anyNode.schema;\n        }\n    });\n    if (resolvedSchema) {\n        return node.next(resolvedSchema);\n    }\n}\n/**\n * @unused this function is only exposed via draft and not used otherwise\n * @returns extended input schema with valid anyOf subschemas or JsonError if\n * no anyOf schema matches input data\n */\nexport function resolveAnyOf(node, data) {\n    const { anyOf } = node.schema;\n    if (!Array.isArray(anyOf) || anyOf.length === 0) {\n        return node;\n    }\n    const resolvedNode = mergeValidAnyOfSchema(node, data);\n    if (resolvedNode) {\n        const { pointer, schema } = node;\n        return node.draft.errors.anyOfError({ pointer, schema, value: data, anyOf: JSON.stringify(anyOf) });\n    }\n    return node.merge(resolvedNode.schema, \"anyOf\");\n}\n/**\n * validate anyOf definition for given input data\n */\nexport const validateAnyOf = (node, value) => {\n    const { draft, schema, pointer } = node;\n    if (!Array.isArray(schema.anyOf) || schema.anyOf.length === 0) {\n        return undefined;\n    }\n    // console.log(\"validate any of\", pointer, value);\n    for (let i = 0; i < schema.anyOf.length; i += 1) {\n        const nextNode = draft.resolveRef(node.next(schema.anyOf[i]));\n        if (draft.validate(nextNode, value).length === 0) {\n            return undefined;\n        }\n    }\n    return draft.errors.anyOfError({ pointer, schema, value, anyOf: schema.anyOf });\n};\n", "import { isJsonError } from \"./types\";\nimport { isSchemaNode } from \"./schemaNode\";\nimport { mergeSchema } from \"./mergeSchema\";\nimport { resolveIfSchema } from \"./features/if\";\nimport { resolveDependencies } from \"./features/dependencies\";\nimport { mergeAllOfSchema } from \"./features/allOf\";\nimport { mergeValidAnyOfSchema } from \"./features/anyOf\";\nimport { resolveOneOfFuzzy as resolveOneOf } from \"./features/oneOf\";\nimport { omit } from \"./utils/omit\";\nconst toOmit = [\"allOf\", \"anyOf\", \"oneOf\", \"dependencies\", \"if\", \"then\", \"else\"];\nconst dynamicProperties = [\"allOf\", \"anyOf\", \"oneOf\", \"dependencies\", \"if\"];\nexport function isDynamicSchema(schema) {\n    const givenProps = Object.keys(schema);\n    return dynamicProperties.findIndex((prop) => givenProps.includes(prop)) !== -1;\n}\n/**\n * @note this utility does not reference draft methods for resolution\n * @todo consider using draft methods\n * @todo consider exposing separate info-object (oneOf-Index)\n *\n * Resolves all dynamic schema definitions for the given input data and returns\n * the resulting json-schema without any dynamic schema definitions. The result\n * is not merged with the original input schema, thus static definitions of the\n * input schema are untouched and missing. For a full schema definition of this\n * input data you have to merge the result with the original schema\n * (@see reduceSchema)\n *\n * dynamic schema definitions: dependencies, allOf, anyOf, oneOf, if\n *\n * @returns static schema from resolved dynamic schema definitions for this\n *  specific input data\n */\nexport function resolveDynamicSchema(schemaNode, data) {\n    let resolvedSchema;\n    let error;\n    const node = schemaNode.draft.resolveRef(schemaNode);\n    const { draft } = node;\n    const schema = isSchemaNode(node) ? node.schema : node;\n    // @feature oneOf\n    if (schema.oneOf) {\n        const oneOfSchema = resolveOneOf(node, data);\n        if (isJsonError(oneOfSchema)) {\n            error = oneOfSchema;\n        }\n        else if (oneOfSchema) {\n            resolvedSchema = mergeSchema(resolvedSchema !== null && resolvedSchema !== void 0 ? resolvedSchema : {}, oneOfSchema.schema);\n        }\n    }\n    // @feature allOf\n    if (Array.isArray(schema.allOf)) {\n        const allOf = schema.allOf.map((s) => {\n            // before merging allOf schema we need to resolve all subschemas\n            // if not, we would wrongly merge oneOf, if-then statements, etc\n            if (isDynamicSchema(s)) {\n                // copy of reduceSchema\n                const result = resolveDynamicSchema(node.next(s), data);\n                // note: result has no scope\n                if (result == null || isJsonError(result)) {\n                    return result;\n                }\n                const finalSchema = mergeSchema(s, result.schema);\n                return omit(finalSchema, ...toOmit);\n            }\n            return s;\n        });\n        if (allOf.length > 0) {\n            const allOfSchema = mergeAllOfSchema(draft, { allOf });\n            resolvedSchema = mergeSchema(resolvedSchema !== null && resolvedSchema !== void 0 ? resolvedSchema : {}, allOfSchema);\n        }\n    }\n    // @feature anyOf\n    const anyNode = mergeValidAnyOfSchema(node, data);\n    if (anyNode && anyNode.schema) {\n        resolvedSchema = mergeSchema(resolvedSchema !== null && resolvedSchema !== void 0 ? resolvedSchema : {}, anyNode.schema);\n    }\n    // @feature dependencies\n    const dependenciesSchema = resolveDependencies(node, data);\n    if (dependenciesSchema) {\n        resolvedSchema = mergeSchema(resolvedSchema !== null && resolvedSchema !== void 0 ? resolvedSchema : {}, dependenciesSchema);\n    }\n    // @feature if-then-else\n    const ifNodeResolved = resolveIfSchema(node, data);\n    if (isSchemaNode(ifNodeResolved)) {\n        resolvedSchema = mergeSchema(resolvedSchema !== null && resolvedSchema !== void 0 ? resolvedSchema : {}, ifNodeResolved.schema);\n    }\n    if (resolvedSchema == null) {\n        return error;\n    }\n    if (isJsonError(resolvedSchema)) {\n        return resolvedSchema;\n    }\n    const nestedSchema = resolveDynamicSchema(node.next(resolvedSchema), data);\n    if (isSchemaNode(nestedSchema)) {\n        resolvedSchema = mergeSchema(resolvedSchema, nestedSchema.schema);\n    }\n    const finalSchema = omit(resolvedSchema, ...toOmit);\n    return node.next(finalSchema);\n}\n", "import { isSchemaNode } from \"./schemaNode\";\nimport { resolveDynamicSchema } from \"./resolveDynamicSchema\";\nconst toOmit = [\"allOf\", \"anyOf\", \"oneOf\", \"dependencies\", \"if\", \"then\", \"else\"];\n/**\n * reduces json schema by merging dynamic constructs like if-then-else,\n * dependencies, allOf, anyOf, oneOf, etc into a static json schema\n * omitting those properties.\n *\n * @returns input schema reduced by dynamic schema definitions for the given\n * input data\n */\nexport function reduceSchema(node, data) {\n    const resolvedSchema = resolveDynamicSchema(node, data);\n    if (isSchemaNode(resolvedSchema)) {\n        return node.merge(resolvedSchema.schema, ...toOmit);\n    }\n    if (resolvedSchema) {\n        return resolvedSchema; // error\n    }\n    return node;\n}\n", "export interface Cache {\n  has: (value: any) => boolean;\n  set: (key: any, value: any) => void;\n  get: (key: any) => any;\n}\n\nconst { toString: toStringFunction } = Function.prototype;\nconst { create } = Object;\nconst { toString: toStringObject } = Object.prototype;\n\n/**\n * @classdesc Fallback cache for when WeakMap is not natively supported\n */\nclass LegacyCache {\n  private _keys: any[] = [];\n  private _values: any[] = [];\n\n  has(key: any) {\n    return !!~this._keys.indexOf(key);\n  }\n\n  get(key: any) {\n    return this._values[this._keys.indexOf(key)];\n  }\n\n  set(key: any, value: any) {\n    this._keys.push(key);\n    this._values.push(value);\n  }\n}\n\nfunction createCacheLegacy(): Cache {\n  return new LegacyCache();\n}\n\nfunction createCacheModern(): Cache {\n  return new WeakMap();\n}\n\n/**\n * Get a new cache object to prevent circular references.\n */\nexport const createCache =\n  typeof WeakMap !== 'undefined' ? createCacheModern : createCacheLegacy;\n\n/**\n * Get an empty version of the object with the same prototype it has.\n */\nexport function getCleanClone(prototype: any): any {\n  if (!prototype) {\n    return create(null);\n  }\n\n  const Constructor = prototype.constructor;\n\n  if (Constructor === Object) {\n    return prototype === Object.prototype ? {} : create(prototype);\n  }\n\n  if (\n    Constructor &&\n    ~toStringFunction.call(Constructor).indexOf('[native code]')\n  ) {\n    try {\n      return new Constructor();\n    } catch {}\n  }\n\n  return create(prototype);\n}\n\nfunction getRegExpFlagsLegacy(regExp: RegExp): string {\n  let flags = '';\n\n  if (regExp.global) {\n    flags += 'g';\n  }\n\n  if (regExp.ignoreCase) {\n    flags += 'i';\n  }\n\n  if (regExp.multiline) {\n    flags += 'm';\n  }\n\n  if (regExp.unicode) {\n    flags += 'u';\n  }\n\n  if (regExp.sticky) {\n    flags += 'y';\n  }\n\n  return flags;\n}\n\nfunction getRegExpFlagsModern(regExp: RegExp): string {\n  return regExp.flags;\n}\n\n/**\n * Get the flags to apply to the copied regexp.\n */\nexport const getRegExpFlags =\n  /test/g.flags === 'g' ? getRegExpFlagsModern : getRegExpFlagsLegacy;\n\nfunction getTagLegacy(value: any): string {\n  const type = toStringObject.call(value);\n\n  return type.substring(8, type.length - 1);\n}\n\nfunction getTagModern(value: any): string {\n  return value[Symbol.toStringTag] || getTagLegacy(value);\n}\n\n/**\n * Get the tag of the value passed, so that the correct copier can be used.\n */\nexport const getTag =\n  typeof Symbol !== 'undefined' ? getTagModern : getTagLegacy;\n", "import { getCleanClone, getRegExpFlags } from './utils';\n\nimport type { Cache } from './utils';\n\nexport type InternalCopier<Value> = (value: Value, state: State) => Value;\n\nexport interface State {\n  Constructor: any;\n  cache: Cache;\n  copier: InternalCopier<any>;\n  prototype: any;\n}\n\nconst {\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n} = Object;\nconst { hasOwnProperty, propertyIsEnumerable } = Object.prototype;\n\nconst SUPPORTS_SYMBOL = typeof getOwnPropertySymbols === 'function';\n\nfunction getStrictPropertiesModern(object: any): Array<string | symbol> {\n  return (getOwnPropertyNames(object) as Array<string | symbol>).concat(\n    getOwnPropertySymbols(object)\n  );\n}\n\n/**\n * Get the properites used when copying objects strictly. This includes both keys and symbols.\n */\nconst getStrictProperties = SUPPORTS_SYMBOL\n  ? getStrictPropertiesModern\n  : getOwnPropertyNames;\n\n/**\n * Striclty copy all properties contained on the object.\n */\nfunction copyOwnPropertiesStrict<Value>(\n  value: Value,\n  clone: Value,\n  state: State\n): Value {\n  const properties = getStrictProperties(value);\n\n  for (\n    let index = 0, length = properties.length, property, descriptor;\n    index < length;\n    ++index\n  ) {\n    property = properties[index];\n\n    if (property === 'callee' || property === 'caller') {\n      continue;\n    }\n\n    descriptor = getOwnPropertyDescriptor(value, property);\n\n    if (!descriptor) {\n      // In extra edge cases where the property descriptor cannot be retrived, fall back to\n      // the loose assignment.\n      (clone as any)[property] = state.copier((value as any)[property], state);\n      continue;\n    }\n\n    // Only clone the value if actually a value, not a getter / setter.\n    if (!descriptor.get && !descriptor.set) {\n      descriptor.value = state.copier(descriptor.value, state);\n    }\n\n    try {\n      defineProperty(clone, property, descriptor);\n    } catch (error) {\n      // Tee above can fail on node in edge cases, so fall back to the loose assignment.\n      (clone as any)[property] = descriptor.value;\n    }\n  }\n\n  return clone;\n}\n\n/**\n * Deeply copy the indexed values in the array.\n */\nexport function copyArrayLoose(array: any[], state: State) {\n  const clone = new state.Constructor();\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(array, clone);\n\n  for (let index = 0, length = array.length; index < length; ++index) {\n    clone[index] = state.copier(array[index], state);\n  }\n\n  return clone;\n}\n\n/**\n * Deeply copy the indexed values in the array, as well as any custom properties.\n */\nexport function copyArrayStrict<Value extends any[]>(\n  array: Value,\n  state: State\n) {\n  const clone = new state.Constructor() as Value;\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(array, clone);\n\n  return copyOwnPropertiesStrict(array, clone, state);\n}\n\n/**\n * Copy the contents of the ArrayBuffer.\n */\nexport function copyArrayBuffer<Value extends ArrayBuffer>(\n  arrayBuffer: Value,\n  _state: State\n): Value {\n  return arrayBuffer.slice(0) as Value;\n}\n\n/**\n * Create a new Blob with the contents of the original.\n */\nexport function copyBlob<Value extends Blob>(\n  blob: Value,\n  _state: State\n): Value {\n  return blob.slice(0, blob.size, blob.type) as Value;\n}\n\n/**\n * Create a new DataView with the contents of the original.\n */\nexport function copyDataView<Value extends DataView>(\n  dataView: Value,\n  state: State\n): Value {\n  return new state.Constructor(copyArrayBuffer(dataView.buffer, state));\n}\n\n/**\n * Create a new Date based on the time of the original.\n */\nexport function copyDate<Value extends Date>(date: Value, state: State): Value {\n  return new state.Constructor(date.getTime());\n}\n\n/**\n * Deeply copy the keys and values of the original.\n */\nexport function copyMapLoose<Value extends Map<any, any>>(\n  map: Value,\n  state: State\n): Value {\n  const clone = new state.Constructor() as Value;\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(map, clone);\n\n  map.forEach((value, key) => {\n    clone.set(key, state.copier(value, state));\n  });\n\n  return clone;\n}\n\n/**\n * Deeply copy the keys and values of the original, as well as any custom properties.\n */\nexport function copyMapStrict<Value extends Map<any, any>>(\n  map: Value,\n  state: State\n) {\n  return copyOwnPropertiesStrict(map, copyMapLoose(map, state), state);\n}\n\nfunction copyObjectLooseLegacy<Value extends Record<string, any>>(\n  object: Value,\n  state: State\n): Value {\n  const clone: any = getCleanClone(state.prototype);\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(object, clone);\n\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      clone[key] = state.copier(object[key], state);\n    }\n  }\n\n  return clone;\n}\n\nfunction copyObjectLooseModern<Value extends Record<string, any>>(\n  object: Value,\n  state: State\n): Value {\n  const clone = getCleanClone(state.prototype);\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(object, clone);\n\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      clone[key] = state.copier(object[key], state);\n    }\n  }\n\n  const symbols = getOwnPropertySymbols(object);\n\n  for (\n    let index = 0, length = symbols.length, symbol;\n    index < length;\n    ++index\n  ) {\n    symbol = symbols[index];\n\n    if (propertyIsEnumerable.call(object, symbol)) {\n      clone[symbol] = state.copier((object as any)[symbol], state);\n    }\n  }\n\n  return clone;\n}\n\n/**\n * Deeply copy the properties (keys and symbols) and values of the original.\n */\nexport const copyObjectLoose = SUPPORTS_SYMBOL\n  ? copyObjectLooseModern\n  : copyObjectLooseLegacy;\n\n/**\n * Deeply copy the properties (keys and symbols) and values of the original, as well\n * as any hidden or non-enumerable properties.\n */\nexport function copyObjectStrict<Value extends Record<string, any>>(\n  object: Value,\n  state: State\n): Value {\n  const clone = getCleanClone(state.prototype);\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(object, clone);\n\n  return copyOwnPropertiesStrict(object, clone, state);\n}\n\n/**\n * Create a new primitive wrapper from the value of the original.\n */\nexport function copyPrimitiveWrapper<\n  // Specifically use the object constructor types\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  Value extends Boolean | Number | String\n>(primitiveObject: Value, state: State): Value {\n  return new state.Constructor(primitiveObject.valueOf());\n}\n\n/**\n * Create a new RegExp based on the value and flags of the original.\n */\nexport function copyRegExp<Value extends RegExp>(\n  regExp: Value,\n  state: State\n): Value {\n  const clone = new state.Constructor(\n    regExp.source,\n    getRegExpFlags(regExp)\n  ) as Value;\n\n  clone.lastIndex = regExp.lastIndex;\n\n  return clone;\n}\n\n/**\n * Return the original value (an identity function).\n *\n * @note\n * THis is used for objects that cannot be copied, such as WeakMap.\n */\nexport function copySelf<Value>(value: Value, _state: State): Value {\n  return value;\n}\n\n/**\n * Deeply copy the values of the original.\n */\nexport function copySetLoose<Value extends Set<any>>(\n  set: Value,\n  state: State\n): Value {\n  const clone = new state.Constructor() as Value;\n\n  // set in the cache immediately to be able to reuse the object recursively\n  state.cache.set(set, clone);\n\n  set.forEach((value) => {\n    clone.add(state.copier(value, state));\n  });\n\n  return clone;\n}\n\n/**\n * Deeply copy the values of the original, as well as any custom properties.\n */\nexport function copySetStrict<Value extends Set<any>>(\n  set: Value,\n  state: State\n): Value {\n  return copyOwnPropertiesStrict(set, copySetLoose(set, state), state);\n}\n", "import {\n  copyArrayBuffer,\n  copyArrayLoose,\n  copyArrayStrict,\n  copyBlob,\n  copyDataView,\n  copyDate,\n  copyMapLoose,\n  copyMapStrict,\n  copyObjectLoose,\n  copyObjectStrict,\n  copyPrimitiveWrapper,\n  copyRegExp,\n  copySelf,\n  copySetLoose,\n  copySetStrict,\n} from './copier';\nimport { createCache, getTag } from './utils';\n\nimport type { InternalCopier, State } from './copier';\n\nexport type { State } from './copier';\n\nconst { isArray } = Array;\nconst { assign } = Object;\nconst getPrototypeOf = Object.getPrototypeOf || ((obj) => obj.__proto__)\n\nexport interface CreateCopierOptions {\n  array?: InternalCopier<any[]>;\n  arrayBuffer?: InternalCopier<ArrayBuffer>;\n  blob?: InternalCopier<Blob>;\n  dataView?: InternalCopier<DataView>;\n  date?: InternalCopier<Date>;\n  error?: InternalCopier<any>;\n  map?: InternalCopier<Map<any, any>>;\n  object?: InternalCopier<Record<string, any>>;\n  regExp?: InternalCopier<RegExp>;\n  set?: InternalCopier<Set<any>>;\n}\n\nconst DEFAULT_LOOSE_OPTIONS: Required<CreateCopierOptions> = {\n  array: copyArrayLoose,\n  arrayBuffer: copyArrayBuffer,\n  blob: copyBlob,\n  dataView: copyDataView,\n  date: copyDate,\n  error: copySelf,\n  map: copyMapLoose,\n  object: copyObjectLoose,\n  regExp: copyRegExp,\n  set: copySetLoose,\n};\nconst DEFAULT_STRICT_OPTIONS: Required<CreateCopierOptions> = assign(\n  {},\n  DEFAULT_LOOSE_OPTIONS,\n  {\n    array: copyArrayStrict,\n    map: copyMapStrict,\n    object: copyObjectStrict,\n    set: copySetStrict,\n  }\n);\n\n/**\n * Get the copiers used for each specific object tag.\n */\nfunction getTagSpecificCopiers(\n  options: Required<CreateCopierOptions>\n): Record<string, InternalCopier<any>> {\n  return {\n    Arguments: options.object,\n    Array: options.array,\n    ArrayBuffer: options.arrayBuffer,\n    Blob: options.blob,\n    Boolean: copyPrimitiveWrapper,\n    DataView: options.dataView,\n    Date: options.date,\n    Error: options.error,\n    Float32Array: options.arrayBuffer,\n    Float64Array: options.arrayBuffer,\n    Int8Array: options.arrayBuffer,\n    Int16Array: options.arrayBuffer,\n    Int32Array: options.arrayBuffer,\n    Map: options.map,\n    Number: copyPrimitiveWrapper,\n    Object: options.object,\n    Promise: copySelf,\n    RegExp: options.regExp,\n    Set: options.set,\n    String: copyPrimitiveWrapper,\n    WeakMap: copySelf,\n    WeakSet: copySelf,\n    Uint8Array: options.arrayBuffer,\n    Uint8ClampedArray: options.arrayBuffer,\n    Uint16Array: options.arrayBuffer,\n    Uint32Array: options.arrayBuffer,\n    Uint64Array: options.arrayBuffer,\n  };\n}\n\n/**\n * Create a custom copier based on the object-specific copy methods passed.\n */\nexport function createCopier(options: CreateCopierOptions) {\n  const normalizedOptions = assign({}, DEFAULT_LOOSE_OPTIONS, options);\n  const tagSpecificCopiers = getTagSpecificCopiers(normalizedOptions);\n  const { Array: array, Object: object } = tagSpecificCopiers;\n\n  function copier(value: any, state: State): any {\n    state.prototype = state.Constructor = undefined;\n\n    if (!value || typeof value !== 'object') {\n      return value;\n    }\n\n    if (state.cache.has(value)) {\n      return state.cache.get(value);\n    }\n\n    state.prototype = getPrototypeOf(value);\n    state.Constructor = state.prototype && state.prototype.constructor;\n\n    // plain objects\n    if (!state.Constructor || state.Constructor === Object) {\n      return object(value, state);\n    }\n\n    // arrays\n    if (isArray(value)) {\n      return array(value, state);\n    }\n\n    const tagSpecificCopier = tagSpecificCopiers[getTag(value)];\n\n    if (tagSpecificCopier) {\n      return tagSpecificCopier(value, state);\n    }\n\n    return typeof value.then === 'function' ? value : object(value, state);\n  }\n\n  return function copy<Value>(value: Value): Value {\n    return copier(value, {\n      Constructor: undefined,\n      cache: createCache(),\n      copier,\n      prototype: undefined,\n    });\n  };\n}\n\n/**\n * Create a custom copier based on the object-specific copy methods passed, defaulting to the\n * same internals as `copyStrict`.\n */\nexport function createStrictCopier(options: CreateCopierOptions) {\n  return createCopier(assign({}, DEFAULT_STRICT_OPTIONS, options));\n}\n\n/**\n * Copy an value deeply as much as possible, where strict recreation of object properties\n * are maintained. All properties (including non-enumerable ones) are copied with their\n * original property descriptors on both objects and arrays.\n */\nexport const copyStrict = createStrictCopier({});\n\n/**\n * Copy an value deeply as much as possible.\n */\nexport default createCopier({});\n", "import copy from \"fast-copy\";\nexport default copy;\n", "import copy from \"../utils/copy\";\nimport { isJsonError } from \"../types\";\nimport { isSchemaNode } from \"../schemaNode\";\nexport class Draft {\n    constructor(config, schema) {\n        /** cache for remote schemas */\n        this.remotes = {};\n        /** error creators by id */\n        this.errors = {};\n        /** map for valid keywords of a type  */\n        this.typeKeywords = {};\n        /** keyword validators  */\n        this.validateKeyword = {};\n        /** type validators  */\n        this.validateType = {};\n        /** format validators  */\n        this.validateFormat = {};\n        this.config = config;\n        this.typeKeywords = copy(config.typeKeywords);\n        this.validateKeyword = Object.assign({}, config.validateKeyword);\n        this.validateType = Object.assign({}, config.validateType);\n        this.validateFormat = Object.assign({}, config.validateFormat);\n        this.errors = Object.assign({}, config.errors);\n        this.setSchema(schema);\n    }\n    get rootSchema() {\n        return this.__rootSchema;\n    }\n    set rootSchema(rootSchema) {\n        if (rootSchema == null) {\n            return;\n        }\n        this.__rootSchema = this.config.compileSchema(this, rootSchema);\n    }\n    /**\n     * register a json-schema to be referenced from another json-schema\n     * @param url - base-url of json-schema (aka id)\n     * @param schema - json-schema root\n     */\n    addRemoteSchema(url, schema) {\n        this.config.addRemoteSchema(this, url, schema);\n    }\n    compileSchema(schema) {\n        var _a;\n        return this.config.compileSchema(this, schema, (_a = this.rootSchema) !== null && _a !== void 0 ? _a : schema);\n    }\n    createSchemaOf(data) {\n        return this.config.createSchemaOf(data);\n    }\n    /**\n     * Iterates over data, retrieving its schema\n     *\n     * @param data - the data to iterate\n     * @param callback - will be called with (schema, data, pointer) on each item\n     * @param [schema] - the schema matching the data. Defaults to rootSchema\n     * @param [pointer] - pointer to current data. Default to rootPointer\n     */\n    each(data, callback, schema, pointer) {\n        const node = this.createNode(schema !== null && schema !== void 0 ? schema : this.rootSchema, pointer);\n        return this.config.each(node, data, callback);\n    }\n    eachSchema(callback, schema = this.rootSchema) {\n        return this.config.eachSchema(schema, callback);\n    }\n    getChildSchemaSelection(property, schema) {\n        return this.config.getChildSchemaSelection(this, property, schema);\n    }\n    /**\n     * Returns the json-schema of a data-json-pointer.\n     *\n     * To resolve dynamic schema where the type of json-schema is evaluated by\n     * its value, a data object has to be passed in options.\n     *\n     * Per default this function will return `undefined` for valid properties that\n     * do not have a defined schema. Use the option `withSchemaWarning: true` to\n     * receive an error with `code: schema-warning` containing the location of its\n     * last evaluated json-schema.\n     *\n     * Notes\n     *      - uses draft.step to walk through data and schema\n     *\n     * @param draft\n     * @param pointer - json pointer in data to get the json schema for\n     * @param [options.data] - the data object, which includes the json pointers value. This is optional, as\n     *    long as no oneOf, anyOf, etc statement is part of the pointers schema\n     * @param [options.schema] - the json schema to iterate. Defaults to draft.rootSchema\n     * @param [options.withSchemaWarning] - if true returns an error instead of `undefined` for valid properties missing a schema definition\n     * @return resolved json-schema object of requested json-pointer location\n     */\n    getSchema(options) {\n        const result = this.getSchemaNode(options);\n        if (isSchemaNode(result)) {\n            return result.schema;\n        }\n        return result;\n    }\n    getSchemaNode(options) {\n        return this.config.getSchema(this, options);\n    }\n    /**\n     * Create data object matching the given schema\n     *\n     * @param [data] - optional template data\n     * @param [schema] - json schema, defaults to rootSchema\n     * @return created template data\n     */\n    getTemplate(data, schema, opts = this.config.templateDefaultOptions) {\n        return this.config.getTemplate(this, data, schema, opts);\n    }\n    isValid(data, schema, pointer) {\n        return this.config.isValid(this, data, schema, pointer);\n    }\n    createNode(schema, pointer = \"#\") {\n        return this.config.createNode(this, schema, pointer);\n    }\n    resolveAnyOf(node, data) {\n        return this.config.resolveAnyOf(node, data);\n    }\n    resolveAllOf(node, data) {\n        return this.config.resolveAllOf(node, data);\n    }\n    resolveRef(node) {\n        return this.config.resolveRef(node);\n    }\n    resolveOneOf(node, data) {\n        return this.config.resolveOneOf(node, data);\n    }\n    setSchema(schema) {\n        this.rootSchema = schema;\n    }\n    /**\n     * Returns the json-schema of the given object property or array item.\n     * e.g. it steps by one key into the data\n     *\n     * This helper determines the location of the property within the schema (additional properties, oneOf, ...) and\n     * returns the correct schema.\n     *\n     * @param  node\n     * @param  key       - property-name or array-index\n     * @param  data      - parent of key\n     * @return schema-node containing child schema or error if failed resolving key\n     */\n    step(node, key, data) {\n        return this.config.step(node, key, data);\n    }\n    validate(data, schema = this.rootSchema, pointer) {\n        if (isSchemaNode(data)) {\n            const inputData = schema;\n            const inuptNode = data;\n            return this.config.validate(inuptNode, inputData);\n        }\n        if (isJsonError(data)) {\n            return [data];\n        }\n        const node = this.createNode(schema, pointer);\n        return this.config.validate(node, data);\n    }\n}\n", "/**\n * register a json-schema to be referenced from another json-schema\n * @param url    base-url of json-schema (aka id)\n * @param schema\n */\nexport default function addRemoteSchema(draft, url, schema) {\n    schema.id = schema.id || url;\n    draft.remotes[url] = draft.compileSchema(schema);\n}\n", "import { isObject } from \"./utils/isObject\";\nfunction eachProperty(property, schema, callback, pointer) {\n    const target = schema[property];\n    if (!isObject(target)) {\n        return;\n    }\n    Object.keys(target).forEach(key => {\n        if (Array.isArray(target[key])) {\n            // ignore depndencies list (of properties)\n            return;\n        }\n        if (key === \"$defs\") {\n            eachProperty(\"$defs\", target[key], callback, `${pointer}/${property}/$defs`);\n        }\n        else {\n            eachSchema(target[key], callback, `${pointer}/${property}/${key}`);\n        }\n    });\n}\nfunction eachItem(property, schema, callback, pointer) {\n    const target = schema[property];\n    if (!Array.isArray(target)) {\n        return;\n    }\n    target.forEach((s, key) => eachSchema(s, callback, `${pointer}/${property}/${key}`));\n}\nexport function eachSchema(schema, callback, pointer = \"\") {\n    if (schema === undefined) {\n        return;\n    }\n    // @ts-expect-error untyped\n    if (callback(schema, pointer) === true) {\n        return;\n    }\n    if (!isObject(schema)) {\n        return;\n    }\n    eachProperty(\"properties\", schema, callback, pointer);\n    eachProperty(\"patternProperties\", schema, callback, pointer);\n    eachSchema(schema.not, callback, `${pointer}/not`);\n    eachSchema(schema.additionalProperties, callback, `${pointer}/additionalProperties`);\n    eachProperty(\"dependencies\", schema, callback, pointer);\n    // items\n    isObject(schema.items) && eachSchema(schema.items, callback, `${pointer}/items`);\n    eachItem(\"items\", schema, callback, pointer);\n    // additional items\n    eachSchema(schema.additionalItems, callback, `${pointer}/additionalItems`);\n    // dynamic schemas\n    eachItem(\"allOf\", schema, callback, pointer);\n    eachItem(\"anyOf\", schema, callback, pointer);\n    eachItem(\"oneOf\", schema, callback, pointer);\n    eachSchema(schema.if, callback, `${pointer}/if`);\n    eachSchema(schema.then, callback, `${pointer}/then`);\n    eachSchema(schema.else, callback, `${pointer}/else`);\n    // definitions\n    eachProperty(\"definitions\", schema, callback, pointer);\n    eachProperty(\"$defs\", schema, callback, pointer);\n}\n", "/* eslint max-statements-per-line: [\"error\", { \"max\": 2 }] */\nconst suffixes = /(#)+$/;\nconst trailingHash = /#$/;\nconst startingHashAndSlash = /^[#/]+/;\nconst isDomain = /^[^:]+:\\/\\/[^/]+\\//;\nconst trailingFragments = /\\/[^/]*$/;\nconst idAndPointer = /#.*$/;\n// @todo add missing test for urn ids\nconst isURN = /^urn:uuid:[0-9A-Fa-f]/;\nexport default function joinScope(previous, id) {\n    if (previous == null && id == null) {\n        return \"#\";\n    }\n    if (id == null) {\n        return previous.replace(trailingHash, \"\");\n    }\n    if (isURN.test(id)) {\n        return id;\n    }\n    if (previous == null || previous === \"\" || previous === \"#\") {\n        return id.replace(trailingHash, \"\");\n    }\n    if (id[0] === \"#\") {\n        return `${previous.replace(idAndPointer, \"\")}${id.replace(suffixes, \"\")}`;\n    }\n    if (isDomain.test(id)) {\n        return id.replace(trailingHash, \"\");\n    }\n    if (isDomain.test(previous) && id.startsWith(\"/\")) {\n        // we have a domain that should be joined with an absolute path\n        // thus we have to remove all paths from domain before joining\n        return `${previous.replace(/(^[^:]+:\\/\\/[^/]+)(.*)/, \"$1\")}/${id.replace(startingHashAndSlash, \"\")}`;\n    }\n    return `${previous.replace(trailingFragments, \"\")}/${id.replace(startingHashAndSlash, \"\")}`;\n}\n", "import { get } from \"@sagold/json-pointer\";\nimport splitRef from \"./splitRef\";\nimport getTypeOf from \"../getTypeOf\";\nconst suffixes = /(#)+$/g;\nconst isObject = (val) => getTypeOf(val) === \"object\";\n// 1. combined is known\n// 2. base or pointer is known\n// 3. base + pointer is known\nexport default function getRef(context, rootSchema, $search) {\n    var _a, _b, _c, _d, _e;\n    let $ref;\n    if (isObject($search)) {\n        $ref = $search.__ref || $search.$ref;\n    }\n    else {\n        $ref = $search;\n    }\n    if ($ref == null) {\n        return rootSchema;\n    }\n    // console.log(\"\\n$ref\", $ref);\n    let schema;\n    // is it a known $ref?\n    const $remote = $ref.replace(suffixes, \"\");\n    if (context.remotes[$remote] != null) {\n        schema = context.remotes[$remote];\n        // console.log(\"» remote\");\n        if (schema && schema.$ref) {\n            // console.log(\"»» reresolve\", schema);\n            // @todo add missing test for the following line\n            return getRef(context, schema, schema);\n        }\n        // console.log(\"»» return\", schema);\n        return schema;\n    }\n    // @ts-expect-error @draft 2019-09\n    const $anchor = (_a = context.anchors) === null || _a === void 0 ? void 0 : _a[$ref];\n    if ($anchor) {\n        // console.log(\"» anchor\", $anchor);\n        return get(rootSchema, $anchor);\n    }\n    if (context.ids[$ref] != null) {\n        // console.log(\"» id\", context.ids[$ref]);\n        schema = get(rootSchema, context.ids[$ref]);\n        if (schema && schema.$ref) {\n            // @todo add missing test for the following line\n            return getRef(context, rootSchema, schema);\n        }\n        return schema;\n    }\n    const $inputRef = $ref;\n    // is it a ref with host/pointer?\n    const fragments = splitRef($ref);\n    if (fragments.length === 0) {\n        return rootSchema;\n    }\n    if (fragments.length === 1) {\n        // console.log(\"» frag1\", fragments);\n        // console.log(\"ids\", rootSchema.getContext().ids);\n        $ref = fragments[0];\n        if (context.remotes[$ref]) {\n            // console.log(\"» remote\");\n            schema = context.remotes[$ref];\n            if (schema && schema.$ref) {\n                return getRef(context, rootSchema, schema);\n            }\n        }\n        if (context.ids[$ref]) {\n            // console.log(\"» id\");\n            schema = get(rootSchema, context.ids[$ref]);\n            if (schema && schema.$ref) {\n                return getRef(context, rootSchema, schema);\n            }\n            return schema;\n        }\n        // @todo why this special case\n        const rootContextRef = (_b = rootSchema.getContext) === null || _b === void 0 ? void 0 : _b.call(rootSchema).ids[$ref];\n        if (rootContextRef) {\n            return getRef(context, rootSchema, rootContextRef);\n        }\n    }\n    if (fragments.length === 2) {\n        // console.log(\"» frag2\", fragments);\n        const base = fragments[0];\n        $ref = fragments[1];\n        // @todo this is unnecessary due to inconsistencies\n        const fromRemote = (_c = context.remotes[base]) !== null && _c !== void 0 ? _c : context.remotes[`${base}/`];\n        if (fromRemote) {\n            // console.log(\"» remote\");\n            // We have retrieved a different compiled json-schema. This compiled schema contains a\n            // separate scope (context) where we might need to work with\n            // ANCHOR\n            if (fromRemote.getContext && fromRemote.getContext().anchors[$inputRef] != null) {\n                // console.log(\"» remote » anchor\");\n                // an anchor is stored with its scope (id) it is defined in. Thus collisions are\n                // avoided, but the current condition is required to resolve the anchor for now\n                return fromRemote.getRef($inputRef);\n            }\n            // PATH (get_ref)\n            if (fromRemote.getRef) {\n                // console.log(\"» remote » ref\");\n                // resolve the local part of the reference in the new schema\n                return fromRemote.getRef($ref);\n            }\n            //log(\"warning: uncompiled remote - context may be wrong\", base);\n            return getRef(context, fromRemote, $ref);\n        }\n        // @todo this is unnecessary due to inconsistencies\n        const fromId = (_d = context.ids[base]) !== null && _d !== void 0 ? _d : context.ids[`${base}/`];\n        if (fromId) {\n            // console.log(\"» id\", fromId);\n            return getRef(context, get(rootSchema, fromId), $ref);\n        }\n    }\n    // console.log(\"» other\");\n    schema = get(rootSchema, (_e = context.ids[$ref]) !== null && _e !== void 0 ? _e : $ref);\n    if (schema && schema.$ref) {\n        return getRef(context, rootSchema, schema);\n    }\n    return schema;\n}\n", "const suffixes = /(#)+$/g;\nconst emptyValues = [\"\", null, \"#\"];\nexport default function splitRef($ref) {\n    if (emptyValues.includes($ref)) {\n        return [];\n    }\n    $ref = $ref.replace(suffixes, \"\");\n    if ($ref.indexOf(\"#\") === -1) {\n        return [$ref.replace(/(#|\\/)+$/g, \"\")];\n    }\n    if ($ref.indexOf(\"#\") === 0) {\n        return [$ref.replace(suffixes, \"\")];\n    }\n    const result = $ref.split(\"#\");\n    result[0] = result[0].replace(/(#|\\/)+$/g, \"\");\n    result[1] = `#${result[1].replace(suffixes, \"\")}`;\n    return result;\n}\n", "/* eslint max-statements-per-line: [\"error\", { \"max\": 2 }] */\nimport { eachSchema } from \"../eachSchema\";\nimport joinScope from \"./joinScope\";\nimport getRef from \"./getRef\";\nimport { get } from \"@sagold/json-pointer\";\nconst COMPILED = \"__compiled\";\nconst COMPILED_REF = \"__ref\";\nconst GET_REF = \"getRef\";\nconst GET_ROOT = \"getRoot\";\nconst suffixes = /(#|\\/)+$/g;\n/**\n * compiles the input root schema for `$ref` resolution and returns it again\n * @attention this modifies input schema but maintains data-structure and thus returns\n * the same object with JSON.stringify\n *\n * for a compiled json-schema you can call getRef on any contained schema (location of type).\n * this resolves a $ref target to a valid schema (for a valid $ref)\n *\n * @param draft\n * @param schemaToCompile - json-schema to compile\n * @param [rootSchema] - compiled root json-schema to use for definitions resolution\n * @param [force] = false - force compile json-schema\n * @return compiled input json-schema\n */\nexport default function compileSchema(draft, schemaToCompile, rootSchema = schemaToCompile, force = false) {\n    if (!schemaToCompile || schemaToCompile[COMPILED] !== undefined) {\n        return schemaToCompile;\n    }\n    const context = { ids: {}, remotes: draft.remotes };\n    const rootSchemaAsString = JSON.stringify(schemaToCompile);\n    const compiledSchema = JSON.parse(rootSchemaAsString);\n    Object.defineProperties(compiledSchema, {\n        // flag this schema as compiled\n        [COMPILED]: { enumerable: false, value: true },\n        // add getRef-helper to this object\n        [GET_REF]: {\n            enumerable: false,\n            value: getRef.bind(null, context, compiledSchema)\n        }\n    });\n    // bail early, when no $refs are defined\n    if (force === false && rootSchemaAsString.includes(\"$ref\") === false) {\n        return compiledSchema;\n    }\n    // compile this schema under rootSchema, making definitions available to $ref-resolution\n    if (schemaToCompile !== rootSchema) {\n        Object.defineProperty(compiledSchema, \"definitions\", {\n            enumerable: false,\n            value: Object.assign({}, rootSchema.definitions, rootSchema.$defs, schemaToCompile.definitions, schemaToCompile.$defs)\n        });\n    }\n    const scopes = {};\n    const getRoot = () => compiledSchema;\n    eachSchema(compiledSchema, (schema, pointer) => {\n        var _a;\n        if (schema.id) {\n            // if this is a schema being merged on root object, we cannot override\n            // parents locations, but must reuse it\n            if (schema.id.startsWith(\"http\") && /(allOf|anyOf|oneOf)\\/\\d+$/.test(pointer)) {\n                const parentPointer = pointer.replace(/\\/(allOf|anyOf|oneOf)\\/\\d+$/, \"\");\n                const parentSchema = get(compiledSchema, parentPointer);\n                schema.id = (_a = parentSchema.id) !== null && _a !== void 0 ? _a : schema.id;\n            }\n            context.ids[schema.id.replace(suffixes, \"\")] = pointer;\n        }\n        // build up scopes and add them to $ref-resolution map\n        pointer = `#${pointer}`.replace(/##+/, \"#\");\n        const previousPointer = pointer.replace(/\\/[^/]+$/, \"\");\n        const parentPointer = pointer.replace(/\\/[^/]+\\/[^/]+$/, \"\");\n        const previousScope = scopes[previousPointer] || scopes[parentPointer];\n        const scope = joinScope(previousScope, schema.id);\n        scopes[pointer] = scope;\n        if (context.ids[scope] == null) {\n            context.ids[scope] = pointer;\n        }\n        if (schema.$ref && !schema[COMPILED_REF]) {\n            Object.defineProperty(schema, COMPILED_REF, {\n                enumerable: false,\n                value: joinScope(scope, schema.$ref)\n            });\n            // @todo currently not used:\n            Object.defineProperty(schema, GET_ROOT, { enumerable: false, value: getRoot });\n            // console.log(\"compiled ref\", scope, schema.$ref, \"=>\", joinScope(scope, schema.$ref));\n        }\n    });\n    // console.log(JSON.stringify(context.ids, null, 2));\n    return compiledSchema;\n}\n", "import getTypeOf from \"./getTypeOf\";\nimport { isObject } from \"./utils/isObject\";\n/**\n * Create a simple json schema for the given input data\n * @param  data - data to get json schema for\n */\nexport default function createSchemaOf(data) {\n    if (data === undefined) {\n        return undefined;\n    }\n    const schema = {\n        type: getTypeOf(data)\n    };\n    if (schema.type === \"object\" && isObject(data)) {\n        schema.properties = {};\n        Object.keys(data).forEach((key) => (schema.properties[key] = createSchemaOf(data[key])));\n    }\n    if (schema.type === \"array\" && Array.isArray(data)) {\n        if (data.length === 1) {\n            schema.items = createSchemaOf(data[0]);\n        }\n        else {\n            schema.items = data.map(createSchemaOf);\n        }\n    }\n    return schema;\n}\n", "/* eslint no-invalid-this: 0 */\nimport { createCustomError } from \"../utils/createCustomError\";\nconst errors = {\n    additionalItemsError: createCustomError(\"AdditionalItemsError\"),\n    additionalPropertiesError: createCustomError(\"AdditionalPropertiesError\"),\n    allOfError: createCustomError(\"AllOfError\"),\n    anyOfError: createCustomError(\"AnyOfError\"),\n    constError: createCustomError(\"ConstError\"),\n    containsAnyError: createCustomError(\"ContainsAnyError\"),\n    containsArrayError: createCustomError(\"ContainsArrayError\"),\n    containsError: createCustomError(\"ContainsError\"),\n    containsMaxError: createCustomError(\"ContainsMaxError\"),\n    containsMinError: createCustomError(\"ContainsMinError\"),\n    enumError: createCustomError(\"EnumError\"),\n    forbiddenPropertyError: createCustomError(\"ForbiddenPropertyError\"),\n    formatDateError: createCustomError(\"FormatDateError\"),\n    formatDateTimeError: createCustomError(\"FormatDateTimeError\"),\n    formatDurationError: createCustomError(\"FormatDurationError\"),\n    formatEmailError: createCustomError(\"FormatEmailError\"),\n    formatHostnameError: createCustomError(\"FormatHostnameError\"),\n    formatIPV4Error: createCustomError(\"FormatIPV4Error\"),\n    formatIPV4LeadingZeroError: createCustomError(\"FormatIPV4LeadingZeroError\"),\n    formatIPV6Error: createCustomError(\"FormatIPV6Error\"),\n    formatIPV6LeadingZeroError: createCustomError(\"FormatIPV6LeadingZeroError\"),\n    formatJsonPointerError: createCustomError(\"FormatJsonPointerError\"),\n    formatRegExError: createCustomError(\"FormatRegExError\"),\n    formatTimeError: createCustomError(\"FormatTimeError\"),\n    formatURIError: createCustomError(\"FormatURIError\"),\n    formatURIReferenceError: createCustomError(\"FormatURIReferenceError\"),\n    formatURITemplateError: createCustomError(\"FormatURITemplateError\"),\n    formatURLError: createCustomError(\"FormatURLError\"),\n    formatUUIDError: createCustomError(\"FormatUUIDError\"),\n    invalidDataError: createCustomError(\"InvalidDataError\"),\n    invalidPropertyNameError: createCustomError(\"InvalidPropertyNameError\"),\n    invalidSchemaError: createCustomError(\"InvalidSchemaError\"),\n    invalidTypeError: createCustomError(\"InvalidTypeError\"),\n    maximumError: createCustomError(\"MaximumError\"),\n    maxItemsError: createCustomError(\"MaxItemsError\"),\n    maxLengthError: createCustomError(\"MaxLengthError\"),\n    maxPropertiesError: createCustomError(\"MaxPropertiesError\"),\n    minimumError: createCustomError(\"MinimumError\"),\n    minItemsError: createCustomError(\"MinItemsError\"),\n    minItemsOneError: createCustomError(\"MinItemsOneError\"),\n    minLengthError: createCustomError(\"MinLengthError\"),\n    minLengthOneError: createCustomError(\"MinLengthOneError\"),\n    minPropertiesError: createCustomError(\"MinPropertiesError\"),\n    missingDependencyError: createCustomError(\"MissingDependencyError\"),\n    missingOneOfPropertyError: createCustomError(\"MissingOneOfPropertyError\"),\n    multipleOfError: createCustomError(\"MultipleOfError\"),\n    multipleOneOfError: createCustomError(\"MultipleOneOfError\"),\n    noAdditionalPropertiesError: createCustomError(\"NoAdditionalPropertiesError\"),\n    notError: createCustomError(\"NotError\"),\n    oneOfError: createCustomError(\"OneOfError\"),\n    oneOfPropertyError: createCustomError(\"OneOfPropertyError\"),\n    patternError: createCustomError(\"PatternError\"),\n    patternPropertiesError: createCustomError(\"PatternPropertiesError\"),\n    requiredPropertyError: createCustomError(\"RequiredPropertyError\"),\n    schemaWarning: createCustomError(\"SchemaWarning\"),\n    typeError: createCustomError(\"TypeError\"),\n    undefinedValueError: createCustomError(\"UndefinedValueError\"),\n    unevaluatedItemsError: createCustomError(\"UnevaluatedItemsError\"),\n    unevaluatedPropertyError: createCustomError(\"UnevaluatedPropertyError\"),\n    uniqueItemsError: createCustomError(\"UniqueItemsError\"),\n    unknownPropertyError: createCustomError(\"UnknownPropertyError\"),\n    valueNotEmptyError: createCustomError(\"ValueNotEmptyError\")\n};\nexport default errors;\n", "import validUrl from \"valid-url\";\nimport { parse as parseIdnEmail } from \"smtp-address-parser\";\nimport getTypeOf from \"../getTypeOf\";\nconst isValidIPV4 = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\nconst isValidIPV6 = /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i;\nconst isValidHostname = /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/;\nconst matchDate = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst matchTime = /^(?<time>(?:([0-1]\\d|2[0-3]):[0-5]\\d:(?<second>[0-5]\\d|60)))(?:\\.\\d+)?(?<offset>(?:z|[+-]([0-1]\\d|2[0-3])(?::?[0-5]\\d)?))$/i;\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst isValidJsonPointer = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nconst isValidRelativeJsonPointer = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\nconst isValidURIRef = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nconst isValidURITemplate = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\nconst isValidDurationString = /^P(?!$)(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?$/;\n// Default Json-Schema formats: date-time, email, hostname, ipv4, ipv6, uri, uriref\nconst formatValidators = {\n    date: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        // https://github.com/cfworker/cfworker/blob/main/packages/json-schema/src/format.ts\n        // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n        const matches = value.match(matchDate);\n        if (!matches) {\n            return draft.errors.formatDateTimeError({ value, pointer, schema });\n        }\n        const year = +matches[1];\n        const month = +matches[2];\n        const day = +matches[3];\n        // https://tools.ietf.org/html/rfc3339#appendix-C\n        const isLeapYear = year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        if (month >= 1 &&\n            month <= 12 &&\n            day >= 1 &&\n            day <= (month == 2 && isLeapYear ? 29 : DAYS[month])) {\n            return undefined;\n        }\n        return draft.errors.formatDateError({ value, pointer, schema });\n    },\n    \"date-time\": (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        const dateAndTime = value.split(/t/i);\n        if (dateAndTime.length === 2) {\n            const dateIsValid = formatValidators.date(node, dateAndTime[0]) === undefined;\n            const timeIsValid = formatValidators.time(node, dateAndTime[1]) === undefined;\n            if (dateIsValid && timeIsValid) {\n                return undefined;\n            }\n        }\n        return draft.errors.formatDateTimeError({ value, pointer, schema });\n    },\n    duration: (node, value) => {\n        const type = getTypeOf(value);\n        if (type !== \"string\") {\n            return undefined;\n        }\n        // weeks cannot be combined with other units\n        const isInvalidDurationString = /(\\d+M)(\\d+W)|(\\d+Y)(\\d+W)/;\n        if (!isValidDurationString.test(value) ||\n            isInvalidDurationString.test(value)) {\n            return node.draft.errors.formatDurationError({\n                value,\n                pointer: node.pointer,\n                schema: node.schema\n            });\n        }\n    },\n    email: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        // taken from https://github.com/ExodusMovement/schemasafe/blob/master/src/formats.js\n        if (value[0] === '\"') {\n            return draft.errors.formatEmailError({ value, pointer, schema });\n        }\n        const [name, host, ...rest] = value.split(\"@\");\n        if (!name || !host || rest.length !== 0 || name.length > 64 || host.length > 253) {\n            return draft.errors.formatEmailError({ value, pointer, schema });\n        }\n        if (name[0] === \".\" || name.endsWith(\".\") || name.includes(\"..\")) {\n            return draft.errors.formatEmailError({ value, pointer, schema });\n        }\n        if (!/^[a-z0-9.-]+$/i.test(host) || !/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+$/i.test(name)) {\n            return draft.errors.formatEmailError({ value, pointer, schema });\n        }\n        if (!host.split(\".\").every((part) => /^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$/i.test(part))) {\n            return draft.errors.formatEmailError({ value, pointer, schema });\n        }\n        return undefined;\n    },\n    /**\n     * @draft 7\n     * [RFC6531] https://json-schema.org/draft-07/json-schema-validation.html#RFC6531\n     */\n    \"idn-email\": (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        try {\n            parseIdnEmail(value);\n            return undefined;\n        }\n        catch (e) {\n            return draft.errors.formatEmailError({ value, pointer, schema });\n        }\n    },\n    hostname: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\") {\n            return undefined;\n        }\n        if (value === \"\" || isValidHostname.test(value)) {\n            return undefined;\n        }\n        return draft.errors.formatHostnameError({ value, pointer, schema });\n    },\n    ipv4: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        if (value && value[0] === \"0\") {\n            // leading zeroes should be rejected, as they are treated as octals\n            return draft.errors.formatIPV4LeadingZeroError({ value, pointer, schema });\n        }\n        if (value.length <= 15 && isValidIPV4.test(value)) {\n            return undefined;\n        }\n        return draft.errors.formatIPV4Error({ value, pointer, schema });\n    },\n    ipv6: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        if (value && value[0] === \"0\") {\n            // leading zeroes should be rejected, as they are treated as octals\n            return draft.errors.formatIPV6LeadingZeroError({ value, pointer, schema });\n        }\n        if (value.length <= 45 && isValidIPV6.test(value)) {\n            return undefined;\n        }\n        return draft.errors.formatIPV6Error({ value, pointer, schema });\n    },\n    \"json-pointer\": (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        if (isValidJsonPointer.test(value)) {\n            return undefined;\n        }\n        return draft.errors.formatJsonPointerError({ value, pointer, schema });\n    },\n    \"relative-json-pointer\": (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\") {\n            return undefined;\n        }\n        if (isValidRelativeJsonPointer.test(value)) {\n            return undefined;\n        }\n        return draft.errors.formatJsonPointerError({ value, pointer, schema });\n    },\n    regex: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value === \"string\" && /\\\\Z$/.test(value) === false) {\n            try {\n                new RegExp(value);\n                return undefined;\n            }\n            catch (e) { } // eslint-disable-line no-empty\n            return draft.errors.formatRegExError({ value, pointer, schema });\n        }\n        // v7 tests, ignore non-regex values\n        if (typeof value === \"object\" || typeof value === \"number\" || Array.isArray(value)) {\n            return undefined;\n        }\n        return draft.errors.formatRegExError({ value, pointer, schema });\n    },\n    // hh:mm:ss.sTZD\n    // RFC 3339 https://datatracker.ietf.org/doc/html/rfc3339#section-4\n    time: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        // https://github.com/cfworker/cfworker/blob/main/packages/json-schema/src/format.ts\n        const matches = value.match(matchTime);\n        if (!matches) {\n            return draft.errors.formatDateTimeError({ value, pointer, schema });\n        }\n        // leap second\n        if (matches.groups.second === \"60\") {\n            // bail early\n            if (/23:59:60(z|\\+00:00)/i.test(value)) {\n                return undefined;\n            }\n            // check if sum matches 23:59\n            const minutes = matches.groups.time.match(/(\\d+):(\\d+):/);\n            const offsetMinutes = matches.groups.offset.match(/(\\d+):(\\d+)/);\n            if (offsetMinutes) {\n                const hour = parseInt(minutes[1]);\n                const offsetHour = parseInt(offsetMinutes[1]);\n                const min = parseInt(minutes[2]);\n                const offsetMin = parseInt(offsetMinutes[2]);\n                let deltaTime;\n                if (/^-/.test(matches.groups.offset)) {\n                    deltaTime = (hour + offsetHour) * 60 + (min + offsetMin);\n                }\n                else {\n                    deltaTime = (24 + hour - offsetHour) * 60 + (min - offsetMin);\n                }\n                const hours = Math.floor(deltaTime / 60);\n                const actualHour = hours % 24;\n                const actualMinutes = deltaTime - hours * 60;\n                if (actualHour === 23 && actualMinutes === 59) {\n                    return undefined;\n                }\n            }\n            return draft.errors.formatDateTimeError({ value, pointer, schema });\n        }\n        return undefined;\n    },\n    uri: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        if (validUrl.isUri(value)) {\n            return undefined;\n        }\n        return draft.errors.formatURIError({ value, pointer, schema });\n    },\n    \"uri-reference\": (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        if (isValidURIRef.test(value)) {\n            return undefined;\n        }\n        return draft.errors.formatURIReferenceError({ value, pointer, schema });\n    },\n    \"uri-template\": (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        if (isValidURITemplate.test(value)) {\n            return undefined;\n        }\n        return draft.errors.formatURITemplateError({ value, pointer, schema });\n    },\n    url: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (value === \"\" || validUrl.isWebUri(value)) {\n            return undefined;\n        }\n        return draft.errors.formatURLError({ value, pointer, schema });\n    },\n    uuid: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (typeof value !== \"string\" || value === \"\") {\n            return undefined;\n        }\n        if (/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(value)) {\n            return undefined;\n        }\n        return draft.errors.formatUUIDError({ value, pointer, schema });\n    }\n};\nexport default formatValidators;\n", "import { isJsonError } from \"./types\";\nimport { isObject } from \"./utils/isObject\";\n/**\n * Returns a list of possible child-schemas for the given property key. In case of a oneOf selection, multiple schemas\n * could be added at the given property (e.g. item-index), thus an array of options is returned. In all other cases\n * a list with a single item will be returned\n *\n * @param draft       - draft to use\n * @param property    - parent schema of following property\n * @param [schema]    - parent schema of following property\n * @return\n */\nexport default function getChildSchemaSelection(draft, property, schema = draft.rootSchema) {\n    var _a;\n    if (schema.oneOf) {\n        return schema.oneOf.map((item) => draft.createNode(item).resolveRef().schema);\n    }\n    if ((_a = schema.items) === null || _a === void 0 ? void 0 : _a.oneOf) {\n        return schema.items.oneOf.map((item) => draft.createNode(item).resolveRef().schema);\n    }\n    // array.items[] found\n    if (Array.isArray(schema.items) && schema.items.length > +property) {\n        return [draft.step(draft.createNode(schema), property, {}).schema];\n    }\n    // array.items[] exceeded (or undefined), but additionalItems specified\n    if (schema.additionalItems && !isObject(schema.items)) {\n        // we fallback to a string if no schema is defined - might be subject for configuration\n        const additionalSchema = schema.additionalItems === true ? { type: \"string\" } : schema.additionalItems;\n        return [draft.createNode(additionalSchema).resolveRef().schema];\n    }\n    // array.items[] exceeded\n    if (Array.isArray(schema.items) && schema.items.length <= +property) {\n        return [];\n    }\n    const node = draft.step(draft.createNode(schema), property, {});\n    if (isJsonError(node)) {\n        const error = node;\n        return error;\n    }\n    return [node.schema];\n}\n", "import gp from \"@sagold/json-pointer\";\nimport { isJsonError } from \"./types\";\nconst emptyObject = {};\n/**\n * Returns a node containing json-schema of a data-json-pointer.\n *\n * To resolve dynamic schema where the type of json-schema is evaluated by\n * its value, a data object has to be passed in options.\n *\n * Per default this function will return `undefined` schema for valid properties\n * that do not have a defined schema. Use the option `withSchemaWarning: true` to\n * receive an error with `code: schema-warning` containing the location of its\n * last evaluated json-schema.\n *\n * Example:\n *\n * ```ts\n * draft.setSchema({ type: \"object\", properties: { title: { type: \"string\" } } });\n * const result = draft.getSchema({  pointer: \"#/title\" }, data: { title: \"my header\" });\n * const schema = isSchemaNode(result) ? result.schema : undefined;\n * // schema = { type: \"string\" }\n * ```\n *\n * @param draft\n * @param [options.pointer] - json pointer in data to get the json schema for\n * @param [options.data] - the data object, which includes the json pointers value. This is optional, as\n *    long as no oneOf, anyOf, etc statement is part of the pointers schema\n * @param [options.schema] - the json schema to iterate. Defaults to draft.rootSchema\n * @param [options.withSchemaWarning] - if true returns an error instead of `undefined` for valid properties missing a schema definition\n * @return json-error or node containing schema of requested json-pointer location\n */\nexport default function getSchema(draft, options = emptyObject) {\n    const { pointer = \"#\", data, schema = draft.rootSchema, withSchemaWarning = false } = options;\n    const path = gp.split(pointer);\n    const node = draft.createNode(schema).resolveRef();\n    const result = _getSchema(node, path, data);\n    if (!withSchemaWarning && isJsonError(result) && result.code === \"schema-warning\") {\n        return draft.createNode(undefined);\n    }\n    return result;\n}\nfunction _getSchema(node, path, data = emptyObject) {\n    if (path.length === 0) {\n        return node.resolveRef();\n    }\n    const key = path.shift(); // step key\n    const nextNode = node.draft.step(node, key, data); // step schema\n    if (isJsonError(nextNode)) {\n        return nextNode;\n    }\n    // @ts-expect-error data\n    data = data[key]; // step data\n    return _getSchema(nextNode, path, data);\n}\n", "import deepmerge from \"deepmerge\";\nconst overwriteMerge = (destinationArray, sourceArray) => sourceArray;\n/**\n * returns a new json-schema, where properties are combined and arrays are replaced\n */\nexport default (a, b) => deepmerge(a, b, { arrayMerge: overwriteMerge });\n// var d = c.filter((item, pos) => c.indexOf(item) === pos)\nconst mergeUniqueItems = (destinationArray, sourceArray) => {\n    const all = destinationArray.concat(sourceArray);\n    return all.filter((item, pos) => all.indexOf(item) === pos);\n};\n/**\n * returns a new json-schema, where properties are combined and arrays are replaced\n */\nexport const mergeArraysUnique = (a, b) => deepmerge(a, b, { arrayMerge: mergeUniqueItems });\n", "import getTypeOf from \"../getTypeOf\";\nexport function isEmpty(v) {\n    const type = getTypeOf(v);\n    switch (type) {\n        case \"string\":\n        case \"array\":\n            // @ts-expect-error tested as array - could use ts type guard\n            return (v === null || v === void 0 ? void 0 : v.length) === 0;\n        case \"null\":\n        case \"undefined\":\n            return true;\n        case \"object\":\n            return Object.keys(v).length === 0;\n        default:\n            return false;\n    }\n}\n", "/* eslint quote-props: 0, max-statements-per-line: [\"error\", { \"max\": 2 }] */\nimport { resolveOneOfFuzzy } from \"./features/oneOf\";\nimport getTypeOf from \"./getTypeOf\";\nimport merge from \"./utils/merge\";\nimport copy from \"./utils/copy\";\nimport settings from \"./config/settings\";\nimport { isJsonError } from \"./types\";\nimport { isSchemaNode } from \"./schemaNode\";\nimport { isEmpty } from \"./utils/isEmpty\";\nimport { resolveIfSchema } from \"./features/if\";\nimport { mergeAllOfSchema, resolveSchema } from \"./features/allOf\";\nimport { resolveDependencies } from \"./features/dependencies\";\nimport { mergeSchema } from \"./mergeSchema\";\nconst defaultOptions = settings.templateDefaultOptions;\nlet cache;\nfunction shouldResolveRef(schema, pointer) {\n    const { $ref } = schema;\n    if ($ref == null) {\n        return true;\n    }\n    const value = cache[pointer] == null || cache[pointer][$ref] == null ? 0 : cache[pointer][$ref];\n    return value < settings.GET_TEMPLATE_RECURSION_LIMIT;\n}\nfunction resolveRef(draft, schema, pointer) {\n    const { $ref } = schema;\n    if ($ref == null) {\n        return schema;\n    }\n    // @todo pointer + ref is redundant?\n    cache[pointer] = cache[pointer] || {};\n    cache[pointer][$ref] = cache[pointer][$ref] || 0;\n    cache[pointer][$ref] += 1;\n    return draft.createNode(schema, pointer).resolveRef().schema;\n}\nfunction convertValue(type, value) {\n    if (type === \"string\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof value !== \"string\") {\n        return null;\n    }\n    try {\n        value = JSON.parse(value);\n        if (typeof value === type) {\n            return value;\n        }\n    }\n    catch (e) { } // eslint-disable-line no-empty\n    return null;\n}\n/**\n * Resolves $ref, allOf and anyOf schema-options, returning a combined json-schema.\n * Also returns a pointer-property on schema, that must be used as current pointer.\n *\n * @param draft\n * @param schema\n * @param data\n * @param pointer\n * @return resolved json-schema or input-schema\n */\nfunction createTemplateSchema(draft, schema, data, pointer, opts) {\n    // invalid schema\n    if (getTypeOf(schema) !== \"object\") {\n        return Object.assign({ pointer }, schema);\n    }\n    // return if reached recursion limit\n    if (shouldResolveRef(schema, pointer) === false && data == null) {\n        return false;\n    }\n    // resolve $ref and copy schema\n    let templateSchema = copy(resolveRef(draft, schema, pointer));\n    // @feature anyOf\n    if (Array.isArray(schema.anyOf) && schema.anyOf.length > 0) {\n        // test if we may resolve\n        if (shouldResolveRef(schema.anyOf[0], `${pointer}/anyOf/0`)) {\n            const resolvedAnyOf = resolveRef(draft, schema.anyOf[0], `${pointer}/anyOf/0`);\n            templateSchema = merge(templateSchema, resolvedAnyOf);\n            // add pointer return-value, if any\n            templateSchema.pointer = schema.anyOf[0].$ref || templateSchema.pointer;\n        }\n        delete templateSchema.anyOf;\n    }\n    // @feature allOf\n    if (Array.isArray(schema.allOf)) {\n        const mayResolve = schema.allOf\n            .map((allOf, index) => shouldResolveRef(allOf, `${pointer}/allOf/${index}`))\n            .reduceRight((next, before) => next && before, true);\n        if (mayResolve) {\n            // before merging all-of, we need to resolve all if-then-else statesments\n            // we need to udpate data on the way to trigger if-then-else schemas sequentially.\n            // Note that this will make if-then-else order-dependent\n            const allOf = [];\n            let extendedData = copy(data);\n            for (let i = 0; i < schema.allOf.length; i += 1) {\n                const allNode = draft.createNode(schema.allOf[i], pointer);\n                allOf.push(resolveSchema(allNode, extendedData).schema);\n                extendedData = getTemplate(draft, extendedData, { type: schema.type, ...allOf[i] }, `${pointer}/allOf/${i}`, opts);\n            }\n            const resolvedSchema = mergeAllOfSchema(draft, { allOf });\n            if (resolvedSchema) {\n                templateSchema = mergeSchema(templateSchema, resolvedSchema);\n            }\n        }\n    }\n    templateSchema.pointer = templateSchema.pointer || schema.$ref || pointer;\n    return templateSchema;\n}\nconst isJsonSchema = (template) => template && typeof template === \"object\";\n/**\n * Create data object matching the given schema\n *\n * @param draft - json schema draft\n * @param [data] - optional template data\n * @param [schema] - json schema, defaults to rootSchema\n * @return created template data\n */\nfunction getTemplate(draft, data, _schema, pointer, opts) {\n    var _a;\n    if (_schema == null) {\n        throw new Error(`getTemplate: missing schema for data: ${JSON.stringify(data)}`);\n    }\n    if (pointer == null) {\n        throw new Error(\"Missing pointer\");\n    }\n    // resolve $ref references, allOf and first anyOf definitions\n    let schema = createTemplateSchema(draft, _schema, data, pointer, opts);\n    if (!isJsonSchema(schema)) {\n        return undefined;\n    }\n    pointer = schema.pointer;\n    if (schema === null || schema === void 0 ? void 0 : schema.const) {\n        return schema.const;\n    }\n    // @feature oneOf\n    if (Array.isArray(schema.oneOf)) {\n        if (isEmpty(data)) {\n            const type = schema.oneOf[0].type || schema.type || (schema.const && typeof schema.const) || getTypeOf(data);\n            schema = { ...schema.oneOf[0], type };\n        }\n        else {\n            // find correct schema for data\n            const oneNode = draft.createNode(schema, pointer);\n            const resolvedNode = resolveOneOfFuzzy(oneNode, data);\n            if (isJsonError(resolvedNode)) {\n                if (data != null && opts.removeInvalidData !== true) {\n                    return data;\n                }\n                // override\n                schema = schema.oneOf[0];\n                data = undefined;\n            }\n            else {\n                const resolvedSchema = resolvedNode.schema;\n                resolvedSchema.type = (_a = resolvedSchema.type) !== null && _a !== void 0 ? _a : schema.type;\n                schema = resolvedSchema;\n            }\n        }\n    }\n    // @todo Array.isArray(schema.type)\n    // -> hasDefault? return\n    // if not -> pick first types\n    if (!isJsonSchema(schema) || schema.type == null) {\n        return undefined;\n    }\n    // @attention - very special case to support file instances\n    if (data instanceof File) {\n        return data;\n    }\n    const type = Array.isArray(schema.type) ? selectType(schema.type, data, schema.default) : schema.type;\n    // reset invalid type\n    const javascriptTypeOfData = getTypeOf(data);\n    if (data != null && javascriptTypeOfData !== type && !(javascriptTypeOfData === \"number\" && type === \"integer\")) {\n        data = convertValue(type, data);\n    }\n    if (TYPE[type] == null) {\n        // in case we could not resolve the type\n        // (schema-type could not be resolved and returned an error)\n        if (opts.removeInvalidData) {\n            return undefined;\n        }\n        return data;\n    }\n    const templateData = TYPE[type](draft, schema, data, pointer, opts);\n    return templateData;\n}\nfunction selectType(types, data, defaultValue) {\n    if (data == undefined) {\n        if (defaultValue != null) {\n            const defaultType = getTypeOf(defaultValue);\n            if (types.includes(defaultType)) {\n                return defaultType;\n            }\n        }\n        return types[0];\n    }\n    const dataType = getTypeOf(data);\n    if (types.includes(dataType)) {\n        return dataType;\n    }\n    return types[0];\n}\nconst TYPE = {\n    null: (draft, schema, data) => getDefault(schema, data, null),\n    string: (draft, schema, data) => getDefault(schema, data, \"\"),\n    number: (draft, schema, data) => getDefault(schema, data, 0),\n    integer: (draft, schema, data) => getDefault(schema, data, 0),\n    boolean: (draft, schema, data) => getDefault(schema, data, false),\n    object: (draft, schema, data, pointer, opts) => {\n        var _a;\n        const template = schema.default === undefined ? {} : schema.default;\n        const d = {}; // do not assign data here, to keep ordering from json-schema\n        const required = opts.extendDefaults === false && schema.default !== undefined ? [] : ((_a = schema.required) !== null && _a !== void 0 ? _a : []);\n        if (schema.properties) {\n            Object.keys(schema.properties).forEach((key) => {\n                const value = data == null || data[key] == null ? template[key] : data[key];\n                const isRequired = required.includes(key);\n                // Omit adding a property if it is not required or optional props should be added\n                if (value != null || isRequired || opts.addOptionalProps) {\n                    d[key] = getTemplate(draft, value, schema.properties[key], `${pointer}/properties/${key}`, opts);\n                }\n            });\n        }\n        // @feature dependencies\n        // has to be done after resolving properties so dependency may trigger\n        const dNode = draft.createNode(schema, pointer);\n        let dependenciesSchema = resolveDependencies(dNode, d);\n        if (dependenciesSchema) {\n            dependenciesSchema = mergeSchema(schema, dependenciesSchema);\n            delete dependenciesSchema.dependencies;\n            const dependencyData = getTemplate(draft, data, dependenciesSchema, `${pointer}/dependencies`, opts);\n            Object.assign(d, dependencyData);\n        }\n        if (data) {\n            if (opts.removeInvalidData === true &&\n                (schema.additionalProperties === false || getTypeOf(schema.additionalProperties) === \"object\")) {\n                if (getTypeOf(schema.additionalProperties) === \"object\") {\n                    Object.keys(data).forEach((key) => {\n                        if (d[key] == null) {\n                            // merge valid missing data (additionals) to resulting object\n                            if (draft.isValid(data[key], schema.additionalProperties)) {\n                                d[key] = data[key];\n                            }\n                        }\n                    });\n                }\n            }\n            else {\n                // merge any missing data (additionals) to resulting object\n                Object.keys(data).forEach((key) => d[key] == null && (d[key] = data[key]));\n            }\n        }\n        // @feature if-then-else\n        const node = draft.createNode(schema, pointer);\n        const ifSchema = resolveIfSchema(node, d);\n        if (isSchemaNode(ifSchema)) {\n            const additionalData = getTemplate(draft, d, { type: \"object\", ...ifSchema.schema }, pointer, opts);\n            Object.assign(d, additionalData);\n        }\n        // returns object, which is ordered by json-schema\n        return d;\n    },\n    // build array type of items, ignores additionalItems\n    array: (draft, schema, data, pointer, opts) => {\n        var _a, _b, _c;\n        const template = schema.default === undefined ? [] : schema.default;\n        const d = data || template;\n        const minItems = opts.extendDefaults === false && schema.default !== undefined ? 0 : ((_a = schema.minItems) !== null && _a !== void 0 ? _a : 0);\n        if (schema.items == null) {\n            if (schema.additionalItems) {\n                // items-array was processed & this is not an items-schema\n                // => all items are additionalItems\n                const itemCount = Math.max(minItems, d.length);\n                for (let i = 0; i < itemCount; i += 1) {\n                    d[i] = getTemplate(draft, d[i], schema.additionalItems, `${pointer}/additionalItems`, opts);\n                }\n            }\n            return data || []; // items are undefined\n        }\n        // build defined set of items\n        if (Array.isArray(schema.items)) {\n            const length = Math.max(minItems !== null && minItems !== void 0 ? minItems : 0, (_c = (_b = schema.items) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0);\n            for (let i = 0; i < length; i += 1) {\n                if (schema.items[i]) {\n                    d[i] = getTemplate(draft, d[i] == null ? template[i] : d[i], schema.items[i], `${pointer}/items/${i}`, opts);\n                }\n                else if (schema.additionalItems) {\n                    d[i] = getTemplate(draft, d[i] == null ? template[i] : d[i], schema.additionalItems, `${pointer}/additionalItems`, opts);\n                }\n            }\n            return d;\n        }\n        // no items-schema - return\n        if (getTypeOf(schema.items) !== \"object\") {\n            return d;\n        }\n        // resolve allOf and first anyOf definition\n        const templateSchema = createTemplateSchema(draft, schema.items, data, pointer, opts);\n        if (templateSchema === false) {\n            return d;\n        }\n        pointer = templateSchema.pointer || pointer;\n        // build data for first oneOf-schema\n        if (templateSchema.oneOf && d.length === 0) {\n            const oneOfSchema = templateSchema.oneOf[0];\n            for (let i = 0; i < minItems; i += 1) {\n                d[i] = getTemplate(draft, d[i] == null ? template[i] : d[i], oneOfSchema, `${pointer}/oneOf/0`, opts);\n            }\n            return d;\n        }\n        // complete data selecting correct oneOf-schema\n        if (templateSchema.oneOf && d.length > 0) {\n            const itemCount = Math.max(minItems, d.length);\n            for (let i = 0; i < itemCount; i += 1) {\n                let value = d[i] == null ? template[i] : d[i];\n                const oneNode = draft.createNode(templateSchema, pointer);\n                let one = resolveOneOfFuzzy(oneNode, value);\n                if (one == null || isJsonError(one)) {\n                    // schema could not be resolved or data is invalid\n                    if (value != null && opts.removeInvalidData !== true) {\n                        // keep invalid value\n                        d[i] = value;\n                    }\n                    else {\n                        // replace invalid value\n                        value = undefined;\n                        one = templateSchema.oneOf[0];\n                        d[i] = getTemplate(draft, value, one, `${pointer}/oneOf/${i}`, opts);\n                    }\n                }\n                else {\n                    // schema is valid\n                    d[i] = getTemplate(draft, value, one.schema, `${pointer}/oneOf/${i}`, opts);\n                }\n            }\n            return d;\n        }\n        // build data from items-definition\n        if (templateSchema.type) {\n            for (let i = 0, l = Math.max(minItems, d.length); i < l; i += 1) {\n                d[i] = getTemplate(draft, d[i] == null ? template[i] : d[i], templateSchema, `${pointer}/items`, opts);\n            }\n            return d;\n        }\n        return d;\n    }\n};\nfunction getDefault(schema, templateValue, initValue) {\n    if (templateValue != null) {\n        return templateValue;\n    }\n    else if (schema.const) {\n        return schema.const;\n    }\n    else if (schema.default === undefined && Array.isArray(schema.enum)) {\n        return schema.enum[0];\n    }\n    else if (schema.default === undefined) {\n        return initValue;\n    }\n    return schema.default;\n}\nexport default (draft, data, schema = draft.rootSchema, opts) => {\n    cache = {};\n    if (opts) {\n        return getTemplate(draft, data, schema, \"#\", { ...defaultOptions, ...opts });\n    }\n    return getTemplate(draft, data, schema, \"#\", defaultOptions);\n};\n", "/**\n * Test if the data is valid according to the given schema\n *\n * @param draft - validator\n * @param value - value to validate\n * @param [schema] - json schema\n * @param [pointer] - json pointer pointing to value\n * @return if schema does match given value\n */\nexport default function isValid(draft, value, schema = draft.rootSchema, pointer = \"#\") {\n    const node = draft.createNode(schema, pointer);\n    return draft.validate(node, value).length === 0;\n}\n", "/* eslint no-bitwise: 0 */\n/**\n * taken from punycode@2.1.0\n *\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param string The Unicode input string (UCS-2).\n * @returns The new array of code points.\n */\nexport default function ucs2decode(string) {\n    const output = [];\n    let counter = 0;\n    const length = string.length;\n    while (counter < length) {\n        const value = string.charCodeAt(counter++);\n        if (value >= 0xd800 && value <= 0xdbff && counter < length) {\n            // It's a high surrogate, and there is a next character.\n            const extra = string.charCodeAt(counter++);\n            // eslint-disable-next-line eqeqeq\n            if ((extra & 0xfc00) == 0xdc00) {\n                // Low surrogate.\n                output.push(((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\n            }\n            else {\n                // It's an unmatched surrogate; only append this code unit, in case the\n                // next code unit is the high surrogate of a surrogate pair.\n                output.push(value);\n                counter--;\n            }\n        }\n        else {\n            output.push(value);\n        }\n    }\n    return output;\n}\n", "/**\n * returns the floating point precision of a decimal number or 0\n */\nexport function getPrecision(value) {\n    const string = `${value}`;\n    if (string.includes(\"e-\")) {\n        return parseInt(string.replace(/.*e-/, \"\"));\n    }\n    const index = string.indexOf(\".\");\n    return index === -1 ? 0 : string.length - (index + 1);\n}\n", "import getTypeOf from \"../getTypeOf\";\nimport settings from \"../config/settings\";\nimport ucs2decode from \"../utils/punycode.ucs2decode\";\nimport { isObject } from \"../utils/isObject\";\nimport { isJsonError } from \"../types\";\nimport { validateAllOf } from \"../features/allOf\";\nimport { validateAnyOf } from \"../features/anyOf\";\nimport { validateDependencies } from \"../features/dependencies\";\nimport { validateOneOf } from \"../features/oneOf\";\nimport { getPrecision } from \"../utils/getPrecision\";\nimport deepEqual from \"fast-deep-equal\";\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasProperty = (value, property) => !(value[property] === undefined || !hasOwnProperty.call(value, property));\n// list of validation keywords: http://json-schema.org/latest/json-schema-validation.html#rfc.section.5\nconst KeywordValidation = {\n    additionalProperties: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (schema.additionalProperties === true || schema.additionalProperties == null) {\n            return undefined;\n        }\n        if (getTypeOf(schema.patternProperties) === \"object\" &&\n            schema.additionalProperties === false) {\n            // this is an arrangement with patternProperties. patternProperties validate before additionalProperties:\n            // https://spacetelescope.github.io/understanding-json-schema/reference/object.html#index-5\n            return undefined;\n        }\n        const errors = [];\n        let receivedProperties = Object.keys(value).filter((prop) => settings.propertyBlacklist.includes(prop) === false);\n        const expectedProperties = Object.keys(schema.properties || {});\n        if (getTypeOf(schema.patternProperties) === \"object\") {\n            // filter received properties by matching patternProperties\n            const patterns = Object.keys(schema.patternProperties).map((pattern) => new RegExp(pattern));\n            receivedProperties = receivedProperties.filter((prop) => {\n                for (let i = 0; i < patterns.length; i += 1) {\n                    if (patterns[i].test(prop)) {\n                        return false; // remove\n                    }\n                }\n                return true;\n            });\n        }\n        // adds an error for each an unexpected property\n        for (let i = 0, l = receivedProperties.length; i < l; i += 1) {\n            const property = receivedProperties[i];\n            if (expectedProperties.indexOf(property) === -1) {\n                const additionalIsObject = isObject(schema.additionalProperties);\n                // additionalProperties { oneOf: [] }\n                if (additionalIsObject && Array.isArray(schema.additionalProperties.oneOf)) {\n                    const result = draft.resolveOneOf(node.next(schema.additionalProperties), value[property]);\n                    if (isJsonError(result)) {\n                        errors.push(draft.errors.additionalPropertiesError({\n                            pointer,\n                            schema: schema.additionalProperties,\n                            value,\n                            property: receivedProperties[i],\n                            properties: expectedProperties,\n                            // pass all validation errors\n                            errors: result.data.errors\n                        }));\n                    }\n                    else {\n                        errors.push(...draft.validate(node.next(result, property), value[property]));\n                    }\n                    // additionalProperties {}\n                }\n                else if (additionalIsObject) {\n                    const res = draft.validate(node.next(schema.additionalProperties, property), value[property]);\n                    errors.push(...res);\n                }\n                else {\n                    errors.push(draft.errors.noAdditionalPropertiesError({\n                        pointer,\n                        schema,\n                        value,\n                        property: receivedProperties[i],\n                        properties: expectedProperties\n                    }));\n                }\n            }\n        }\n        return errors;\n    },\n    allOf: validateAllOf,\n    anyOf: validateAnyOf,\n    dependencies: validateDependencies,\n    enum: (node, value) => {\n        const { draft, schema, pointer } = node;\n        const type = getTypeOf(value);\n        if (type === \"object\" || type === \"array\") {\n            const valueStr = JSON.stringify(value);\n            for (let i = 0; i < schema.enum.length; i += 1) {\n                if (JSON.stringify(schema.enum[i]) === valueStr) {\n                    return undefined;\n                }\n            }\n        }\n        else if (schema.enum.includes(value)) {\n            return undefined;\n        }\n        return draft.errors.enumError({ pointer, schema, value, values: schema.enum });\n    },\n    format: (node, value) => {\n        const { draft, schema } = node;\n        if (draft.validateFormat[schema.format]) {\n            const errors = draft.validateFormat[schema.format](node, value);\n            return errors;\n        }\n        // fail silently if given format is not defined\n        return undefined;\n    },\n    items: (node, value) => {\n        const { draft, schema, pointer } = node;\n        // @draft >= 7 bool schema\n        if (schema.items === false) {\n            if (Array.isArray(value) && value.length === 0) {\n                return undefined;\n            }\n            return draft.errors.invalidDataError({ pointer, value, schema });\n        }\n        const errors = [];\n        for (let i = 0; i < value.length; i += 1) {\n            const itemData = value[i];\n            // @todo reevaluate: incomplete schema is created here\n            const itemNode = draft.step(node.next(schema), i, value);\n            if (isJsonError(itemNode)) {\n                return [itemNode];\n            }\n            const itemErrors = draft.validate(itemNode, itemData);\n            errors.push(...itemErrors);\n        }\n        return errors;\n    },\n    maximum: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.maximum)) {\n            return undefined;\n        }\n        if (schema.maximum && schema.maximum < value) {\n            return draft.errors.maximumError({\n                maximum: schema.maximum,\n                length: value,\n                value,\n                pointer,\n                schema\n            });\n        }\n        if (schema.maximum && schema.exclusiveMaximum === true && schema.maximum === value) {\n            return draft.errors.maximumError({\n                maximum: schema.maximum,\n                length: value,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    maxItems: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.maxItems)) {\n            return undefined;\n        }\n        if (schema.maxItems < value.length) {\n            return draft.errors.maxItemsError({\n                maximum: schema.maxItems,\n                length: value.length,\n                schema,\n                value,\n                pointer\n            });\n        }\n        return undefined;\n    },\n    maxLength: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.maxLength)) {\n            return undefined;\n        }\n        const lengthOfString = ucs2decode(value).length;\n        if (schema.maxLength < lengthOfString) {\n            return draft.errors.maxLengthError({\n                maxLength: schema.maxLength,\n                length: lengthOfString,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    maxProperties: (node, value) => {\n        const { draft, schema, pointer } = node;\n        const propertyCount = Object.keys(value).length;\n        if (isNaN(schema.maxProperties) === false && schema.maxProperties < propertyCount) {\n            return draft.errors.maxPropertiesError({\n                maxProperties: schema.maxProperties,\n                length: propertyCount,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    minLength: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.minLength)) {\n            return undefined;\n        }\n        const lengthOfString = ucs2decode(value).length;\n        if (schema.minLength > lengthOfString) {\n            if (schema.minLength === 1) {\n                return draft.errors.minLengthOneError({\n                    minLength: schema.minLength,\n                    length: lengthOfString,\n                    pointer,\n                    schema,\n                    value\n                });\n            }\n            return draft.errors.minLengthError({\n                minLength: schema.minLength,\n                length: lengthOfString,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    minimum: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.minimum)) {\n            return undefined;\n        }\n        if (schema.minimum > value) {\n            return draft.errors.minimumError({\n                minimum: schema.minimum,\n                length: value,\n                pointer,\n                schema,\n                value\n            });\n        }\n        if (schema.exclusiveMinimum === true && schema.minimum === value) {\n            return draft.errors.minimumError({\n                minimum: schema.minimum,\n                length: value,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    minItems: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.minItems)) {\n            return undefined;\n        }\n        if (schema.minItems > value.length) {\n            if (schema.minItems === 1) {\n                return draft.errors.minItemsOneError({\n                    minItems: schema.minItems,\n                    length: value.length,\n                    pointer,\n                    schema,\n                    value\n                });\n            }\n            return draft.errors.minItemsError({\n                minItems: schema.minItems,\n                length: value.length,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    minProperties: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.minProperties)) {\n            return undefined;\n        }\n        const propertyCount = Object.keys(value).length;\n        if (schema.minProperties > propertyCount) {\n            return draft.errors.minPropertiesError({\n                minProperties: schema.minProperties,\n                length: propertyCount,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    multipleOf: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.multipleOf) || typeof value !== \"number\") {\n            return undefined;\n        }\n        const valuePrecision = getPrecision(value);\n        const multiplePrecision = getPrecision(schema.multipleOf);\n        if (valuePrecision > multiplePrecision) {\n            // value with higher precision then multipleOf-precision can never be multiple\n            return draft.errors.multipleOfError({\n                multipleOf: schema.multipleOf,\n                value,\n                pointer,\n                schema\n            });\n        }\n        const precision = Math.pow(10, multiplePrecision);\n        const val = Math.round(value * precision);\n        const multiple = Math.round(schema.multipleOf * precision);\n        if ((val % multiple) / precision !== 0) {\n            return draft.errors.multipleOfError({\n                multipleOf: schema.multipleOf,\n                value,\n                pointer,\n                schema\n            });\n        }\n        // maybe also check overflow\n        // https://stackoverflow.com/questions/1815367/catch-and-compute-overflow-during-multiplication-of-two-large-integers\n        return undefined;\n    },\n    not: (node, value) => {\n        const { draft, schema, pointer } = node;\n        const errors = [];\n        if (draft.validate(node.next(schema.not), value).length === 0) {\n            errors.push(draft.errors.notError({ value, not: schema.not, pointer, schema }));\n        }\n        return errors;\n    },\n    oneOf: validateOneOf,\n    pattern: (node, value) => {\n        const { draft, schema, pointer } = node;\n        const pattern = new RegExp(schema.pattern, \"u\");\n        if (pattern.test(value) === false) {\n            return draft.errors.patternError({\n                pattern: schema.pattern,\n                description: schema.patternExample || schema.pattern,\n                received: value,\n                schema,\n                value,\n                pointer\n            });\n        }\n        return undefined;\n    },\n    patternProperties: (node, value) => {\n        const { draft, schema, pointer } = node;\n        const properties = schema.properties || {};\n        const pp = schema.patternProperties;\n        if (getTypeOf(pp) !== \"object\") {\n            return undefined;\n        }\n        const errors = [];\n        const keys = Object.keys(value);\n        const patterns = Object.keys(pp).map((expr) => ({\n            regex: new RegExp(expr),\n            patternSchema: pp[expr]\n        }));\n        keys.forEach((key) => {\n            let patternFound = false;\n            for (let i = 0, l = patterns.length; i < l; i += 1) {\n                if (patterns[i].regex.test(key)) {\n                    patternFound = true;\n                    const valErrors = draft.validate(node.next(patterns[i].patternSchema, key), value[key]);\n                    if (valErrors && valErrors.length > 0) {\n                        errors.push(...valErrors);\n                    }\n                }\n            }\n            if (properties[key]) {\n                return;\n            }\n            if (patternFound === false && schema.additionalProperties === false) {\n                // this is an arrangement with additionalProperties\n                errors.push(draft.errors.patternPropertiesError({\n                    key,\n                    pointer,\n                    schema,\n                    value,\n                    patterns: Object.keys(pp).join(\",\")\n                }));\n            }\n        });\n        return errors;\n    },\n    properties: (node, value) => {\n        const { draft, schema } = node;\n        const errors = [];\n        const keys = Object.keys(schema.properties || {});\n        for (let i = 0; i < keys.length; i += 1) {\n            const key = keys[i];\n            if (hasProperty(value, key)) {\n                const itemNode = draft.step(node, key, value);\n                if (isJsonError(itemNode)) {\n                    errors.push(itemNode);\n                }\n                else {\n                    const keyErrors = draft.validate(itemNode, value[key]);\n                    errors.push(...keyErrors);\n                }\n            }\n        }\n        return errors;\n    },\n    // @todo move to separate file: this is custom keyword validation for JsonEditor.properties keyword\n    propertiesRequired: (node, value) => {\n        const { draft, schema, pointer } = node;\n        const errors = [];\n        const keys = Object.keys(schema.properties || {});\n        for (let i = 0; i < keys.length; i += 1) {\n            const key = keys[i];\n            if (value[key] === undefined) {\n                errors.push(draft.errors.requiredPropertyError({ key, pointer, schema, value }));\n            }\n            else {\n                const itemNode = draft.step(node, key, value);\n                const keyErrors = draft.validate(itemNode, value[key]);\n                errors.push(...keyErrors);\n            }\n        }\n        return errors;\n    },\n    required: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (Array.isArray(schema.required) === false) {\n            return undefined;\n        }\n        return schema.required.map((property) => {\n            if (!hasProperty(value, property)) {\n                return draft.errors.requiredPropertyError({\n                    key: property,\n                    pointer,\n                    schema,\n                    value\n                });\n            }\n            return undefined;\n        });\n    },\n    // @todo move to separate file: this is custom keyword validation for JsonEditor.required keyword\n    requiredNotEmpty: (node, value) => {\n        const { schema } = node;\n        if (Array.isArray(schema.required) === false) {\n            return undefined;\n        }\n        return schema.required.map((property) => {\n            const { draft, schema, pointer } = node;\n            if (value[property] == null || value[property] === \"\") {\n                return draft.errors.valueNotEmptyError({\n                    property,\n                    pointer: `${pointer}/${property}`,\n                    schema,\n                    value\n                });\n            }\n            return undefined;\n        });\n    },\n    uniqueItems: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if ((Array.isArray(value) && schema.uniqueItems) === false) {\n            return undefined;\n        }\n        const duplicates = [];\n        const errors = [];\n        value.forEach((item, index) => {\n            for (let i = index + 1; i < value.length; i += 1) {\n                if (deepEqual(item, value[i]) && !duplicates.includes(i)) {\n                    errors.push(draft.errors.uniqueItemsError({\n                        pointer: `${pointer}/${i}`,\n                        duplicatePointer: `${pointer}/${index}`,\n                        arrayPointer: pointer,\n                        value: JSON.stringify(item),\n                        schema\n                    }));\n                    duplicates.push(i);\n                }\n            }\n        });\n        return errors;\n    }\n};\nexport default KeywordValidation;\n", "import getTypeOf from \"./getTypeOf\";\nimport createSchemaOf from \"./createSchemaOf\";\nimport { isJsonError } from \"./types\";\nimport { reduceSchema } from \"./reduceSchema\";\nconst stepType = {\n    array: (node, key, data) => {\n        const { draft, schema, pointer } = node;\n        const itemValue = data === null || data === void 0 ? void 0 : data[key];\n        const itemsType = getTypeOf(schema.items);\n        if (itemsType === \"object\") {\n            // @spec: ignore additionalItems, when items is schema-object\n            return reduceSchema(node.next(schema.items, key), itemValue);\n        }\n        if (itemsType === \"array\") {\n            // @draft >= 7 bool schema, items:[true, false]\n            if (schema.items[key] === true) {\n                return node.next(createSchemaOf(itemValue), key);\n            }\n            // @draft >= 7 bool schema, items:[true, false]\n            if (schema.items[key] === false) {\n                return draft.errors.invalidDataError({\n                    key,\n                    value: itemValue,\n                    pointer,\n                    schema\n                });\n            }\n            if (schema.items[key]) {\n                return draft.resolveRef(node.next(schema.items[key], key));\n            }\n            if (schema.additionalItems === false) {\n                return draft.errors.additionalItemsError({\n                    key,\n                    value: itemValue,\n                    pointer,\n                    schema\n                });\n            }\n            if (schema.additionalItems === true || schema.additionalItems === undefined) {\n                return node.next(createSchemaOf(itemValue), key);\n            }\n            if (getTypeOf(schema.additionalItems) === \"object\") {\n                return node.next(schema.additionalItems, key);\n            }\n            throw new Error(`Invalid schema ${JSON.stringify(schema, null, 2)} for ${JSON.stringify(data, null, 2)}`);\n        }\n        if (schema.additionalItems !== false && itemValue) {\n            // @todo reevaluate: incomplete schema is created here\n            // @todo support additionalItems: {schema}\n            return node.next(createSchemaOf(itemValue), key);\n        }\n        return new Error(`Invalid array schema for ${key} at ${pointer}`);\n    },\n    object: (node, key, data) => {\n        var _a, _b;\n        const { draft, pointer } = node;\n        const reduction = reduceSchema(node, data);\n        const schema = ((_a = reduction.schema) !== null && _a !== void 0 ? _a : reduction);\n        // @feature properties\n        const property = (_b = schema === null || schema === void 0 ? void 0 : schema.properties) === null || _b === void 0 ? void 0 : _b[key];\n        if (property !== undefined) {\n            // @todo patternProperties also validate properties\n            // @feature boolean schema\n            if (property === false) {\n                return draft.errors.forbiddenPropertyError({\n                    property: key,\n                    value: data,\n                    pointer,\n                    schema\n                });\n            }\n            else if (property === true) {\n                return node.next(createSchemaOf(data === null || data === void 0 ? void 0 : data[key]), key);\n            }\n            const nextPropertyNode = draft.resolveRef(node.next(property, key));\n            if (isJsonError(nextPropertyNode)) {\n                return nextPropertyNode;\n            }\n            // check if there is a oneOf selection, which must be resolved\n            if (nextPropertyNode && Array.isArray(nextPropertyNode.schema.oneOf)) {\n                // @special case: this is a mix of a schema and optional definitions\n                // we resolve the schema here and add the original schema to `oneOfSchema`\n                const nextNode = node.next(nextPropertyNode.schema, key);\n                const result = draft.resolveOneOf(nextNode, data[key]);\n                if (isJsonError(result)) {\n                    return result;\n                }\n                return nextNode.merge(result.schema, \"oneOf\");\n            }\n            if (nextPropertyNode) {\n                return nextPropertyNode;\n            }\n        }\n        // @feature patternProperties\n        const { patternProperties } = schema;\n        if (getTypeOf(patternProperties) === \"object\") {\n            // find matching property key\n            let regex;\n            const patterns = Object.keys(patternProperties);\n            for (let i = 0, l = patterns.length; i < l; i += 1) {\n                regex = new RegExp(patterns[i]);\n                if (regex.test(key)) {\n                    return node.next(patternProperties[patterns[i]], key);\n                }\n            }\n        }\n        // @feature additionalProperties\n        const { additionalProperties } = schema;\n        if (getTypeOf(additionalProperties) === \"object\") {\n            return node.next(schema.additionalProperties, key);\n        }\n        if (data && (additionalProperties === undefined || additionalProperties === true)) {\n            const generatedSchema = createSchemaOf(data[key]);\n            return generatedSchema ? node.next(generatedSchema, key) : undefined;\n        }\n        return draft.errors.unknownPropertyError({\n            property: key,\n            value: data,\n            pointer: `${pointer}`,\n            schema\n        });\n    }\n};\n/**\n * Returns the json-schema of the given object property or array item.\n * e.g. it steps by one key into the data\n *\n *  This helper determines the location of the property within the schema (additional properties, oneOf, ...) and\n *  returns the correct schema.\n *\n * @param  draft      - validator\n * @param  key       - property-name or array-index\n * @param  schema    - json schema of current data\n * @param  data      - parent of key\n * @param  [pointer] - pointer to schema and data (parent of key)\n * @return Schema or Error if failed resolving key\n */\nexport default function step(node, key, data) {\n    var _a;\n    const { draft, schema, pointer } = node;\n    const typeOfData = getTypeOf(data);\n    let schemaType = (_a = schema.type) !== null && _a !== void 0 ? _a : typeOfData;\n    // @draft >= 4 ?\n    if (Array.isArray(schemaType)) {\n        if (!schemaType.includes(typeOfData)) {\n            return draft.errors.typeError({\n                value: data,\n                pointer,\n                expected: schema.type,\n                received: typeOfData,\n                schema\n            });\n        }\n        schemaType = typeOfData;\n    }\n    const stepFunction = stepType[schemaType];\n    if (stepFunction) {\n        const childNode = stepFunction(node, `${key}`, data);\n        if (childNode === undefined) {\n            return draft.errors.schemaWarning({ pointer, value: data, schema, key });\n        }\n        return childNode;\n    }\n    return new Error(`Unsupported schema type ${schema.type} for key ${key}`);\n}\n", "/**\n * @todo: type is also a keyword, as is properties, items, etc\n *\n * An instance has one of six primitive types (http://json-schema.org/latest/json-schema-node.draft.html#rfc.section.4.2)\n * or seven in case of ajv https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#type\n * 1 null, 2 boolean, 3 object, 4 array, 5 number, 6 string (7 integer)\n */\nconst typeValidators = {\n    array: (node, value) => node.draft.typeKeywords.array\n        .filter((key) => node.schema && node.schema[key] != null)\n        .map((key) => node.draft.validateKeyword[key](node, value)),\n    object: (node, value) => node.draft.typeKeywords.object\n        .filter((key) => node.schema && node.schema[key] != null)\n        .map((key) => node.draft.validateKeyword[key](node, value)),\n    string: (node, value) => node.draft.typeKeywords.string\n        .filter((key) => node.schema && node.schema[key] != null)\n        .map((key) => node.draft.validateKeyword[key](node, value)),\n    integer: (node, value) => node.draft.typeKeywords.number\n        .filter((key) => node.schema && node.schema[key] != null)\n        .map((key) => node.draft.validateKeyword[key](node, value)),\n    number: (node, value) => node.draft.typeKeywords.number\n        .filter((key) => node.schema && node.schema[key] != null)\n        .map((key) => node.draft.validateKeyword[key](node, value)),\n    boolean: (node, value) => node.draft.typeKeywords.boolean\n        .filter((key) => node.schema && node.schema[key] != null)\n        .map((key) => node.draft.validateKeyword[key](node, value)),\n    null: (node, value) => node.draft.typeKeywords.null\n        .filter((key) => node.schema && node.schema[key] != null)\n        .map((key) => node.draft.validateKeyword[key](node, value))\n};\nexport default typeValidators;\n", "import getTypeOf from \"./getTypeOf\";\nimport { errorOrPromise } from \"./utils/filter\";\nimport flattenArray from \"./utils/flattenArray\";\nimport { isJsonError } from \"./types\";\nimport { isSchemaNode } from \"./schemaNode\";\nimport equal from \"fast-deep-equal\";\nfunction getJsonSchemaType(value, expectedType) {\n    const jsType = getTypeOf(value);\n    if (jsType === \"number\" &&\n        (expectedType === \"integer\" ||\n            (Array.isArray(expectedType) && expectedType.includes(\"integer\")))) {\n        return Number.isInteger(value) || isNaN(value) ? \"integer\" : \"number\";\n    }\n    return jsType;\n}\n/**\n * Validates data with json schema\n *\n * @param draft - validator\n * @param value - value to validate\n * @param [schema] - json schema, defaults to rootSchema\n * @param [pointer] - json pointer pointing to value (used for error-messages only)\n * @return list of errors or empty\n */\nexport default function validate(node, value) {\n    if (!isSchemaNode(node)) {\n        throw new Error(\"node expected\");\n    }\n    const { draft, pointer } = node;\n    node = node.resolveRef();\n    const schema = node.schema;\n    if (schema == null) {\n        throw new Error(\"missing schema\");\n    }\n    // @draft >= 07\n    if (getTypeOf(schema) === \"boolean\") {\n        if (schema) {\n            return [];\n        }\n        return [draft.errors.invalidDataError({ pointer, schema, value })];\n    }\n    if (isJsonError(schema)) {\n        return [schema];\n    }\n    // @draft >= 6 const\n    if (schema.const !== undefined) {\n        if (equal(schema.const, value)) {\n            return [];\n        }\n        return [draft.errors.constError({ pointer, schema, value, expected: schema.const })];\n    }\n    const receivedType = getJsonSchemaType(value, schema.type);\n    const expectedType = schema.type || receivedType;\n    if (receivedType !== expectedType &&\n        (!Array.isArray(expectedType) || !expectedType.includes(receivedType))) {\n        return [\n            draft.errors.typeError({\n                pointer,\n                schema,\n                value,\n                received: receivedType,\n                expected: expectedType\n            })\n        ];\n    }\n    if (draft.validateType[receivedType] == null) {\n        return [draft.errors.invalidTypeError({ pointer, schema, value, receivedType })];\n    }\n    // get type validation results\n    const errors = flattenArray(draft.validateType[receivedType](node, value));\n    return errors.filter(errorOrPromise); // ignore promises here\n}\n", "import getTypeOf from \"./getTypeOf\";\nimport { isSchemaNode } from \"./schemaNode\";\n/**\n * Iterates over data, retrieving its schema\n *\n * @param draft - validator\n * @param data - the data to iterate\n * @param callback - will be called with (schema, data, pointer) on each item\n * @param [schema] - the schema matching the data. Defaults to rootSchema\n * @param [pointer] - pointer to current data. Default to rootPointer\n */\nexport function each(schemaNode, data, callback) {\n    const node = schemaNode.resolveRef();\n    const { draft, schema, pointer } = node;\n    callback(schema, data, pointer);\n    const dataType = getTypeOf(data);\n    if (dataType === \"object\") {\n        Object.keys(data).forEach((key) => {\n            const nextNode = draft.step(node, key, data);\n            if (isSchemaNode(nextNode)) {\n                each(nextNode, data[key], callback);\n            }\n        });\n    }\n    else if (dataType === \"array\") {\n        data.forEach((next, key) => {\n            const nextNode = draft.step(node, key, data);\n            if (isSchemaNode(nextNode)) {\n                each(nextNode, data[key], callback);\n            }\n        });\n    }\n}\n", "import addRemoteSchema from \"./addRemoteSchema\";\nimport compileSchema from \"../compile\";\nimport createSchemaOf from \"../createSchemaOf\";\nimport ERRORS from \"../validation/errors\";\nimport FORMATS from \"../validation/format\";\nimport getChildSchemaSelection from \"../getChildSchemaSelection\";\nimport getSchema from \"../getSchema\";\nimport getTemplate from \"../getTemplate\";\nimport isValid from \"../isValid\";\nimport KEYWORDS from \"../validation/keyword\";\nimport merge from \"../utils/merge\";\nimport resolveRef from \"../resolveRef.strict\";\nimport settings from \"../config/settings\";\nimport step from \"../step\";\nimport TYPES from \"../validation/type\";\nimport validate from \"../validate\";\nimport { createNode } from \"../schemaNode\";\nimport { Draft } from \"../draft\";\nimport { each } from \"../each\";\nimport { eachSchema } from \"../eachSchema\";\nimport { resolveAllOf } from \"../features/allOf\";\nimport { resolveAnyOf } from \"../features/anyOf\";\nimport { resolveOneOf } from \"../features/oneOf\";\nconst draft04Config = {\n    typeKeywords: {\n        array: [\n            \"allOf\",\n            \"anyOf\",\n            \"enum\",\n            \"items\",\n            \"maxItems\",\n            \"minItems\",\n            \"not\",\n            \"oneOf\",\n            \"uniqueItems\"\n        ],\n        boolean: [\"enum\", \"not\", \"allOf\", \"anyOf\", \"oneOf\"],\n        object: [\n            \"additionalProperties\",\n            \"dependencies\",\n            \"enum\",\n            \"format\",\n            \"minProperties\",\n            \"maxProperties\",\n            \"patternProperties\",\n            \"properties\",\n            \"required\",\n            \"not\",\n            \"oneOf\",\n            \"allOf\",\n            \"anyOf\"\n        ],\n        string: [\n            \"allOf\",\n            \"anyOf\",\n            \"enum\",\n            \"format\",\n            \"maxLength\",\n            \"minLength\",\n            \"not\",\n            \"oneOf\",\n            \"pattern\"\n        ],\n        number: [\n            \"allOf\",\n            \"anyOf\",\n            \"enum\",\n            \"format\",\n            \"maximum\",\n            \"minimum\",\n            \"multipleOf\",\n            \"not\",\n            \"oneOf\"\n        ],\n        null: [\"allOf\", \"anyOf\", \"enum\", \"format\", \"not\", \"oneOf\"]\n    },\n    createNode,\n    validateKeyword: KEYWORDS,\n    validateType: TYPES,\n    validateFormat: FORMATS,\n    errors: ERRORS,\n    addRemoteSchema,\n    compileSchema,\n    createSchemaOf,\n    each,\n    eachSchema,\n    getChildSchemaSelection,\n    getSchema,\n    getTemplate,\n    isValid,\n    resolveAllOf,\n    resolveAnyOf,\n    resolveOneOf,\n    resolveRef,\n    step,\n    validate,\n    templateDefaultOptions: settings.templateDefaultOptions\n};\nclass Draft04 extends Draft {\n    constructor(schema, config = {}) {\n        super(merge(draft04Config, config), schema);\n    }\n}\nexport { Draft04, draft04Config };\n", "/**\n * register a json-schema to be referenced from another json-schema\n * @param url    base-url of json-schema (aka id)\n * @param schema\n */\nexport default function addRemoteSchema(draft, url, schema) {\n    // @draft >= 6\n    schema.$id = schema.$id || url;\n    draft.remotes[url] = draft.compileSchema(schema);\n}\n", "import { eachSchema } from \"../../eachSchema\";\n// import remotes from \"../../../remotes\";\nimport joinScope from \"../../compile/joinScope\";\nimport getRef from \"../../compile/getRef\";\nimport { get } from \"@sagold/json-pointer\";\nconst COMPILED = \"__compiled\";\nconst COMPILED_REF = \"__ref\";\nconst GET_REF = \"getRef\";\nconst GET_ROOT = \"getRoot\";\nconst GET_CONTEXT = \"getContext\";\nconst suffixes = /(#|\\/)+$/g;\n/**\n * @draft 6, 2019-09\n * - starting with _draft 2019-09_ plain name fragments are no longer defined with $id,\n *  but instead with the new keyword $anchor (which has a different syntax)\n *  https://json-schema.org/draft/2019-09/release-notes#incompatible-changes\n * - in _draft 2019-09_ only $recursiveAnchor and $recursiveRef have been introduced\n * - starting with _draft 6_ id is named $id\n *\n * compiles the input root schema for $ref resolution and returns it again\n * @attention this modifies input schema but maintains object-structure\n *\n * for a compiled json-schema you can call getRef on any contained schema (location of type).\n * this resolves a $ref target to a valid schema (for a valid $ref)\n *\n * @param rootSchema root json-schema ($id, defs, ... ) to compile\n * @param [force] = false force compile json-schema\n * @return compiled json-schema\n */\nexport default function compileSchema(draft, schemaToCompile, rootSchema = schemaToCompile, force = false) {\n    // @ts-expect-error incomplete JsonSchema type\n    if (schemaToCompile === true || schemaToCompile === false || schemaToCompile === undefined) {\n        return schemaToCompile;\n    }\n    if (schemaToCompile[COMPILED] !== undefined) {\n        return schemaToCompile;\n    } // eslint-disable-line\n    // console.log(\"compile schema\", schemaToCompile.$id);\n    const context = { ids: {}, anchors: {}, remotes: draft.remotes };\n    const rootSchemaAsString = JSON.stringify(schemaToCompile);\n    const compiledSchema = JSON.parse(rootSchemaAsString);\n    Object.defineProperties(compiledSchema, {\n        [COMPILED]: { enumerable: false, value: true },\n        [GET_CONTEXT]: { enumerable: false, value: () => context },\n        [GET_REF]: {\n            enumerable: false,\n            value: getRef.bind(null, context, compiledSchema)\n        }\n    });\n    // bail early, when no $refs are defined\n    if (force === false && rootSchemaAsString.includes(\"$ref\") === false) {\n        return compiledSchema;\n    }\n    // compile this schema under rootSchema, making definitions available to $ref-resolution\n    if (compiledSchema !== rootSchema) {\n        Object.defineProperty(compiledSchema, \"$defs\", {\n            enumerable: true,\n            value: Object.assign({}, rootSchema.definitions, rootSchema.$defs, compiledSchema.definitions, compiledSchema.$defs)\n        });\n    }\n    const scopes = {};\n    const getRoot = () => compiledSchema;\n    eachSchema(compiledSchema, (schema, pointer) => {\n        var _a;\n        if (schema.$id) {\n            // if this is a schema being merged on root object, we cannot override\n            // parents locations, but must reuse it\n            if (schema.$id.startsWith(\"http\") && /(allOf|anyOf|oneOf|if)\\/\\d+$/.test(pointer)) {\n                const parentPointer = pointer.replace(/\\/(allOf|anyOf|oneOf|if)\\/\\d+$/, \"\");\n                const parentSchema = get(compiledSchema, parentPointer);\n                schema.$id = (_a = parentSchema.$id) !== null && _a !== void 0 ? _a : schema.$id;\n            }\n            context.ids[schema.$id.replace(suffixes, \"\")] = pointer;\n        }\n        // build up scopes and add them to $ref-resolution map\n        pointer = `#${pointer}`.replace(/##+/, \"#\");\n        const previousPointer = pointer.replace(/\\/[^/]+$/, \"\");\n        const parentPointer = pointer.replace(/\\/[^/]+\\/[^/]+$/, \"\");\n        const previousScope = scopes[previousPointer] || scopes[parentPointer];\n        const scope = joinScope(previousScope, schema.$id);\n        // // @todo specify behaviour - we do not save ids with trailing slashes...\n        scopes[pointer] = scope;\n        if (context.ids[scope] == null) {\n            context.ids[scope] = pointer;\n        }\n        if (schema.$anchor) {\n            context.anchors[`${scope}#${schema.$anchor}`] = pointer;\n        }\n        if (schema.$ref && !schema[COMPILED_REF]) {\n            Object.defineProperty(schema, COMPILED_REF, {\n                enumerable: false,\n                value: joinScope(scope, schema.$ref)\n            });\n            Object.defineProperty(schema, GET_ROOT, { enumerable: false, value: getRoot });\n        }\n    });\n    // console.log(\"ids\", context.ids);\n    // console.log(\"anchors\", context.anchors);\n    return compiledSchema;\n}\n", "import Keywords from \"../../validation/keyword\";\nimport getTypeOf from \"../../getTypeOf\";\nimport { validateIf } from \"../../features/if\";\nconst KeywordValidation = {\n    ...Keywords,\n    // @draft >= 6\n    contains: (node, value) => {\n        var _a, _b;\n        const { draft, schema, pointer } = node;\n        if (schema.contains === false) {\n            return draft.errors.containsArrayError({ pointer, value, schema });\n        }\n        if (schema.contains === true) {\n            if (Array.isArray(value) && value.length === 0) {\n                return draft.errors.containsAnyError({ pointer, value, schema });\n            }\n            return undefined;\n        }\n        if (getTypeOf(schema.contains) !== \"object\") {\n            // ignore invalid schema\n            return undefined;\n        }\n        let count = 0;\n        for (let i = 0; i < value.length; i += 1) {\n            if (draft.validate(node.next(schema.contains, i), value[i]).length === 0) {\n                count++;\n            }\n        }\n        // @draft >= 2019-09\n        const max = (_a = schema.maxContains) !== null && _a !== void 0 ? _a : Infinity;\n        const min = (_b = schema.minContains) !== null && _b !== void 0 ? _b : 1;\n        if (max >= count && min <= count) {\n            return undefined;\n        }\n        if (max < count) {\n            return draft.errors.containsMaxError({ pointer, schema, delta: count - max, value });\n        }\n        if (min > count) {\n            return draft.errors.containsMinError({ pointer, schema, delta: min - count, value });\n        }\n        return draft.errors.containsError({ pointer, schema, value });\n    },\n    exclusiveMaximum: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.exclusiveMaximum)) {\n            return undefined;\n        }\n        if (schema.exclusiveMaximum <= value) {\n            return draft.errors.maximumError({\n                maximum: schema.exclusiveMaximum,\n                length: value,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    exclusiveMinimum: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.exclusiveMinimum)) {\n            return undefined;\n        }\n        if (schema.exclusiveMinimum >= value) {\n            return draft.errors.minimumError({\n                minimum: schema.exclusiveMinimum,\n                length: value,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    // @feature if-then-else\n    if: validateIf,\n    maximum: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.maximum)) {\n            return undefined;\n        }\n        if (schema.maximum && schema.maximum < value) {\n            return draft.errors.maximumError({\n                maximum: schema.maximum,\n                length: value,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    minimum: (node, value) => {\n        const { draft, schema, pointer } = node;\n        if (isNaN(schema.minimum)) {\n            return undefined;\n        }\n        if (schema.minimum > value) {\n            return draft.errors.minimumError({\n                minimum: schema.minimum,\n                length: value,\n                pointer,\n                schema,\n                value\n            });\n        }\n        return undefined;\n    },\n    patternProperties: (node, value) => {\n        const { draft, schema, pointer } = node;\n        const properties = schema.properties || {};\n        const pp = schema.patternProperties;\n        if (getTypeOf(pp) !== \"object\") {\n            return undefined;\n        }\n        const errors = [];\n        const keys = Object.keys(value);\n        const patterns = Object.keys(pp).map((expr) => ({\n            regex: new RegExp(expr),\n            patternSchema: pp[expr]\n        }));\n        keys.forEach((key) => {\n            let patternFound = false;\n            for (let i = 0, l = patterns.length; i < l; i += 1) {\n                if (patterns[i].regex.test(key)) {\n                    patternFound = true;\n                    // for a boolean schema `false`, always invalidate\n                    if (patterns[i].patternSchema === false) {\n                        errors.push(draft.errors.patternPropertiesError({\n                            key,\n                            pointer,\n                            patterns: Object.keys(pp).join(\",\"),\n                            schema,\n                            value\n                        }));\n                        return;\n                    }\n                    const valErrors = draft.validate(node.next(patterns[i].patternSchema, key), value[key]);\n                    if (valErrors && valErrors.length > 0) {\n                        errors.push(...valErrors);\n                    }\n                }\n            }\n            if (properties[key]) {\n                return;\n            }\n            if (patternFound === false && schema.additionalProperties === false) {\n                // this is an arrangement with additionalProperties\n                errors.push(draft.errors.patternPropertiesError({\n                    key,\n                    pointer,\n                    patterns: Object.keys(pp).join(\",\"),\n                    schema,\n                    value\n                }));\n            }\n        });\n        return errors;\n    },\n    // @draft >= 6\n    propertyNames: (node, value) => {\n        const { draft, schema, pointer } = node;\n        // bool schema\n        if (schema.propertyNames === false) {\n            // empty objects are valid\n            if (Object.keys(value).length === 0) {\n                return undefined;\n            }\n            return draft.errors.invalidPropertyNameError({\n                property: Object.keys(value),\n                pointer,\n                value,\n                schema\n            });\n        }\n        if (schema.propertyNames === true) {\n            return undefined;\n        }\n        if (getTypeOf(schema.propertyNames) !== \"object\") {\n            // ignore invalid schema\n            return undefined;\n        }\n        const errors = [];\n        const properties = Object.keys(value);\n        const propertySchema = { ...schema.propertyNames, type: \"string\" };\n        properties.forEach((prop) => {\n            const nextNode = node.next(propertySchema, prop);\n            const validationResult = draft.validate(nextNode, prop);\n            if (validationResult.length > 0) {\n                errors.push(draft.errors.invalidPropertyNameError({\n                    property: prop,\n                    pointer,\n                    validationError: validationResult[0],\n                    value: value[prop],\n                    schema\n                }));\n            }\n        });\n        return errors;\n    }\n};\nexport default KeywordValidation;\n", "import addRemoteSchema from \"../addRemoteSchema\";\nimport compileSchema from \"../draft06/compile\";\nimport createSchemaOf from \"../createSchemaOf\";\nimport ERRORS from \"../validation/errors\";\nimport FORMATS from \"../validation/format\";\nimport getChildSchemaSelection from \"../getChildSchemaSelection\";\nimport getSchema from \"../getSchema\";\nimport getTemplate from \"../getTemplate\";\nimport isValid from \"../isValid\";\nimport KEYWORDS from \"../draft06/validation/keyword\";\nimport merge from \"../utils/merge\";\nimport resolveRef from \"../resolveRef.strict\";\nimport settings from \"../config/settings\";\nimport step from \"../step\";\nimport TYPES from \"../validation/type\";\nimport validate from \"../validate\";\nimport { createNode } from \"../schemaNode\";\nimport { Draft } from \"../draft\";\nimport { each } from \"../each\";\nimport { eachSchema } from \"../eachSchema\";\nimport { resolveAllOf } from \"../features/allOf\";\nimport { resolveAnyOf } from \"../features/anyOf\";\nimport { resolveOneOf } from \"../features/oneOf\";\nconst draft06Config = {\n    typeKeywords: {\n        array: [\n            \"allOf\",\n            \"anyOf\",\n            \"contains\",\n            \"enum\",\n            \"if\",\n            \"items\",\n            \"maxItems\",\n            \"minItems\",\n            \"not\",\n            \"oneOf\",\n            \"uniqueItems\"\n        ],\n        boolean: [\"allOf\", \"anyOf\", \"enum\", \"not\", \"oneOf\"],\n        object: [\n            \"additionalProperties\",\n            \"allOf\",\n            \"anyOf\",\n            \"dependencies\",\n            \"enum\",\n            \"format\",\n            \"if\",\n            \"maxProperties\",\n            \"minProperties\",\n            \"not\",\n            \"oneOf\",\n            \"patternProperties\",\n            \"properties\",\n            \"propertyNames\",\n            \"required\"\n        ],\n        string: [\n            \"allOf\",\n            \"anyOf\",\n            \"enum\",\n            \"format\",\n            \"if\",\n            \"maxLength\",\n            \"minLength\",\n            \"not\",\n            \"oneOf\",\n            \"pattern\"\n        ],\n        number: [\n            \"enum\",\n            \"exclusiveMaximum\",\n            \"exclusiveMinimum\",\n            \"format\",\n            \"maximum\",\n            \"minimum\",\n            \"multipleOf\",\n            \"not\",\n            \"oneOf\",\n            \"allOf\",\n            \"anyOf\",\n            \"if\"\n        ],\n        null: [\"allOf\", \"anyOf\", \"enum\", \"format\", \"not\", \"oneOf\"]\n    },\n    validateKeyword: KEYWORDS,\n    validateType: TYPES,\n    validateFormat: FORMATS,\n    errors: ERRORS,\n    createNode,\n    addRemoteSchema,\n    compileSchema,\n    createSchemaOf,\n    each,\n    eachSchema,\n    getChildSchemaSelection,\n    getSchema,\n    getTemplate,\n    isValid,\n    resolveAllOf,\n    resolveAnyOf,\n    resolveOneOf,\n    resolveRef,\n    step,\n    validate,\n    templateDefaultOptions: settings.templateDefaultOptions\n};\nclass Draft06 extends Draft {\n    constructor(schema, config = {}) {\n        super(merge(draft06Config, config), schema);\n    }\n}\nexport { Draft06, draft06Config };\n", "import addRemoteSchema from \"../addRemoteSchema\";\nimport compileSchema from \"../draft06/compile\";\nimport createSchemaOf from \"../createSchemaOf\";\nimport ERRORS from \"../validation/errors\";\nimport FORMATS from \"../validation/format\";\nimport getChildSchemaSelection from \"../getChildSchemaSelection\";\nimport getSchema from \"../getSchema\";\nimport getTemplate from \"../getTemplate\";\nimport isValid from \"../isValid\";\nimport KEYWORDS from \"../draft06/validation/keyword\";\nimport merge from \"../utils/merge\";\nimport resolveRef from \"../resolveRef.strict\";\nimport settings from \"../config/settings\";\nimport step from \"../step\";\nimport TYPES from \"../validation/type\";\nimport validate from \"../validate\";\nimport { createNode } from \"../schemaNode\";\nimport { Draft } from \"../draft\";\nimport { each } from \"../each\";\nimport { eachSchema } from \"../eachSchema\";\nimport { resolveAllOf } from \"../features/allOf\";\nimport { resolveAnyOf } from \"../features/anyOf\";\nimport { resolveOneOf } from \"../features/oneOf\";\nconst draft07Config = {\n    typeKeywords: {\n        array: [\n            \"allOf\",\n            \"anyOf\",\n            \"contains\",\n            \"enum\",\n            \"if\",\n            \"items\",\n            \"maxItems\",\n            \"minItems\",\n            \"not\",\n            \"oneOf\",\n            \"uniqueItems\"\n        ],\n        boolean: [\"allOf\", \"anyOf\", \"enum\", \"not\", \"oneOf\"],\n        object: [\n            \"additionalProperties\",\n            \"allOf\",\n            \"anyOf\",\n            \"dependencies\",\n            \"enum\",\n            \"format\",\n            \"if\",\n            \"maxProperties\",\n            \"minProperties\",\n            \"not\",\n            \"oneOf\",\n            \"patternProperties\",\n            \"properties\",\n            \"propertyNames\",\n            \"required\"\n        ],\n        string: [\n            \"allOf\",\n            \"anyOf\",\n            \"enum\",\n            \"format\",\n            \"if\",\n            \"maxLength\",\n            \"minLength\",\n            \"not\",\n            \"oneOf\",\n            \"pattern\"\n        ],\n        number: [\n            \"allOf\",\n            \"anyOf\",\n            \"enum\",\n            \"exclusiveMaximum\",\n            \"exclusiveMinimum\",\n            \"format\",\n            \"if\",\n            \"maximum\",\n            \"minimum\",\n            \"multipleOf\",\n            \"not\",\n            \"oneOf\"\n        ],\n        null: [\"allOf\", \"anyOf\", \"enum\", \"format\", \"not\", \"oneOf\"]\n    },\n    validateKeyword: KEYWORDS,\n    validateType: TYPES,\n    validateFormat: FORMATS,\n    errors: ERRORS,\n    createNode,\n    addRemoteSchema,\n    compileSchema,\n    createSchemaOf,\n    each,\n    eachSchema,\n    getChildSchemaSelection,\n    getSchema,\n    getTemplate,\n    isValid,\n    resolveAllOf,\n    resolveAnyOf,\n    resolveOneOf,\n    resolveRef,\n    step,\n    validate,\n    templateDefaultOptions: settings.templateDefaultOptions\n};\nclass Draft07 extends Draft {\n    constructor(schema, config = {}) {\n        super(merge(draft07Config, config), schema);\n    }\n}\nexport { Draft07, draft07Config };\n", "import Keywords from \"../../draft06/validation/keyword\";\nimport { isObject } from \"../../utils/isObject\";\nimport { reduceSchema } from \"../../reduceSchema\";\nimport { validateDependentSchemas, validateDependentRequired } from \"../../features/dependencies\";\n/**\n * Get a list of tests to search for a matching pattern to a property\n */\nconst getPatternTests = (patternProperties) => isObject(patternProperties)\n    ? Object.keys(patternProperties).map((pattern) => new RegExp(pattern))\n    : [];\n/** tests if a property is evaluated by the given schema */\nfunction isPropertyEvaluated(schemaNode, propertyName, value) {\n    var _a, _b;\n    const node = schemaNode.draft.resolveRef(schemaNode);\n    const { schema } = node;\n    if (schema.additionalProperties === true) {\n        return true;\n    }\n    // PROPERTIES\n    if ((_a = schema.properties) === null || _a === void 0 ? void 0 : _a[propertyName]) {\n        const nextSchema = (_b = schema.properties) === null || _b === void 0 ? void 0 : _b[propertyName];\n        if (node.draft.isValid(value, nextSchema)) {\n            return true;\n        }\n    }\n    // PATTERN-PROPERTIES\n    const patterns = getPatternTests(schema.patternProperties);\n    if (patterns.find((pattern) => pattern.test(propertyName))) {\n        return true;\n    }\n    // ADDITIONAL-PROPERTIES\n    if (isObject(schema.additionalProperties)) {\n        const nextSchema = schema.additionalProperties;\n        return node.draft.validate(node.next(nextSchema), value);\n    }\n    return false;\n}\nconst KeywordValidation = {\n    // ...omit(Keywords, \"dependencies\"),\n    ...Keywords,\n    dependencies: undefined,\n    dependentSchemas: validateDependentSchemas,\n    dependentRequired: validateDependentRequired,\n    /**\n     * @draft >= 2019-09\n     * Similar to additionalProperties, but can \"see\" into subschemas and across references\n     * https://json-schema.org/draft/2019-09/json-schema-core#rfc.section.9.3.2.4\n     */\n    unevaluatedProperties: (node, value) => {\n        var _a;\n        const { draft, schema, pointer } = node;\n        // if not in properties, evaluated by additionalProperties and not matches patternProperties\n        // @todo we need to know dynamic parent statements - they should not be counted as evaluated...\n        if (!isObject(value) || schema.unevaluatedProperties == null) {\n            return undefined;\n        }\n        let unevaluated = Object.keys(value);\n        if (unevaluated.length === 0) {\n            return undefined;\n        }\n        // resolve all dynamic schemas\n        const reduction = reduceSchema(node, value);\n        const resolvedSchema = ((_a = reduction.schema) !== null && _a !== void 0 ? _a : reduction);\n        // console.log(\"unevaluatedProperties\", JSON.stringify(resolvedSchema, null, 2), value);\n        if (resolvedSchema.unevaluatedProperties === true) {\n            return undefined;\n        }\n        const testPatterns = getPatternTests(resolvedSchema.patternProperties);\n        unevaluated = unevaluated.filter((key) => {\n            var _a;\n            if ((_a = resolvedSchema.properties) === null || _a === void 0 ? void 0 : _a[key]) {\n                return false;\n            }\n            // special case: an evaluation in if statement counts too\n            // we have an unevaluated prop only if the if-schema does not match\n            if (isObject(schema.if) &&\n                isPropertyEvaluated(node.next({ type: \"object\", ...schema.if }), key, value[key])) {\n                return false;\n            }\n            if (testPatterns.find((pattern) => pattern.test(key))) {\n                return false;\n            }\n            // @todo is this evaluated by additionaProperties per property\n            if (resolvedSchema.additionalProperties) {\n                return false;\n            }\n            return true;\n        });\n        if (unevaluated.length === 0) {\n            return undefined;\n        }\n        const errors = [];\n        if (resolvedSchema.unevaluatedProperties === false) {\n            unevaluated.forEach((key) => {\n                errors.push(draft.errors.unevaluatedPropertyError({\n                    pointer: `${pointer}/${key}`,\n                    value: JSON.stringify(value[key]),\n                    schema\n                }));\n            });\n            return errors;\n        }\n        unevaluated.forEach((key) => {\n            if (isObject(resolvedSchema.unevaluatedProperties)) {\n                // note: only key changes\n                const keyErrors = draft.validate(node.next(resolvedSchema.unevaluatedProperties, key), value[key]);\n                errors.push(...keyErrors);\n            }\n        });\n        return errors;\n    },\n    /**\n     * @draft >= 2019-09\n     * Similar to additionalItems, but can \"see\" into subschemas and across references\n     * https://json-schema.org/draft/2019-09/json-schema-core#rfc.section.9.3.1.3\n     */\n    unevaluatedItems: (node, value) => {\n        var _a;\n        const { draft, schema, pointer } = node;\n        // if not in items, and not matches additionalItems\n        if (!Array.isArray(value) ||\n            value.length === 0 ||\n            schema.unevaluatedItems == null ||\n            schema.unevaluatedItems === true) {\n            return undefined;\n        }\n        // resolve all dynamic schemas\n        const reduction = reduceSchema(draft.resolveRef(node), value);\n        const resolvedSchema = ((_a = reduction.schema) !== null && _a !== void 0 ? _a : reduction);\n        // console.log(\"unevaluatedItems\", JSON.stringify(resolvedSchema, null, 2), value);\n        if (resolvedSchema.unevaluatedItems === true || resolvedSchema.additionalItems === true) {\n            return undefined;\n        }\n        if (isObject(schema.if)) {\n            const nextSchemaNode = { type: \"array\", ...schema.if };\n            if (draft.isValid(value, nextSchemaNode)) {\n                if (Array.isArray(nextSchemaNode.items) &&\n                    nextSchemaNode.items.length === value.length) {\n                    return undefined;\n                }\n            }\n            // need to test remaining items?\n        }\n        if (isObject(resolvedSchema.items)) {\n            const nextSchemaNode = { ...resolvedSchema, unevaluatedItems: undefined };\n            const errors = draft.validate(node.next(nextSchemaNode), value);\n            return errors.map((e) => draft.errors.unevaluatedItemsError({ ...e.data }));\n        }\n        if (Array.isArray(resolvedSchema.items)) {\n            const items = [];\n            for (let i = resolvedSchema.items.length; i < value.length; i += 1) {\n                if (i < resolvedSchema.items.length) {\n                    if (draft.validate(node.next(resolvedSchema.items[i], i), value[i]).length > 0) {\n                        items.push({ index: i, value: value[i] });\n                    }\n                }\n                else {\n                    items.push({ index: i, value: value[i] });\n                }\n            }\n            return items.map((item) => draft.errors.unevaluatedItemsError({\n                pointer: `${pointer}/${item.index}`,\n                value: JSON.stringify(item.value),\n                schema: resolvedSchema.unevaluatedItems\n            }));\n        }\n        if (isObject(resolvedSchema.unevaluatedItems)) {\n            return value.map((item, index) => {\n                if (!draft.isValid(item, resolvedSchema.unevaluatedItems)) {\n                    return draft.errors.unevaluatedItemsError({\n                        pointer: `${pointer}/${index}`,\n                        value: JSON.stringify(item),\n                        schema: resolvedSchema.unevaluatedItems\n                    });\n                }\n            });\n        }\n        const errors = [];\n        value.forEach((item, index) => {\n            errors.push(draft.errors.unevaluatedItemsError({\n                pointer: `${pointer}/${index}`,\n                value: JSON.stringify(item),\n                schema\n            }));\n        });\n        return errors;\n    }\n};\nexport default KeywordValidation;\n", "import addRemoteSchema from \"../addRemoteSchema\";\nimport compileSchema from \"../draft06/compile\";\nimport createSchemaOf from \"../createSchemaOf\";\nimport ERRORS from \"../validation/errors\";\nimport FORMATS from \"../validation/format\";\nimport getChildSchemaSelection from \"../getChildSchemaSelection\";\nimport getSchema from \"../getSchema\";\nimport getTemplate from \"../getTemplate\";\nimport isValid from \"../isValid\";\nimport KEYWORDS from \"./validation/keyword\";\nimport merge from \"../utils/merge\";\nimport resolveRef from \"../resolveRef\";\nimport settings from \"../config/settings\";\nimport step from \"../step\";\nimport TYPES from \"../validation/type\";\nimport validate from \"../validate\";\nimport { createNode } from \"../schemaNode\";\nimport { Draft } from \"../draft\";\nimport { each } from \"../each\";\nimport { eachSchema } from \"../eachSchema\";\nimport { resolveAllOf } from \"../features/allOf\";\nimport { resolveAnyOf } from \"../features/anyOf\";\nimport { resolveOneOf } from \"../features/oneOf\";\nconst draft2019Config = {\n    typeKeywords: {\n        array: [\n            \"allOf\",\n            \"anyOf\",\n            \"contains\",\n            \"enum\",\n            \"if\",\n            \"items\",\n            \"maxItems\",\n            \"minItems\",\n            \"not\",\n            \"oneOf\",\n            \"unevaluatedItems\",\n            \"uniqueItems\"\n        ],\n        boolean: [\"allOf\", \"anyOf\", \"enum\", \"not\", \"oneOf\"],\n        object: [\n            \"additionalProperties\",\n            \"allOf\",\n            \"anyOf\",\n            // \"dependencies\",\n            \"dependentSchemas\",\n            \"dependentRequired\",\n            \"enum\",\n            \"format\",\n            \"if\",\n            \"maxProperties\",\n            \"minProperties\",\n            \"not\",\n            \"oneOf\",\n            \"patternProperties\",\n            \"properties\",\n            \"propertyNames\",\n            \"required\",\n            \"unevaluatedProperties\" // 2019-09\n        ],\n        string: [\n            \"allOf\",\n            \"anyOf\",\n            \"enum\",\n            \"format\",\n            \"if\",\n            \"maxLength\",\n            \"minLength\",\n            \"not\",\n            \"oneOf\",\n            \"pattern\"\n        ],\n        number: [\n            \"allOf\",\n            \"anyOf\",\n            \"enum\",\n            \"exclusiveMaximum\",\n            \"exclusiveMinimum\",\n            \"format\",\n            \"if\",\n            \"maximum\",\n            \"minimum\",\n            \"multipleOf\",\n            \"not\",\n            \"oneOf\"\n        ],\n        null: [\"allOf\", \"anyOf\", \"enum\", \"format\", \"not\", \"oneOf\"]\n    },\n    validateKeyword: KEYWORDS,\n    validateType: TYPES,\n    validateFormat: FORMATS,\n    errors: ERRORS,\n    createNode,\n    addRemoteSchema,\n    compileSchema,\n    createSchemaOf,\n    each,\n    eachSchema,\n    getChildSchemaSelection,\n    getSchema,\n    getTemplate,\n    isValid,\n    resolveAllOf,\n    resolveAnyOf,\n    resolveOneOf,\n    resolveRef,\n    step,\n    validate,\n    templateDefaultOptions: settings.templateDefaultOptions\n};\nclass Draft2019 extends Draft {\n    constructor(schema, config = {}) {\n        super(merge(draft2019Config, config), schema);\n    }\n}\nexport { Draft2019, draft2019Config };\n", "import merge from \"../utils/merge\";\nimport { resolveOneOfFuzzy } from \"../features/oneOf\";\nimport resolveRef from \"../resolveRef\";\nimport { Draft } from \"../draft\";\nimport { draft07Config } from \"../draft07\";\nconst draftJsonEditorConfig = {\n    ...draft07Config,\n    resolveOneOf: resolveOneOfFuzzy,\n    resolveRef\n};\nclass JsonEditor extends Draft {\n    constructor(schema, config = {}) {\n        super(merge(draftJsonEditorConfig, config), schema);\n    }\n}\nexport { JsonEditor, draftJsonEditorConfig };\n", "// All copied from the service schema\nimport { z } from \"zod\";\n// Core workflow step types\nexport const StepParameterSchema = z.object({\n    name: z.string().describe(\"Name of the parameter. Example: email\"),\n    in: z\n        .enum([\"query\", \"path\", \"header\", \"cookie\"])\n        .describe(\"Where the parameter is located. Example: query\"),\n    value: z\n        .string()\n        .describe(\"Value or reference to input/previous step output. Example: $.inputs.userEmail\"),\n});\nexport const StepRequestBodySchema = z.object({\n    contentType: z\n        .enum([\n        \"application/json\",\n        \"application/x-www-form-urlencoded\",\n        \"multipart/form-data\",\n    ])\n        .describe(\"The MIME type of the body of the request. Example: application/json\"),\n    payload: z\n        .union([\n        // JSON Object Example - direct object payload\n        z\n            .record(z.union([\n            z.string(),\n            z.number(),\n            z.boolean(),\n            z.null(),\n            z.array(z.union([z.string(), z.number(), z.boolean(), z.null()])),\n            z.record(z.union([z.string(), z.number(), z.boolean(), z.null()])),\n        ]))\n            .describe(\"Direct JSON object payload\"),\n        // Complete Runtime Expression - string starting with $\n        z\n            .string()\n            .describe(\"Runtime expression reference\"),\n        // Form Data Example - record of primitive values\n        z\n            .record(z.union([z.string(), z.number(), z.boolean()]))\n            .describe(\"Form data payload\"),\n    ])\n        .describe(\"The payload of the request. Can be a direct JSON object, runtime expression, or form data.\"),\n    replacements: z\n        .array(z.object({\n        target: z\n            .string()\n            .describe(\"The target of the replacement - JSON pointer to the value to replace. Example: /email\"),\n        value: z\n            .any()\n            .describe(\"The value to replace the target with. Example: test@example.com\"),\n    }))\n        .describe(\"Replacements to make to the payload. Example: [{ target: '/email', value: 'test@example.com' }]\"),\n});\nexport const StepSuccessCriteriaSchema = z.object({\n    condition: z\n        .string()\n        .describe(\"Success condition expression. Example: $response.statusCode === 200\"),\n});\nexport const OutputSchema = z.object({\n    key: z.string().describe(\"Output key name. Example: userId\"),\n    value: z\n        .string()\n        .describe(\"Path to value in response. Example: $response.body#/data/id\"),\n});\nexport const StepSchema = z.object({\n    stepId: z\n        .string()\n        .describe(\"A unique identifier for this step. Example: create-user\"),\n    description: z\n        .string()\n        .describe(\"What this step does. Example: Create a new user account in the database\"),\n    operation: z.object({\n        method: z\n            .enum([\n            \"get\",\n            \"post\",\n            \"put\",\n            \"delete\",\n            \"patch\",\n            \"head\",\n            \"options\",\n            \"trace\",\n        ])\n            .describe(\"The HTTP method to use for the operation. Example: post\"),\n        path: z.string().describe(\"The path to the operation. Example: /users\"),\n    }),\n    parameters: z\n        .array(StepParameterSchema)\n        .default([])\n        .describe(\"Parameters needed for the operation\"),\n    requestBody: StepRequestBodySchema.optional(),\n    successCriteria: z\n        .array(StepSuccessCriteriaSchema)\n        .default([])\n        .describe(\"Conditions that must be met for the step to be considered successful\"),\n    outputs: z\n        .array(OutputSchema)\n        .default([])\n        .describe(\"Values to extract from the response for use in subsequent steps\"),\n});\n// This is a very naive schema for the input schema\nexport const BaseInputSchema = z.object({\n    type: z.enum([\"string\", \"number\", \"integer\", \"boolean\", \"object\", \"array\"]),\n    id: z.string().optional(),\n    required: z\n        .array(z.string())\n        .optional()\n        .describe(\"Required properties of the input\"),\n});\nexport const InputSchema = BaseInputSchema.extend({\n    properties: z\n        .record(z.string(), z.lazy(() => InputSchema))\n        .optional()\n        .describe(\"Properties of the input\"),\n}).describe(\"JSON Schema definition\");\n// Core workflow types\nexport const WorkflowSchema = z.object({\n    workflowId: z\n        .string()\n        .describe(\"A unique identifier for the workflow. Example: loginUserAndCreateWorkflow\"),\n    prompt: z\n        .string()\n        .describe(\"Original user story/prompt. Example: Create a workflow that registers a new user\"),\n    summary: z\n        .string()\n        .describe(\"A very short summary of what the workflow does (acts as a name). Example: Process new user registration\"),\n    description: z\n        .string()\n        .describe(\"A detailed description of the workflow's purpose and steps. Example: Handles the complete user registration flow including account creation and welcome email\"),\n    steps: z\n        .array(StepSchema)\n        .min(1)\n        .describe(\"The sequence of API operations to perform\"),\n    inputs: InputSchema,\n    outputs: z\n        .array(OutputSchema)\n        .default([])\n        .describe(\"Final output values from the steps of the workflow\"),\n    createdAt: z.date(),\n    updatedAt: z.date(),\n});\n// API request schemas\nexport const GenerateWorkflowRequestSchema = z.object({\n    prompt: z.string(),\n    openApiSchema: z.string(),\n});\n", "/**\n * In Hono-node environments, env vars are not available on the `env` object that's passed to `app.fetch`.\n * This helper will also check process.env and Deno.env.toObject() and fallback to that if the env var is not present on the `env` object.\n *\n * If multiple keys are provided, the first key that exists will be returned.\n */\nexport function getFromEnv(honoEnv, key) {\n    const env = getPlatformSafeEnv(honoEnv);\n    if (typeof env !== \"object\" || env === null) {\n        return null;\n    }\n    const envRecord = env;\n    // Handle single string key\n    if (typeof key === \"string\") {\n        return envRecord?.[key] ?? null;\n    }\n    // Handle array of keys with precedence\n    for (const k of key) {\n        const value = envRecord?.[k];\n        if (value) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * Used to get the env object for accessing and recording env vars.\n * This exists because environment variables are accessed differently across runtimes.\n\n * Return `process.env` if we're in Node.js, `Deno.env.toObject()` if we're in Deno, otherwise `honoEnv`\n *\n * In the case of Deno, we merge the `Deno.env.toObject()` with the `honoEnv` object.\n *\n * @param honoEnv - The env object from the `app.fetch` method.\n * @returns - Environment variables from the appropriate runtime source\n */\nexport function getPlatformSafeEnv(honoEnv) {\n    const hasProcessEnv = runtimeHasProcessEnv();\n    const hasDenoEnv = runtimeHasDenoEnv();\n    const isRunningInHonoNode = isHonoNodeEnv(honoEnv);\n    if (hasProcessEnv && isRunningInHonoNode) {\n        return process.env;\n    }\n    if (hasDenoEnv) {\n        const denoEnv = globalThis?.Deno?.env?.toObject?.();\n        return {\n            ...(denoEnv ?? {}),\n            ...(typeof honoEnv === \"object\" && honoEnv !== null ? honoEnv : {}),\n        };\n    }\n    return honoEnv;\n}\nfunction runtimeHasProcessEnv() {\n    if (typeof process !== \"undefined\" && typeof process.env !== \"undefined\") {\n        return true;\n    }\n    return false;\n}\nfunction runtimeHasDenoEnv() {\n    try {\n        const denoGlobal = globalThis.Deno;\n        return typeof denoGlobal?.env?.toObject === \"function\";\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Helper to determine if the env is coming from a Hono node environment.\n *\n * In Node.js, the `env` passed to `app.fetch` is an object with keys \"incoming\" and \"outgoing\",\n * one of which has circular references. We don't want to serialize this.\n */\nfunction isHonoNodeEnv(env) {\n    if (typeof env !== \"object\" || env === null) {\n        return false;\n    }\n    const envKeys = Object.keys(env).map((key) => key.toLowerCase());\n    return (envKeys.length === 2 &&\n        envKeys.includes(\"incoming\") &&\n        envKeys.includes(\"outgoing\"));\n}\n", "import { AsyncLocalStorage } from \"node:async_hooks\";\n// Create our polyfill implementation using AsyncLocalStorage\nconst asyncLocalStorage = new AsyncLocalStorage();\n/**\n * Polyfill for Hono's contextStorage middleware\n */\nconst polyfillContextStorage = () => {\n    return async function contextStorage(c, next) {\n        await asyncLocalStorage.run(c, next);\n    };\n};\n/**\n * Polyfill for Hono's getContext function\n */\nconst polyfillGetContext = () => {\n    const context = asyncLocalStorage.getStore();\n    if (!context) {\n        throw new Error(\"Context is not available\");\n    }\n    return context;\n};\n// Default to using the polyfill\nlet contextStorage = polyfillContextStorage;\nlet getContext = polyfillGetContext;\n// Try to import from the official Hono package\n// We use dynamic import to avoid errors if the module doesn't exist\nimport(\"hono/context-storage\")\n    .then((honoContextStorage) => {\n    // If we get here, the module exists, so we can use it\n    contextStorage = honoContextStorage.contextStorage;\n    getContext = honoContextStorage.getContext;\n})\n    .catch(() => { });\nexport { contextStorage, getContext };\n", "/**\n * @implements {IHooks}\n */\nclass Hooks {\n  /**\n   * @callback HookCallback\n   * @this {*|Jsep} this\n   * @param {Jsep} env\n   * @returns: void\n   */\n  /**\n   * Adds the given callback to the list of callbacks for the given hook.\n   *\n   * The callback will be invoked when the hook it is registered for is run.\n   *\n   * One callback function can be registered to multiple hooks and the same hook multiple times.\n   *\n   * @param {string|object} name The name of the hook, or an object of callbacks keyed by name\n   * @param {HookCallback|boolean} callback The callback function which is given environment variables.\n   * @param {?boolean} [first=false] Will add the hook to the top of the list (defaults to the bottom)\n   * @public\n   */\n  add(name, callback, first) {\n    if (typeof arguments[0] != 'string') {\n      // Multiple hook callbacks, keyed by name\n      for (let name in arguments[0]) {\n        this.add(name, arguments[0][name], arguments[1]);\n      }\n    } else {\n      (Array.isArray(name) ? name : [name]).forEach(function (name) {\n        this[name] = this[name] || [];\n        if (callback) {\n          this[name][first ? 'unshift' : 'push'](callback);\n        }\n      }, this);\n    }\n  }\n\n  /**\n   * Runs a hook invoking all registered callbacks with the given environment variables.\n   *\n   * Callbacks will be invoked synchronously and in the order in which they were registered.\n   *\n   * @param {string} name The name of the hook.\n   * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n   * @public\n   */\n  run(name, env) {\n    this[name] = this[name] || [];\n    this[name].forEach(function (callback) {\n      callback.call(env && env.context ? env.context : env, env);\n    });\n  }\n}\n\n/**\n * @implements {IPlugins}\n */\nclass Plugins {\n  constructor(jsep) {\n    this.jsep = jsep;\n    this.registered = {};\n  }\n\n  /**\n   * @callback PluginSetup\n   * @this {Jsep} jsep\n   * @returns: void\n   */\n  /**\n   * Adds the given plugin(s) to the registry\n   *\n   * @param {object} plugins\n   * @param {string} plugins.name The name of the plugin\n   * @param {PluginSetup} plugins.init The init function\n   * @public\n   */\n  register() {\n    for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n      plugins[_key] = arguments[_key];\n    }\n    plugins.forEach(plugin => {\n      if (typeof plugin !== 'object' || !plugin.name || !plugin.init) {\n        throw new Error('Invalid JSEP plugin format');\n      }\n      if (this.registered[plugin.name]) {\n        // already registered. Ignore.\n        return;\n      }\n      plugin.init(this.jsep);\n      this.registered[plugin.name] = plugin;\n    });\n  }\n}\n\n//     JavaScript Expression Parser (JSEP) 1.4.0\n\nclass Jsep {\n  /**\n   * @returns {string}\n   */\n  static get version() {\n    // To be filled in by the template\n    return '1.4.0';\n  }\n\n  /**\n   * @returns {string}\n   */\n  static toString() {\n    return 'JavaScript Expression Parser (JSEP) v' + Jsep.version;\n  }\n  // ==================== CONFIG ================================\n  /**\n   * @method addUnaryOp\n   * @param {string} op_name The name of the unary op to add\n   * @returns {Jsep}\n   */\n  static addUnaryOp(op_name) {\n    Jsep.max_unop_len = Math.max(op_name.length, Jsep.max_unop_len);\n    Jsep.unary_ops[op_name] = 1;\n    return Jsep;\n  }\n\n  /**\n   * @method jsep.addBinaryOp\n   * @param {string} op_name The name of the binary op to add\n   * @param {number} precedence The precedence of the binary op (can be a float). Higher number = higher precedence\n   * @param {boolean} [isRightAssociative=false] whether operator is right-associative\n   * @returns {Jsep}\n   */\n  static addBinaryOp(op_name, precedence, isRightAssociative) {\n    Jsep.max_binop_len = Math.max(op_name.length, Jsep.max_binop_len);\n    Jsep.binary_ops[op_name] = precedence;\n    if (isRightAssociative) {\n      Jsep.right_associative.add(op_name);\n    } else {\n      Jsep.right_associative.delete(op_name);\n    }\n    return Jsep;\n  }\n\n  /**\n   * @method addIdentifierChar\n   * @param {string} char The additional character to treat as a valid part of an identifier\n   * @returns {Jsep}\n   */\n  static addIdentifierChar(char) {\n    Jsep.additional_identifier_chars.add(char);\n    return Jsep;\n  }\n\n  /**\n   * @method addLiteral\n   * @param {string} literal_name The name of the literal to add\n   * @param {*} literal_value The value of the literal\n   * @returns {Jsep}\n   */\n  static addLiteral(literal_name, literal_value) {\n    Jsep.literals[literal_name] = literal_value;\n    return Jsep;\n  }\n\n  /**\n   * @method removeUnaryOp\n   * @param {string} op_name The name of the unary op to remove\n   * @returns {Jsep}\n   */\n  static removeUnaryOp(op_name) {\n    delete Jsep.unary_ops[op_name];\n    if (op_name.length === Jsep.max_unop_len) {\n      Jsep.max_unop_len = Jsep.getMaxKeyLen(Jsep.unary_ops);\n    }\n    return Jsep;\n  }\n\n  /**\n   * @method removeAllUnaryOps\n   * @returns {Jsep}\n   */\n  static removeAllUnaryOps() {\n    Jsep.unary_ops = {};\n    Jsep.max_unop_len = 0;\n    return Jsep;\n  }\n\n  /**\n   * @method removeIdentifierChar\n   * @param {string} char The additional character to stop treating as a valid part of an identifier\n   * @returns {Jsep}\n   */\n  static removeIdentifierChar(char) {\n    Jsep.additional_identifier_chars.delete(char);\n    return Jsep;\n  }\n\n  /**\n   * @method removeBinaryOp\n   * @param {string} op_name The name of the binary op to remove\n   * @returns {Jsep}\n   */\n  static removeBinaryOp(op_name) {\n    delete Jsep.binary_ops[op_name];\n    if (op_name.length === Jsep.max_binop_len) {\n      Jsep.max_binop_len = Jsep.getMaxKeyLen(Jsep.binary_ops);\n    }\n    Jsep.right_associative.delete(op_name);\n    return Jsep;\n  }\n\n  /**\n   * @method removeAllBinaryOps\n   * @returns {Jsep}\n   */\n  static removeAllBinaryOps() {\n    Jsep.binary_ops = {};\n    Jsep.max_binop_len = 0;\n    return Jsep;\n  }\n\n  /**\n   * @method removeLiteral\n   * @param {string} literal_name The name of the literal to remove\n   * @returns {Jsep}\n   */\n  static removeLiteral(literal_name) {\n    delete Jsep.literals[literal_name];\n    return Jsep;\n  }\n\n  /**\n   * @method removeAllLiterals\n   * @returns {Jsep}\n   */\n  static removeAllLiterals() {\n    Jsep.literals = {};\n    return Jsep;\n  }\n  // ==================== END CONFIG ============================\n\n  /**\n   * @returns {string}\n   */\n  get char() {\n    return this.expr.charAt(this.index);\n  }\n\n  /**\n   * @returns {number}\n   */\n  get code() {\n    return this.expr.charCodeAt(this.index);\n  }\n  /**\n   * @param {string} expr a string with the passed in express\n   * @returns Jsep\n   */\n  constructor(expr) {\n    // `index` stores the character number we are currently at\n    // All of the gobbles below will modify `index` as we move along\n    this.expr = expr;\n    this.index = 0;\n  }\n\n  /**\n   * static top-level parser\n   * @returns {jsep.Expression}\n   */\n  static parse(expr) {\n    return new Jsep(expr).parse();\n  }\n\n  /**\n   * Get the longest key length of any object\n   * @param {object} obj\n   * @returns {number}\n   */\n  static getMaxKeyLen(obj) {\n    return Math.max(0, ...Object.keys(obj).map(k => k.length));\n  }\n\n  /**\n   * `ch` is a character code in the next three functions\n   * @param {number} ch\n   * @returns {boolean}\n   */\n  static isDecimalDigit(ch) {\n    return ch >= 48 && ch <= 57; // 0...9\n  }\n\n  /**\n   * Returns the precedence of a binary operator or `0` if it isn't a binary operator. Can be float.\n   * @param {string} op_val\n   * @returns {number}\n   */\n  static binaryPrecedence(op_val) {\n    return Jsep.binary_ops[op_val] || 0;\n  }\n\n  /**\n   * Looks for start of identifier\n   * @param {number} ch\n   * @returns {boolean}\n   */\n  static isIdentifierStart(ch) {\n    return ch >= 65 && ch <= 90 ||\n    // A...Z\n    ch >= 97 && ch <= 122 ||\n    // a...z\n    ch >= 128 && !Jsep.binary_ops[String.fromCharCode(ch)] ||\n    // any non-ASCII that is not an operator\n    Jsep.additional_identifier_chars.has(String.fromCharCode(ch)); // additional characters\n  }\n\n  /**\n   * @param {number} ch\n   * @returns {boolean}\n   */\n  static isIdentifierPart(ch) {\n    return Jsep.isIdentifierStart(ch) || Jsep.isDecimalDigit(ch);\n  }\n\n  /**\n   * throw error at index of the expression\n   * @param {string} message\n   * @throws\n   */\n  throwError(message) {\n    const error = new Error(message + ' at character ' + this.index);\n    error.index = this.index;\n    error.description = message;\n    throw error;\n  }\n\n  /**\n   * Run a given hook\n   * @param {string} name\n   * @param {jsep.Expression|false} [node]\n   * @returns {?jsep.Expression}\n   */\n  runHook(name, node) {\n    if (Jsep.hooks[name]) {\n      const env = {\n        context: this,\n        node\n      };\n      Jsep.hooks.run(name, env);\n      return env.node;\n    }\n    return node;\n  }\n\n  /**\n   * Runs a given hook until one returns a node\n   * @param {string} name\n   * @returns {?jsep.Expression}\n   */\n  searchHook(name) {\n    if (Jsep.hooks[name]) {\n      const env = {\n        context: this\n      };\n      Jsep.hooks[name].find(function (callback) {\n        callback.call(env.context, env);\n        return env.node;\n      });\n      return env.node;\n    }\n  }\n\n  /**\n   * Push `index` up to the next non-space character\n   */\n  gobbleSpaces() {\n    let ch = this.code;\n    // Whitespace\n    while (ch === Jsep.SPACE_CODE || ch === Jsep.TAB_CODE || ch === Jsep.LF_CODE || ch === Jsep.CR_CODE) {\n      ch = this.expr.charCodeAt(++this.index);\n    }\n    this.runHook('gobble-spaces');\n  }\n\n  /**\n   * Top-level method to parse all expressions and returns compound or single node\n   * @returns {jsep.Expression}\n   */\n  parse() {\n    this.runHook('before-all');\n    const nodes = this.gobbleExpressions();\n\n    // If there's only one expression just try returning the expression\n    const node = nodes.length === 1 ? nodes[0] : {\n      type: Jsep.COMPOUND,\n      body: nodes\n    };\n    return this.runHook('after-all', node);\n  }\n\n  /**\n   * top-level parser (but can be reused within as well)\n   * @param {number} [untilICode]\n   * @returns {jsep.Expression[]}\n   */\n  gobbleExpressions(untilICode) {\n    let nodes = [],\n      ch_i,\n      node;\n    while (this.index < this.expr.length) {\n      ch_i = this.code;\n\n      // Expressions can be separated by semicolons, commas, or just inferred without any\n      // separators\n      if (ch_i === Jsep.SEMCOL_CODE || ch_i === Jsep.COMMA_CODE) {\n        this.index++; // ignore separators\n      } else {\n        // Try to gobble each expression individually\n        if (node = this.gobbleExpression()) {\n          nodes.push(node);\n          // If we weren't able to find a binary expression and are out of room, then\n          // the expression passed in probably has too much\n        } else if (this.index < this.expr.length) {\n          if (ch_i === untilICode) {\n            break;\n          }\n          this.throwError('Unexpected \"' + this.char + '\"');\n        }\n      }\n    }\n    return nodes;\n  }\n\n  /**\n   * The main parsing function.\n   * @returns {?jsep.Expression}\n   */\n  gobbleExpression() {\n    const node = this.searchHook('gobble-expression') || this.gobbleBinaryExpression();\n    this.gobbleSpaces();\n    return this.runHook('after-expression', node);\n  }\n\n  /**\n   * Search for the operation portion of the string (e.g. `+`, `===`)\n   * Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\n   * and move down from 3 to 2 to 1 character until a matching binary operation is found\n   * then, return that binary operation\n   * @returns {string|boolean}\n   */\n  gobbleBinaryOp() {\n    this.gobbleSpaces();\n    let to_check = this.expr.substr(this.index, Jsep.max_binop_len);\n    let tc_len = to_check.length;\n    while (tc_len > 0) {\n      // Don't accept a binary op when it is an identifier.\n      // Binary ops that start with a identifier-valid character must be followed\n      // by a non identifier-part valid character\n      if (Jsep.binary_ops.hasOwnProperty(to_check) && (!Jsep.isIdentifierStart(this.code) || this.index + to_check.length < this.expr.length && !Jsep.isIdentifierPart(this.expr.charCodeAt(this.index + to_check.length)))) {\n        this.index += tc_len;\n        return to_check;\n      }\n      to_check = to_check.substr(0, --tc_len);\n    }\n    return false;\n  }\n\n  /**\n   * This function is responsible for gobbling an individual expression,\n   * e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`\n   * @returns {?jsep.BinaryExpression}\n   */\n  gobbleBinaryExpression() {\n    let node, biop, prec, stack, biop_info, left, right, i, cur_biop;\n\n    // First, try to get the leftmost thing\n    // Then, check to see if there's a binary operator operating on that leftmost thing\n    // Don't gobbleBinaryOp without a left-hand-side\n    left = this.gobbleToken();\n    if (!left) {\n      return left;\n    }\n    biop = this.gobbleBinaryOp();\n\n    // If there wasn't a binary operator, just return the leftmost node\n    if (!biop) {\n      return left;\n    }\n\n    // Otherwise, we need to start a stack to properly place the binary operations in their\n    // precedence structure\n    biop_info = {\n      value: biop,\n      prec: Jsep.binaryPrecedence(biop),\n      right_a: Jsep.right_associative.has(biop)\n    };\n    right = this.gobbleToken();\n    if (!right) {\n      this.throwError(\"Expected expression after \" + biop);\n    }\n    stack = [left, biop_info, right];\n\n    // Properly deal with precedence using [recursive descent](http://www.engr.mun.ca/~theo/Misc/exp_parsing.htm)\n    while (biop = this.gobbleBinaryOp()) {\n      prec = Jsep.binaryPrecedence(biop);\n      if (prec === 0) {\n        this.index -= biop.length;\n        break;\n      }\n      biop_info = {\n        value: biop,\n        prec,\n        right_a: Jsep.right_associative.has(biop)\n      };\n      cur_biop = biop;\n\n      // Reduce: make a binary expression from the three topmost entries.\n      const comparePrev = prev => biop_info.right_a && prev.right_a ? prec > prev.prec : prec <= prev.prec;\n      while (stack.length > 2 && comparePrev(stack[stack.length - 2])) {\n        right = stack.pop();\n        biop = stack.pop().value;\n        left = stack.pop();\n        node = {\n          type: Jsep.BINARY_EXP,\n          operator: biop,\n          left,\n          right\n        };\n        stack.push(node);\n      }\n      node = this.gobbleToken();\n      if (!node) {\n        this.throwError(\"Expected expression after \" + cur_biop);\n      }\n      stack.push(biop_info, node);\n    }\n    i = stack.length - 1;\n    node = stack[i];\n    while (i > 1) {\n      node = {\n        type: Jsep.BINARY_EXP,\n        operator: stack[i - 1].value,\n        left: stack[i - 2],\n        right: node\n      };\n      i -= 2;\n    }\n    return node;\n  }\n\n  /**\n   * An individual part of a binary expression:\n   * e.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)\n   * @returns {boolean|jsep.Expression}\n   */\n  gobbleToken() {\n    let ch, to_check, tc_len, node;\n    this.gobbleSpaces();\n    node = this.searchHook('gobble-token');\n    if (node) {\n      return this.runHook('after-token', node);\n    }\n    ch = this.code;\n    if (Jsep.isDecimalDigit(ch) || ch === Jsep.PERIOD_CODE) {\n      // Char code 46 is a dot `.` which can start off a numeric literal\n      return this.gobbleNumericLiteral();\n    }\n    if (ch === Jsep.SQUOTE_CODE || ch === Jsep.DQUOTE_CODE) {\n      // Single or double quotes\n      node = this.gobbleStringLiteral();\n    } else if (ch === Jsep.OBRACK_CODE) {\n      node = this.gobbleArray();\n    } else {\n      to_check = this.expr.substr(this.index, Jsep.max_unop_len);\n      tc_len = to_check.length;\n      while (tc_len > 0) {\n        // Don't accept an unary op when it is an identifier.\n        // Unary ops that start with a identifier-valid character must be followed\n        // by a non identifier-part valid character\n        if (Jsep.unary_ops.hasOwnProperty(to_check) && (!Jsep.isIdentifierStart(this.code) || this.index + to_check.length < this.expr.length && !Jsep.isIdentifierPart(this.expr.charCodeAt(this.index + to_check.length)))) {\n          this.index += tc_len;\n          const argument = this.gobbleToken();\n          if (!argument) {\n            this.throwError('missing unaryOp argument');\n          }\n          return this.runHook('after-token', {\n            type: Jsep.UNARY_EXP,\n            operator: to_check,\n            argument,\n            prefix: true\n          });\n        }\n        to_check = to_check.substr(0, --tc_len);\n      }\n      if (Jsep.isIdentifierStart(ch)) {\n        node = this.gobbleIdentifier();\n        if (Jsep.literals.hasOwnProperty(node.name)) {\n          node = {\n            type: Jsep.LITERAL,\n            value: Jsep.literals[node.name],\n            raw: node.name\n          };\n        } else if (node.name === Jsep.this_str) {\n          node = {\n            type: Jsep.THIS_EXP\n          };\n        }\n      } else if (ch === Jsep.OPAREN_CODE) {\n        // open parenthesis\n        node = this.gobbleGroup();\n      }\n    }\n    if (!node) {\n      return this.runHook('after-token', false);\n    }\n    node = this.gobbleTokenProperty(node);\n    return this.runHook('after-token', node);\n  }\n\n  /**\n   * Gobble properties of of identifiers/strings/arrays/groups.\n   * e.g. `foo`, `bar.baz`, `foo['bar'].baz`\n   * It also gobbles function calls:\n   * e.g. `Math.acos(obj.angle)`\n   * @param {jsep.Expression} node\n   * @returns {jsep.Expression}\n   */\n  gobbleTokenProperty(node) {\n    this.gobbleSpaces();\n    let ch = this.code;\n    while (ch === Jsep.PERIOD_CODE || ch === Jsep.OBRACK_CODE || ch === Jsep.OPAREN_CODE || ch === Jsep.QUMARK_CODE) {\n      let optional;\n      if (ch === Jsep.QUMARK_CODE) {\n        if (this.expr.charCodeAt(this.index + 1) !== Jsep.PERIOD_CODE) {\n          break;\n        }\n        optional = true;\n        this.index += 2;\n        this.gobbleSpaces();\n        ch = this.code;\n      }\n      this.index++;\n      if (ch === Jsep.OBRACK_CODE) {\n        node = {\n          type: Jsep.MEMBER_EXP,\n          computed: true,\n          object: node,\n          property: this.gobbleExpression()\n        };\n        if (!node.property) {\n          this.throwError('Unexpected \"' + this.char + '\"');\n        }\n        this.gobbleSpaces();\n        ch = this.code;\n        if (ch !== Jsep.CBRACK_CODE) {\n          this.throwError('Unclosed [');\n        }\n        this.index++;\n      } else if (ch === Jsep.OPAREN_CODE) {\n        // A function call is being made; gobble all the arguments\n        node = {\n          type: Jsep.CALL_EXP,\n          'arguments': this.gobbleArguments(Jsep.CPAREN_CODE),\n          callee: node\n        };\n      } else if (ch === Jsep.PERIOD_CODE || optional) {\n        if (optional) {\n          this.index--;\n        }\n        this.gobbleSpaces();\n        node = {\n          type: Jsep.MEMBER_EXP,\n          computed: false,\n          object: node,\n          property: this.gobbleIdentifier()\n        };\n      }\n      if (optional) {\n        node.optional = true;\n      } // else leave undefined for compatibility with esprima\n\n      this.gobbleSpaces();\n      ch = this.code;\n    }\n    return node;\n  }\n\n  /**\n   * Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\n   * keep track of everything in the numeric literal and then calling `parseFloat` on that string\n   * @returns {jsep.Literal}\n   */\n  gobbleNumericLiteral() {\n    let number = '',\n      ch,\n      chCode;\n    while (Jsep.isDecimalDigit(this.code)) {\n      number += this.expr.charAt(this.index++);\n    }\n    if (this.code === Jsep.PERIOD_CODE) {\n      // can start with a decimal marker\n      number += this.expr.charAt(this.index++);\n      while (Jsep.isDecimalDigit(this.code)) {\n        number += this.expr.charAt(this.index++);\n      }\n    }\n    ch = this.char;\n    if (ch === 'e' || ch === 'E') {\n      // exponent marker\n      number += this.expr.charAt(this.index++);\n      ch = this.char;\n      if (ch === '+' || ch === '-') {\n        // exponent sign\n        number += this.expr.charAt(this.index++);\n      }\n      while (Jsep.isDecimalDigit(this.code)) {\n        // exponent itself\n        number += this.expr.charAt(this.index++);\n      }\n      if (!Jsep.isDecimalDigit(this.expr.charCodeAt(this.index - 1))) {\n        this.throwError('Expected exponent (' + number + this.char + ')');\n      }\n    }\n    chCode = this.code;\n\n    // Check to make sure this isn't a variable name that start with a number (123abc)\n    if (Jsep.isIdentifierStart(chCode)) {\n      this.throwError('Variable names cannot start with a number (' + number + this.char + ')');\n    } else if (chCode === Jsep.PERIOD_CODE || number.length === 1 && number.charCodeAt(0) === Jsep.PERIOD_CODE) {\n      this.throwError('Unexpected period');\n    }\n    return {\n      type: Jsep.LITERAL,\n      value: parseFloat(number),\n      raw: number\n    };\n  }\n\n  /**\n   * Parses a string literal, staring with single or double quotes with basic support for escape codes\n   * e.g. `\"hello world\"`, `'this is\\nJSEP'`\n   * @returns {jsep.Literal}\n   */\n  gobbleStringLiteral() {\n    let str = '';\n    const startIndex = this.index;\n    const quote = this.expr.charAt(this.index++);\n    let closed = false;\n    while (this.index < this.expr.length) {\n      let ch = this.expr.charAt(this.index++);\n      if (ch === quote) {\n        closed = true;\n        break;\n      } else if (ch === '\\\\') {\n        // Check for all of the common escape codes\n        ch = this.expr.charAt(this.index++);\n        switch (ch) {\n          case 'n':\n            str += '\\n';\n            break;\n          case 'r':\n            str += '\\r';\n            break;\n          case 't':\n            str += '\\t';\n            break;\n          case 'b':\n            str += '\\b';\n            break;\n          case 'f':\n            str += '\\f';\n            break;\n          case 'v':\n            str += '\\x0B';\n            break;\n          default:\n            str += ch;\n        }\n      } else {\n        str += ch;\n      }\n    }\n    if (!closed) {\n      this.throwError('Unclosed quote after \"' + str + '\"');\n    }\n    return {\n      type: Jsep.LITERAL,\n      value: str,\n      raw: this.expr.substring(startIndex, this.index)\n    };\n  }\n\n  /**\n   * Gobbles only identifiers\n   * e.g.: `foo`, `_value`, `$x1`\n   * Also, this function checks if that identifier is a literal:\n   * (e.g. `true`, `false`, `null`) or `this`\n   * @returns {jsep.Identifier}\n   */\n  gobbleIdentifier() {\n    let ch = this.code,\n      start = this.index;\n    if (Jsep.isIdentifierStart(ch)) {\n      this.index++;\n    } else {\n      this.throwError('Unexpected ' + this.char);\n    }\n    while (this.index < this.expr.length) {\n      ch = this.code;\n      if (Jsep.isIdentifierPart(ch)) {\n        this.index++;\n      } else {\n        break;\n      }\n    }\n    return {\n      type: Jsep.IDENTIFIER,\n      name: this.expr.slice(start, this.index)\n    };\n  }\n\n  /**\n   * Gobbles a list of arguments within the context of a function call\n   * or array literal. This function also assumes that the opening character\n   * `(` or `[` has already been gobbled, and gobbles expressions and commas\n   * until the terminator character `)` or `]` is encountered.\n   * e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`\n   * @param {number} termination\n   * @returns {jsep.Expression[]}\n   */\n  gobbleArguments(termination) {\n    const args = [];\n    let closed = false;\n    let separator_count = 0;\n    while (this.index < this.expr.length) {\n      this.gobbleSpaces();\n      let ch_i = this.code;\n      if (ch_i === termination) {\n        // done parsing\n        closed = true;\n        this.index++;\n        if (termination === Jsep.CPAREN_CODE && separator_count && separator_count >= args.length) {\n          this.throwError('Unexpected token ' + String.fromCharCode(termination));\n        }\n        break;\n      } else if (ch_i === Jsep.COMMA_CODE) {\n        // between expressions\n        this.index++;\n        separator_count++;\n        if (separator_count !== args.length) {\n          // missing argument\n          if (termination === Jsep.CPAREN_CODE) {\n            this.throwError('Unexpected token ,');\n          } else if (termination === Jsep.CBRACK_CODE) {\n            for (let arg = args.length; arg < separator_count; arg++) {\n              args.push(null);\n            }\n          }\n        }\n      } else if (args.length !== separator_count && separator_count !== 0) {\n        // NOTE: `&& separator_count !== 0` allows for either all commas, or all spaces as arguments\n        this.throwError('Expected comma');\n      } else {\n        const node = this.gobbleExpression();\n        if (!node || node.type === Jsep.COMPOUND) {\n          this.throwError('Expected comma');\n        }\n        args.push(node);\n      }\n    }\n    if (!closed) {\n      this.throwError('Expected ' + String.fromCharCode(termination));\n    }\n    return args;\n  }\n\n  /**\n   * Responsible for parsing a group of things within parentheses `()`\n   * that have no identifier in front (so not a function call)\n   * This function assumes that it needs to gobble the opening parenthesis\n   * and then tries to gobble everything within that parenthesis, assuming\n   * that the next thing it should see is the close parenthesis. If not,\n   * then the expression probably doesn't have a `)`\n   * @returns {boolean|jsep.Expression}\n   */\n  gobbleGroup() {\n    this.index++;\n    let nodes = this.gobbleExpressions(Jsep.CPAREN_CODE);\n    if (this.code === Jsep.CPAREN_CODE) {\n      this.index++;\n      if (nodes.length === 1) {\n        return nodes[0];\n      } else if (!nodes.length) {\n        return false;\n      } else {\n        return {\n          type: Jsep.SEQUENCE_EXP,\n          expressions: nodes\n        };\n      }\n    } else {\n      this.throwError('Unclosed (');\n    }\n  }\n\n  /**\n   * Responsible for parsing Array literals `[1, 2, 3]`\n   * This function assumes that it needs to gobble the opening bracket\n   * and then tries to gobble the expressions as arguments.\n   * @returns {jsep.ArrayExpression}\n   */\n  gobbleArray() {\n    this.index++;\n    return {\n      type: Jsep.ARRAY_EXP,\n      elements: this.gobbleArguments(Jsep.CBRACK_CODE)\n    };\n  }\n}\n\n// Static fields:\nconst hooks = new Hooks();\nObject.assign(Jsep, {\n  hooks,\n  plugins: new Plugins(Jsep),\n  // Node Types\n  // ----------\n  // This is the full set of types that any JSEP node can be.\n  // Store them here to save space when minified\n  COMPOUND: 'Compound',\n  SEQUENCE_EXP: 'SequenceExpression',\n  IDENTIFIER: 'Identifier',\n  MEMBER_EXP: 'MemberExpression',\n  LITERAL: 'Literal',\n  THIS_EXP: 'ThisExpression',\n  CALL_EXP: 'CallExpression',\n  UNARY_EXP: 'UnaryExpression',\n  BINARY_EXP: 'BinaryExpression',\n  ARRAY_EXP: 'ArrayExpression',\n  TAB_CODE: 9,\n  LF_CODE: 10,\n  CR_CODE: 13,\n  SPACE_CODE: 32,\n  PERIOD_CODE: 46,\n  // '.'\n  COMMA_CODE: 44,\n  // ','\n  SQUOTE_CODE: 39,\n  // single quote\n  DQUOTE_CODE: 34,\n  // double quotes\n  OPAREN_CODE: 40,\n  // (\n  CPAREN_CODE: 41,\n  // )\n  OBRACK_CODE: 91,\n  // [\n  CBRACK_CODE: 93,\n  // ]\n  QUMARK_CODE: 63,\n  // ?\n  SEMCOL_CODE: 59,\n  // ;\n  COLON_CODE: 58,\n  // :\n\n  // Operations\n  // ----------\n  // Use a quickly-accessible map to store all of the unary operators\n  // Values are set to `1` (it really doesn't matter)\n  unary_ops: {\n    '-': 1,\n    '!': 1,\n    '~': 1,\n    '+': 1\n  },\n  // Also use a map for the binary operations but set their values to their\n  // binary precedence for quick reference (higher number = higher precedence)\n  // see [Order of operations](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence)\n  binary_ops: {\n    '||': 1,\n    '??': 1,\n    '&&': 2,\n    '|': 3,\n    '^': 4,\n    '&': 5,\n    '==': 6,\n    '!=': 6,\n    '===': 6,\n    '!==': 6,\n    '<': 7,\n    '>': 7,\n    '<=': 7,\n    '>=': 7,\n    '<<': 8,\n    '>>': 8,\n    '>>>': 8,\n    '+': 9,\n    '-': 9,\n    '*': 10,\n    '/': 10,\n    '%': 10,\n    '**': 11\n  },\n  // sets specific binary_ops as right-associative\n  right_associative: new Set(['**']),\n  // Additional valid identifier chars, apart from a-z, A-Z and 0-9 (except on the starting char)\n  additional_identifier_chars: new Set(['$', '_']),\n  // Literals\n  // ----------\n  // Store the values to return for the various literals we may encounter\n  literals: {\n    'true': true,\n    'false': false,\n    'null': null\n  },\n  // Except for `this`, which is special. This could be changed to something like `'self'` as well\n  this_str: 'this'\n});\nJsep.max_unop_len = Jsep.getMaxKeyLen(Jsep.unary_ops);\nJsep.max_binop_len = Jsep.getMaxKeyLen(Jsep.binary_ops);\n\n// Backward Compatibility:\nconst jsep = expr => new Jsep(expr).parse();\nconst stdClassProps = Object.getOwnPropertyNames(class Test {});\nObject.getOwnPropertyNames(Jsep).filter(prop => !stdClassProps.includes(prop) && jsep[prop] === undefined).forEach(m => {\n  jsep[m] = Jsep[m];\n});\njsep.Jsep = Jsep; // allows for const { Jsep } = require('jsep');\n\nconst CONDITIONAL_EXP = 'ConditionalExpression';\nvar ternary = {\n  name: 'ternary',\n  init(jsep) {\n    // Ternary expression: test ? consequent : alternate\n    jsep.hooks.add('after-expression', function gobbleTernary(env) {\n      if (env.node && this.code === jsep.QUMARK_CODE) {\n        this.index++;\n        const test = env.node;\n        const consequent = this.gobbleExpression();\n        if (!consequent) {\n          this.throwError('Expected expression');\n        }\n        this.gobbleSpaces();\n        if (this.code === jsep.COLON_CODE) {\n          this.index++;\n          const alternate = this.gobbleExpression();\n          if (!alternate) {\n            this.throwError('Expected expression');\n          }\n          env.node = {\n            type: CONDITIONAL_EXP,\n            test,\n            consequent,\n            alternate\n          };\n\n          // check for operators of higher priority than ternary (i.e. assignment)\n          // jsep sets || at 1, and assignment at 0.9, and conditional should be between them\n          if (test.operator && jsep.binary_ops[test.operator] <= 0.9) {\n            let newTest = test;\n            while (newTest.right.operator && jsep.binary_ops[newTest.right.operator] <= 0.9) {\n              newTest = newTest.right;\n            }\n            env.node.test = newTest.right;\n            newTest.right = env.node;\n            env.node = test;\n          }\n        } else {\n          this.throwError('Expected :');\n        }\n      }\n    });\n  }\n};\n\n// Add default plugins:\n\njsep.plugins.register(ternary);\n\nconst FSLASH_CODE = 47; // '/'\nconst BSLASH_CODE = 92; // '\\\\'\n\nvar index = {\n  name: 'regex',\n  init(jsep) {\n    // Regex literal: /abc123/ig\n    jsep.hooks.add('gobble-token', function gobbleRegexLiteral(env) {\n      if (this.code === FSLASH_CODE) {\n        const patternIndex = ++this.index;\n        let inCharSet = false;\n        while (this.index < this.expr.length) {\n          if (this.code === FSLASH_CODE && !inCharSet) {\n            const pattern = this.expr.slice(patternIndex, this.index);\n            let flags = '';\n            while (++this.index < this.expr.length) {\n              const code = this.code;\n              if (code >= 97 && code <= 122 // a...z\n              || code >= 65 && code <= 90 // A...Z\n              || code >= 48 && code <= 57) {\n                // 0-9\n                flags += this.char;\n              } else {\n                break;\n              }\n            }\n            let value;\n            try {\n              value = new RegExp(pattern, flags);\n            } catch (e) {\n              this.throwError(e.message);\n            }\n            env.node = {\n              type: jsep.LITERAL,\n              value,\n              raw: this.expr.slice(patternIndex - 1, this.index)\n            };\n\n            // allow . [] and () after regex: /regex/.test(a)\n            env.node = this.gobbleTokenProperty(env.node);\n            return env.node;\n          }\n          if (this.code === jsep.OBRACK_CODE) {\n            inCharSet = true;\n          } else if (inCharSet && this.code === jsep.CBRACK_CODE) {\n            inCharSet = false;\n          }\n          this.index += this.code === BSLASH_CODE ? 2 : 1;\n        }\n        this.throwError('Unclosed Regex');\n      }\n    });\n  }\n};\n\nconst PLUS_CODE = 43; // +\nconst MINUS_CODE = 45; // -\n\nconst plugin = {\n  name: 'assignment',\n  assignmentOperators: new Set(['=', '*=', '**=', '/=', '%=', '+=', '-=', '<<=', '>>=', '>>>=', '&=', '^=', '|=', '||=', '&&=', '??=']),\n  updateOperators: [PLUS_CODE, MINUS_CODE],\n  assignmentPrecedence: 0.9,\n  init(jsep) {\n    const updateNodeTypes = [jsep.IDENTIFIER, jsep.MEMBER_EXP];\n    plugin.assignmentOperators.forEach(op => jsep.addBinaryOp(op, plugin.assignmentPrecedence, true));\n    jsep.hooks.add('gobble-token', function gobbleUpdatePrefix(env) {\n      const code = this.code;\n      if (plugin.updateOperators.some(c => c === code && c === this.expr.charCodeAt(this.index + 1))) {\n        this.index += 2;\n        env.node = {\n          type: 'UpdateExpression',\n          operator: code === PLUS_CODE ? '++' : '--',\n          argument: this.gobbleTokenProperty(this.gobbleIdentifier()),\n          prefix: true\n        };\n        if (!env.node.argument || !updateNodeTypes.includes(env.node.argument.type)) {\n          this.throwError(`Unexpected ${env.node.operator}`);\n        }\n      }\n    });\n    jsep.hooks.add('after-token', function gobbleUpdatePostfix(env) {\n      if (env.node) {\n        const code = this.code;\n        if (plugin.updateOperators.some(c => c === code && c === this.expr.charCodeAt(this.index + 1))) {\n          if (!updateNodeTypes.includes(env.node.type)) {\n            this.throwError(`Unexpected ${env.node.operator}`);\n          }\n          this.index += 2;\n          env.node = {\n            type: 'UpdateExpression',\n            operator: code === PLUS_CODE ? '++' : '--',\n            argument: env.node,\n            prefix: false\n          };\n        }\n      }\n    });\n    jsep.hooks.add('after-expression', function gobbleAssignment(env) {\n      if (env.node) {\n        // Note: Binaries can be chained in a single expression to respect\n        // operator precedence (i.e. a = b = 1 + 2 + 3)\n        // Update all binary assignment nodes in the tree\n        updateBinariesToAssignments(env.node);\n      }\n    });\n    function updateBinariesToAssignments(node) {\n      if (plugin.assignmentOperators.has(node.operator)) {\n        node.type = 'AssignmentExpression';\n        updateBinariesToAssignments(node.left);\n        updateBinariesToAssignments(node.right);\n      } else if (!node.operator) {\n        Object.values(node).forEach(val => {\n          if (val && typeof val === 'object') {\n            updateBinariesToAssignments(val);\n          }\n        });\n      }\n    }\n  }\n};\n\n/* eslint-disable no-bitwise -- Convenient */\n\n// register plugins\njsep.plugins.register(index, plugin);\njsep.addUnaryOp('typeof');\njsep.addLiteral('null', null);\njsep.addLiteral('undefined', undefined);\nconst BLOCKED_PROTO_PROPERTIES = new Set(['constructor', '__proto__', '__defineGetter__', '__defineSetter__']);\nconst SafeEval = {\n  /**\n   * @param {jsep.Expression} ast\n   * @param {Record<string, any>} subs\n   */\n  evalAst(ast, subs) {\n    switch (ast.type) {\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        return SafeEval.evalBinaryExpression(ast, subs);\n      case 'Compound':\n        return SafeEval.evalCompound(ast, subs);\n      case 'ConditionalExpression':\n        return SafeEval.evalConditionalExpression(ast, subs);\n      case 'Identifier':\n        return SafeEval.evalIdentifier(ast, subs);\n      case 'Literal':\n        return SafeEval.evalLiteral(ast, subs);\n      case 'MemberExpression':\n        return SafeEval.evalMemberExpression(ast, subs);\n      case 'UnaryExpression':\n        return SafeEval.evalUnaryExpression(ast, subs);\n      case 'ArrayExpression':\n        return SafeEval.evalArrayExpression(ast, subs);\n      case 'CallExpression':\n        return SafeEval.evalCallExpression(ast, subs);\n      case 'AssignmentExpression':\n        return SafeEval.evalAssignmentExpression(ast, subs);\n      default:\n        throw SyntaxError('Unexpected expression', ast);\n    }\n  },\n  evalBinaryExpression(ast, subs) {\n    const result = {\n      '||': (a, b) => a || b(),\n      '&&': (a, b) => a && b(),\n      '|': (a, b) => a | b(),\n      '^': (a, b) => a ^ b(),\n      '&': (a, b) => a & b(),\n      // eslint-disable-next-line eqeqeq -- API\n      '==': (a, b) => a == b(),\n      // eslint-disable-next-line eqeqeq -- API\n      '!=': (a, b) => a != b(),\n      '===': (a, b) => a === b(),\n      '!==': (a, b) => a !== b(),\n      '<': (a, b) => a < b(),\n      '>': (a, b) => a > b(),\n      '<=': (a, b) => a <= b(),\n      '>=': (a, b) => a >= b(),\n      '<<': (a, b) => a << b(),\n      '>>': (a, b) => a >> b(),\n      '>>>': (a, b) => a >>> b(),\n      '+': (a, b) => a + b(),\n      '-': (a, b) => a - b(),\n      '*': (a, b) => a * b(),\n      '/': (a, b) => a / b(),\n      '%': (a, b) => a % b()\n    }[ast.operator](SafeEval.evalAst(ast.left, subs), () => SafeEval.evalAst(ast.right, subs));\n    return result;\n  },\n  evalCompound(ast, subs) {\n    let last;\n    for (let i = 0; i < ast.body.length; i++) {\n      if (ast.body[i].type === 'Identifier' && ['var', 'let', 'const'].includes(ast.body[i].name) && ast.body[i + 1] && ast.body[i + 1].type === 'AssignmentExpression') {\n        // var x=2; is detected as\n        // [{Identifier var}, {AssignmentExpression x=2}]\n        // eslint-disable-next-line @stylistic/max-len -- Long\n        // eslint-disable-next-line sonarjs/updated-loop-counter -- Convenient\n        i += 1;\n      }\n      const expr = ast.body[i];\n      last = SafeEval.evalAst(expr, subs);\n    }\n    return last;\n  },\n  evalConditionalExpression(ast, subs) {\n    if (SafeEval.evalAst(ast.test, subs)) {\n      return SafeEval.evalAst(ast.consequent, subs);\n    }\n    return SafeEval.evalAst(ast.alternate, subs);\n  },\n  evalIdentifier(ast, subs) {\n    if (Object.hasOwn(subs, ast.name)) {\n      return subs[ast.name];\n    }\n    throw ReferenceError(`${ast.name} is not defined`);\n  },\n  evalLiteral(ast) {\n    return ast.value;\n  },\n  evalMemberExpression(ast, subs) {\n    const prop = String(\n    // NOTE: `String(value)` throws error when\n    // value has overwritten the toString method to return non-string\n    // i.e. `value = {toString: () => []}`\n    ast.computed ? SafeEval.evalAst(ast.property) // `object[property]`\n    : ast.property.name // `object.property` property is Identifier\n    );\n    const obj = SafeEval.evalAst(ast.object, subs);\n    if (obj === undefined || obj === null) {\n      throw TypeError(`Cannot read properties of ${obj} (reading '${prop}')`);\n    }\n    if (!Object.hasOwn(obj, prop) && BLOCKED_PROTO_PROPERTIES.has(prop)) {\n      throw TypeError(`Cannot read properties of ${obj} (reading '${prop}')`);\n    }\n    const result = obj[prop];\n    if (typeof result === 'function') {\n      return result.bind(obj); // arrow functions aren't affected by bind.\n    }\n    return result;\n  },\n  evalUnaryExpression(ast, subs) {\n    const result = {\n      '-': a => -SafeEval.evalAst(a, subs),\n      '!': a => !SafeEval.evalAst(a, subs),\n      '~': a => ~SafeEval.evalAst(a, subs),\n      // eslint-disable-next-line no-implicit-coercion -- API\n      '+': a => +SafeEval.evalAst(a, subs),\n      typeof: a => typeof SafeEval.evalAst(a, subs)\n    }[ast.operator](ast.argument);\n    return result;\n  },\n  evalArrayExpression(ast, subs) {\n    return ast.elements.map(el => SafeEval.evalAst(el, subs));\n  },\n  evalCallExpression(ast, subs) {\n    const args = ast.arguments.map(arg => SafeEval.evalAst(arg, subs));\n    const func = SafeEval.evalAst(ast.callee, subs);\n    // if (func === Function) {\n    //     throw new Error('Function constructor is disabled');\n    // }\n    return func(...args);\n  },\n  evalAssignmentExpression(ast, subs) {\n    if (ast.left.type !== 'Identifier') {\n      throw SyntaxError('Invalid left-hand side in assignment');\n    }\n    const id = ast.left.name;\n    const value = SafeEval.evalAst(ast.right, subs);\n    subs[id] = value;\n    return subs[id];\n  }\n};\n\n/**\n * A replacement for NodeJS' VM.Script which is also {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP | Content Security Policy} friendly.\n */\nclass SafeScript {\n  /**\n   * @param {string} expr Expression to evaluate\n   */\n  constructor(expr) {\n    this.code = expr;\n    this.ast = jsep(this.code);\n  }\n\n  /**\n   * @param {object} context Object whose items will be added\n   *   to evaluation\n   * @returns {EvaluatedResult} Result of evaluated code\n   */\n  runInNewContext(context) {\n    // `Object.create(null)` creates a prototypeless object\n    const keyMap = Object.assign(Object.create(null), context);\n    return SafeEval.evalAst(this.ast, keyMap);\n  }\n}\n\n/* eslint-disable camelcase -- Convenient for escaping */\n\n\n/**\n * @typedef {null|boolean|number|string|object|GenericArray} JSONObject\n */\n\n/**\n * @typedef {any} AnyItem\n */\n\n/**\n * @typedef {any} AnyResult\n */\n\n/**\n * Copies array and then pushes item into it.\n * @param {GenericArray} arr Array to copy and into which to push\n * @param {AnyItem} item Array item to add (to end)\n * @returns {GenericArray} Copy of the original array\n */\nfunction push(arr, item) {\n  arr = arr.slice();\n  arr.push(item);\n  return arr;\n}\n/**\n * Copies array and then unshifts item into it.\n * @param {AnyItem} item Array item to add (to beginning)\n * @param {GenericArray} arr Array to copy and into which to unshift\n * @returns {GenericArray} Copy of the original array\n */\nfunction unshift(item, arr) {\n  arr = arr.slice();\n  arr.unshift(item);\n  return arr;\n}\n\n/**\n * Caught when JSONPath is used without `new` but rethrown if with `new`\n * @extends Error\n */\nclass NewError extends Error {\n  /**\n   * @param {AnyResult} value The evaluated scalar value\n   */\n  constructor(value) {\n    super('JSONPath should not be called with \"new\" (it prevents return ' + 'of (unwrapped) scalar values)');\n    this.avoidNew = true;\n    this.value = value;\n    this.name = 'NewError';\n  }\n}\n\n/**\n* @typedef {object} ReturnObject\n* @property {string} path\n* @property {JSONObject} value\n* @property {object|GenericArray} parent\n* @property {string} parentProperty\n*/\n\n/**\n* @callback JSONPathCallback\n* @param {string|object} preferredOutput\n* @param {\"value\"|\"property\"} type\n* @param {ReturnObject} fullRetObj\n* @returns {void}\n*/\n\n/**\n* @callback OtherTypeCallback\n* @param {JSONObject} val\n* @param {string} path\n* @param {object|GenericArray} parent\n* @param {string} parentPropName\n* @returns {boolean}\n*/\n\n/**\n * @typedef {any} ContextItem\n */\n\n/**\n * @typedef {any} EvaluatedResult\n */\n\n/**\n* @callback EvalCallback\n* @param {string} code\n* @param {ContextItem} context\n* @returns {EvaluatedResult}\n*/\n\n/**\n * @typedef {typeof SafeScript} EvalClass\n */\n\n/**\n * @typedef {object} JSONPathOptions\n * @property {JSON} json\n * @property {string|string[]} path\n * @property {\"value\"|\"path\"|\"pointer\"|\"parent\"|\"parentProperty\"|\n *   \"all\"} [resultType=\"value\"]\n * @property {boolean} [flatten=false]\n * @property {boolean} [wrap=true]\n * @property {object} [sandbox={}]\n * @property {EvalCallback|EvalClass|'safe'|'native'|\n *   boolean} [eval = 'safe']\n * @property {object|GenericArray|null} [parent=null]\n * @property {string|null} [parentProperty=null]\n * @property {JSONPathCallback} [callback]\n * @property {OtherTypeCallback} [otherTypeCallback] Defaults to\n *   function which throws on encountering `@other`\n * @property {boolean} [autostart=true]\n */\n\n/**\n * @param {string|JSONPathOptions} opts If a string, will be treated as `expr`\n * @param {string} [expr] JSON path to evaluate\n * @param {JSON} [obj] JSON object to evaluate against\n * @param {JSONPathCallback} [callback] Passed 3 arguments: 1) desired payload\n *     per `resultType`, 2) `\"value\"|\"property\"`, 3) Full returned object with\n *     all payloads\n * @param {OtherTypeCallback} [otherTypeCallback] If `@other()` is at the end\n *   of one's query, this will be invoked with the value of the item, its\n *   path, its parent, and its parent's property name, and it should return\n *   a boolean indicating whether the supplied value belongs to the \"other\"\n *   type or not (or it may handle transformations and return `false`).\n * @returns {JSONPath}\n * @class\n */\nfunction JSONPath(opts, expr, obj, callback, otherTypeCallback) {\n  // eslint-disable-next-line no-restricted-syntax -- Allow for pseudo-class\n  if (!(this instanceof JSONPath)) {\n    try {\n      return new JSONPath(opts, expr, obj, callback, otherTypeCallback);\n    } catch (e) {\n      if (!e.avoidNew) {\n        throw e;\n      }\n      return e.value;\n    }\n  }\n  if (typeof opts === 'string') {\n    otherTypeCallback = callback;\n    callback = obj;\n    obj = expr;\n    expr = opts;\n    opts = null;\n  }\n  const optObj = opts && typeof opts === 'object';\n  opts = opts || {};\n  this.json = opts.json || obj;\n  this.path = opts.path || expr;\n  this.resultType = opts.resultType || 'value';\n  this.flatten = opts.flatten || false;\n  this.wrap = Object.hasOwn(opts, 'wrap') ? opts.wrap : true;\n  this.sandbox = opts.sandbox || {};\n  this.eval = opts.eval === undefined ? 'safe' : opts.eval;\n  this.ignoreEvalErrors = typeof opts.ignoreEvalErrors === 'undefined' ? false : opts.ignoreEvalErrors;\n  this.parent = opts.parent || null;\n  this.parentProperty = opts.parentProperty || null;\n  this.callback = opts.callback || callback || null;\n  this.otherTypeCallback = opts.otherTypeCallback || otherTypeCallback || function () {\n    throw new TypeError('You must supply an otherTypeCallback callback option ' + 'with the @other() operator.');\n  };\n  if (opts.autostart !== false) {\n    const args = {\n      path: optObj ? opts.path : expr\n    };\n    if (!optObj) {\n      args.json = obj;\n    } else if ('json' in opts) {\n      args.json = opts.json;\n    }\n    const ret = this.evaluate(args);\n    if (!ret || typeof ret !== 'object') {\n      throw new NewError(ret);\n    }\n    return ret;\n  }\n}\n\n// PUBLIC METHODS\nJSONPath.prototype.evaluate = function (expr, json, callback, otherTypeCallback) {\n  let currParent = this.parent,\n    currParentProperty = this.parentProperty;\n  let {\n    flatten,\n    wrap\n  } = this;\n  this.currResultType = this.resultType;\n  this.currEval = this.eval;\n  this.currSandbox = this.sandbox;\n  callback = callback || this.callback;\n  this.currOtherTypeCallback = otherTypeCallback || this.otherTypeCallback;\n  json = json || this.json;\n  expr = expr || this.path;\n  if (expr && typeof expr === 'object' && !Array.isArray(expr)) {\n    if (!expr.path && expr.path !== '') {\n      throw new TypeError('You must supply a \"path\" property when providing an object ' + 'argument to JSONPath.evaluate().');\n    }\n    if (!Object.hasOwn(expr, 'json')) {\n      throw new TypeError('You must supply a \"json\" property when providing an object ' + 'argument to JSONPath.evaluate().');\n    }\n    ({\n      json\n    } = expr);\n    flatten = Object.hasOwn(expr, 'flatten') ? expr.flatten : flatten;\n    this.currResultType = Object.hasOwn(expr, 'resultType') ? expr.resultType : this.currResultType;\n    this.currSandbox = Object.hasOwn(expr, 'sandbox') ? expr.sandbox : this.currSandbox;\n    wrap = Object.hasOwn(expr, 'wrap') ? expr.wrap : wrap;\n    this.currEval = Object.hasOwn(expr, 'eval') ? expr.eval : this.currEval;\n    callback = Object.hasOwn(expr, 'callback') ? expr.callback : callback;\n    this.currOtherTypeCallback = Object.hasOwn(expr, 'otherTypeCallback') ? expr.otherTypeCallback : this.currOtherTypeCallback;\n    currParent = Object.hasOwn(expr, 'parent') ? expr.parent : currParent;\n    currParentProperty = Object.hasOwn(expr, 'parentProperty') ? expr.parentProperty : currParentProperty;\n    expr = expr.path;\n  }\n  currParent = currParent || null;\n  currParentProperty = currParentProperty || null;\n  if (Array.isArray(expr)) {\n    expr = JSONPath.toPathString(expr);\n  }\n  if (!expr && expr !== '' || !json) {\n    return undefined;\n  }\n  const exprList = JSONPath.toPathArray(expr);\n  if (exprList[0] === '$' && exprList.length > 1) {\n    exprList.shift();\n  }\n  this._hasParentSelector = null;\n  const result = this._trace(exprList, json, ['$'], currParent, currParentProperty, callback).filter(function (ea) {\n    return ea && !ea.isParentSelector;\n  });\n  if (!result.length) {\n    return wrap ? [] : undefined;\n  }\n  if (!wrap && result.length === 1 && !result[0].hasArrExpr) {\n    return this._getPreferredOutput(result[0]);\n  }\n  return result.reduce((rslt, ea) => {\n    const valOrPath = this._getPreferredOutput(ea);\n    if (flatten && Array.isArray(valOrPath)) {\n      rslt = rslt.concat(valOrPath);\n    } else {\n      rslt.push(valOrPath);\n    }\n    return rslt;\n  }, []);\n};\n\n// PRIVATE METHODS\n\nJSONPath.prototype._getPreferredOutput = function (ea) {\n  const resultType = this.currResultType;\n  switch (resultType) {\n    case 'all':\n      {\n        const path = Array.isArray(ea.path) ? ea.path : JSONPath.toPathArray(ea.path);\n        ea.pointer = JSONPath.toPointer(path);\n        ea.path = typeof ea.path === 'string' ? ea.path : JSONPath.toPathString(ea.path);\n        return ea;\n      }\n    case 'value':\n    case 'parent':\n    case 'parentProperty':\n      return ea[resultType];\n    case 'path':\n      return JSONPath.toPathString(ea[resultType]);\n    case 'pointer':\n      return JSONPath.toPointer(ea.path);\n    default:\n      throw new TypeError('Unknown result type');\n  }\n};\nJSONPath.prototype._handleCallback = function (fullRetObj, callback, type) {\n  if (callback) {\n    const preferredOutput = this._getPreferredOutput(fullRetObj);\n    fullRetObj.path = typeof fullRetObj.path === 'string' ? fullRetObj.path : JSONPath.toPathString(fullRetObj.path);\n    // eslint-disable-next-line n/callback-return -- No need to return\n    callback(preferredOutput, type, fullRetObj);\n  }\n};\n\n/**\n *\n * @param {string} expr\n * @param {JSONObject} val\n * @param {string} path\n * @param {object|GenericArray} parent\n * @param {string} parentPropName\n * @param {JSONPathCallback} callback\n * @param {boolean} hasArrExpr\n * @param {boolean} literalPriority\n * @returns {ReturnObject|ReturnObject[]}\n */\nJSONPath.prototype._trace = function (expr, val, path, parent, parentPropName, callback, hasArrExpr, literalPriority) {\n  // No expr to follow? return path and value as the result of\n  //  this trace branch\n  let retObj;\n  if (!expr.length) {\n    retObj = {\n      path,\n      value: val,\n      parent,\n      parentProperty: parentPropName,\n      hasArrExpr\n    };\n    this._handleCallback(retObj, callback, 'value');\n    return retObj;\n  }\n  const loc = expr[0],\n    x = expr.slice(1);\n\n  // We need to gather the return value of recursive trace calls in order to\n  // do the parent sel computation.\n  const ret = [];\n  /**\n   *\n   * @param {ReturnObject|ReturnObject[]} elems\n   * @returns {void}\n   */\n  function addRet(elems) {\n    if (Array.isArray(elems)) {\n      // This was causing excessive stack size in Node (with or\n      //  without Babel) against our performance test:\n      //  `ret.push(...elems);`\n      elems.forEach(t => {\n        ret.push(t);\n      });\n    } else {\n      ret.push(elems);\n    }\n  }\n  if ((typeof loc !== 'string' || literalPriority) && val && Object.hasOwn(val, loc)) {\n    // simple case--directly follow property\n    addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback, hasArrExpr));\n    // eslint-disable-next-line unicorn/prefer-switch -- Part of larger `if`\n  } else if (loc === '*') {\n    // all child properties\n    this._walk(val, m => {\n      addRet(this._trace(x, val[m], push(path, m), val, m, callback, true, true));\n    });\n  } else if (loc === '..') {\n    // all descendent parent properties\n    // Check remaining expression with val's immediate children\n    addRet(this._trace(x, val, path, parent, parentPropName, callback, hasArrExpr));\n    this._walk(val, m => {\n      // We don't join m and x here because we only want parents,\n      //   not scalar values\n      if (typeof val[m] === 'object') {\n        // Keep going with recursive descent on val's\n        //   object children\n        addRet(this._trace(expr.slice(), val[m], push(path, m), val, m, callback, true));\n      }\n    });\n    // The parent sel computation is handled in the frame above using the\n    // ancestor object of val\n  } else if (loc === '^') {\n    // This is not a final endpoint, so we do not invoke the callback here\n    this._hasParentSelector = true;\n    return {\n      path: path.slice(0, -1),\n      expr: x,\n      isParentSelector: true\n    };\n  } else if (loc === '~') {\n    // property name\n    retObj = {\n      path: push(path, loc),\n      value: parentPropName,\n      parent,\n      parentProperty: null\n    };\n    this._handleCallback(retObj, callback, 'property');\n    return retObj;\n  } else if (loc === '$') {\n    // root only\n    addRet(this._trace(x, val, path, null, null, callback, hasArrExpr));\n  } else if (/^(-?\\d*):(-?\\d*):?(\\d*)$/u.test(loc)) {\n    // [start:end:step]  Python slice syntax\n    addRet(this._slice(loc, x, val, path, parent, parentPropName, callback));\n  } else if (loc.indexOf('?(') === 0) {\n    // [?(expr)] (filtering)\n    if (this.currEval === false) {\n      throw new Error('Eval [?(expr)] prevented in JSONPath expression.');\n    }\n    const safeLoc = loc.replace(/^\\?\\((.*?)\\)$/u, '$1');\n    // check for a nested filter expression\n    const nested = /@.?([^?]*)[['](\\??\\(.*?\\))(?!.\\)\\])[\\]']/gu.exec(safeLoc);\n    if (nested) {\n      // find if there are matches in the nested expression\n      // add them to the result set if there is at least one match\n      this._walk(val, m => {\n        const npath = [nested[2]];\n        const nvalue = nested[1] ? val[m][nested[1]] : val[m];\n        const filterResults = this._trace(npath, nvalue, path, parent, parentPropName, callback, true);\n        if (filterResults.length > 0) {\n          addRet(this._trace(x, val[m], push(path, m), val, m, callback, true));\n        }\n      });\n    } else {\n      this._walk(val, m => {\n        if (this._eval(safeLoc, val[m], m, path, parent, parentPropName)) {\n          addRet(this._trace(x, val[m], push(path, m), val, m, callback, true));\n        }\n      });\n    }\n  } else if (loc[0] === '(') {\n    // [(expr)] (dynamic property/index)\n    if (this.currEval === false) {\n      throw new Error('Eval [(expr)] prevented in JSONPath expression.');\n    }\n    // As this will resolve to a property name (but we don't know it\n    //  yet), property and parent information is relative to the\n    //  parent of the property to which this expression will resolve\n    addRet(this._trace(unshift(this._eval(loc, val, path.at(-1), path.slice(0, -1), parent, parentPropName), x), val, path, parent, parentPropName, callback, hasArrExpr));\n  } else if (loc[0] === '@') {\n    // value type: @boolean(), etc.\n    let addType = false;\n    const valueType = loc.slice(1, -2);\n    switch (valueType) {\n      case 'scalar':\n        if (!val || !['object', 'function'].includes(typeof val)) {\n          addType = true;\n        }\n        break;\n      case 'boolean':\n      case 'string':\n      case 'undefined':\n      case 'function':\n        if (typeof val === valueType) {\n          addType = true;\n        }\n        break;\n      case 'integer':\n        if (Number.isFinite(val) && !(val % 1)) {\n          addType = true;\n        }\n        break;\n      case 'number':\n        if (Number.isFinite(val)) {\n          addType = true;\n        }\n        break;\n      case 'nonFinite':\n        if (typeof val === 'number' && !Number.isFinite(val)) {\n          addType = true;\n        }\n        break;\n      case 'object':\n        if (val && typeof val === valueType) {\n          addType = true;\n        }\n        break;\n      case 'array':\n        if (Array.isArray(val)) {\n          addType = true;\n        }\n        break;\n      case 'other':\n        addType = this.currOtherTypeCallback(val, path, parent, parentPropName);\n        break;\n      case 'null':\n        if (val === null) {\n          addType = true;\n        }\n        break;\n      /* c8 ignore next 2 */\n      default:\n        throw new TypeError('Unknown value type ' + valueType);\n    }\n    if (addType) {\n      retObj = {\n        path,\n        value: val,\n        parent,\n        parentProperty: parentPropName\n      };\n      this._handleCallback(retObj, callback, 'value');\n      return retObj;\n    }\n    // `-escaped property\n  } else if (loc[0] === '`' && val && Object.hasOwn(val, loc.slice(1))) {\n    const locProp = loc.slice(1);\n    addRet(this._trace(x, val[locProp], push(path, locProp), val, locProp, callback, hasArrExpr, true));\n  } else if (loc.includes(',')) {\n    // [name1,name2,...]\n    const parts = loc.split(',');\n    for (const part of parts) {\n      addRet(this._trace(unshift(part, x), val, path, parent, parentPropName, callback, true));\n    }\n    // simple case--directly follow property\n  } else if (!literalPriority && val && Object.hasOwn(val, loc)) {\n    addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback, hasArrExpr, true));\n  }\n\n  // We check the resulting values for parent selections. For parent\n  // selections we discard the value object and continue the trace with the\n  // current val object\n  if (this._hasParentSelector) {\n    for (let t = 0; t < ret.length; t++) {\n      const rett = ret[t];\n      if (rett && rett.isParentSelector) {\n        const tmp = this._trace(rett.expr, val, rett.path, parent, parentPropName, callback, hasArrExpr);\n        if (Array.isArray(tmp)) {\n          ret[t] = tmp[0];\n          const tl = tmp.length;\n          for (let tt = 1; tt < tl; tt++) {\n            // eslint-disable-next-line @stylistic/max-len -- Long\n            // eslint-disable-next-line sonarjs/updated-loop-counter -- Convenient\n            t++;\n            ret.splice(t, 0, tmp[tt]);\n          }\n        } else {\n          ret[t] = tmp;\n        }\n      }\n    }\n  }\n  return ret;\n};\nJSONPath.prototype._walk = function (val, f) {\n  if (Array.isArray(val)) {\n    const n = val.length;\n    for (let i = 0; i < n; i++) {\n      f(i);\n    }\n  } else if (val && typeof val === 'object') {\n    Object.keys(val).forEach(m => {\n      f(m);\n    });\n  }\n};\nJSONPath.prototype._slice = function (loc, expr, val, path, parent, parentPropName, callback) {\n  if (!Array.isArray(val)) {\n    return undefined;\n  }\n  const len = val.length,\n    parts = loc.split(':'),\n    step = parts[2] && Number.parseInt(parts[2]) || 1;\n  let start = parts[0] && Number.parseInt(parts[0]) || 0,\n    end = parts[1] && Number.parseInt(parts[1]) || len;\n  start = start < 0 ? Math.max(0, start + len) : Math.min(len, start);\n  end = end < 0 ? Math.max(0, end + len) : Math.min(len, end);\n  const ret = [];\n  for (let i = start; i < end; i += step) {\n    const tmp = this._trace(unshift(i, expr), val, path, parent, parentPropName, callback, true);\n    // Should only be possible to be an array here since first part of\n    //   ``unshift(i, expr)` passed in above would not be empty, nor `~`,\n    //     nor begin with `@` (as could return objects)\n    // This was causing excessive stack size in Node (with or\n    //  without Babel) against our performance test: `ret.push(...tmp);`\n    tmp.forEach(t => {\n      ret.push(t);\n    });\n  }\n  return ret;\n};\nJSONPath.prototype._eval = function (code, _v, _vname, path, parent, parentPropName) {\n  this.currSandbox._$_parentProperty = parentPropName;\n  this.currSandbox._$_parent = parent;\n  this.currSandbox._$_property = _vname;\n  this.currSandbox._$_root = this.json;\n  this.currSandbox._$_v = _v;\n  const containsPath = code.includes('@path');\n  if (containsPath) {\n    this.currSandbox._$_path = JSONPath.toPathString(path.concat([_vname]));\n  }\n  const scriptCacheKey = this.currEval + 'Script:' + code;\n  if (!JSONPath.cache[scriptCacheKey]) {\n    let script = code.replaceAll('@parentProperty', '_$_parentProperty').replaceAll('@parent', '_$_parent').replaceAll('@property', '_$_property').replaceAll('@root', '_$_root').replaceAll(/@([.\\s)[])/gu, '_$_v$1');\n    if (containsPath) {\n      script = script.replaceAll('@path', '_$_path');\n    }\n    if (this.currEval === 'safe' || this.currEval === true || this.currEval === undefined) {\n      JSONPath.cache[scriptCacheKey] = new this.safeVm.Script(script);\n    } else if (this.currEval === 'native') {\n      JSONPath.cache[scriptCacheKey] = new this.vm.Script(script);\n    } else if (typeof this.currEval === 'function' && this.currEval.prototype && Object.hasOwn(this.currEval.prototype, 'runInNewContext')) {\n      const CurrEval = this.currEval;\n      JSONPath.cache[scriptCacheKey] = new CurrEval(script);\n    } else if (typeof this.currEval === 'function') {\n      JSONPath.cache[scriptCacheKey] = {\n        runInNewContext: context => this.currEval(script, context)\n      };\n    } else {\n      throw new TypeError(`Unknown \"eval\" property \"${this.currEval}\"`);\n    }\n  }\n  try {\n    return JSONPath.cache[scriptCacheKey].runInNewContext(this.currSandbox);\n  } catch (e) {\n    if (this.ignoreEvalErrors) {\n      return false;\n    }\n    throw new Error('jsonPath: ' + e.message + ': ' + code);\n  }\n};\n\n// PUBLIC CLASS PROPERTIES AND METHODS\n\n// Could store the cache object itself\nJSONPath.cache = {};\n\n/**\n * @param {string[]} pathArr Array to convert\n * @returns {string} The path string\n */\nJSONPath.toPathString = function (pathArr) {\n  const x = pathArr,\n    n = x.length;\n  let p = '$';\n  for (let i = 1; i < n; i++) {\n    if (!/^(~|\\^|@.*?\\(\\))$/u.test(x[i])) {\n      p += /^[0-9*]+$/u.test(x[i]) ? '[' + x[i] + ']' : \"['\" + x[i] + \"']\";\n    }\n  }\n  return p;\n};\n\n/**\n * @param {string} pointer JSON Path\n * @returns {string} JSON Pointer\n */\nJSONPath.toPointer = function (pointer) {\n  const x = pointer,\n    n = x.length;\n  let p = '';\n  for (let i = 1; i < n; i++) {\n    if (!/^(~|\\^|@.*?\\(\\))$/u.test(x[i])) {\n      p += '/' + x[i].toString().replaceAll('~', '~0').replaceAll('/', '~1');\n    }\n  }\n  return p;\n};\n\n/**\n * @param {string} expr Expression to convert\n * @returns {string[]}\n */\nJSONPath.toPathArray = function (expr) {\n  const {\n    cache\n  } = JSONPath;\n  if (cache[expr]) {\n    return cache[expr].concat();\n  }\n  const subx = [];\n  const normalized = expr\n  // Properties\n  .replaceAll(/@(?:null|boolean|number|string|integer|undefined|nonFinite|scalar|array|object|function|other)\\(\\)/gu, ';$&;')\n  // Parenthetical evaluations (filtering and otherwise), directly\n  //   within brackets or single quotes\n  .replaceAll(/[['](\\??\\(.*?\\))[\\]'](?!.\\])/gu, function ($0, $1) {\n    return '[#' + (subx.push($1) - 1) + ']';\n  })\n  // Escape periods and tildes within properties\n  .replaceAll(/\\[['\"]([^'\\]]*)['\"]\\]/gu, function ($0, prop) {\n    return \"['\" + prop.replaceAll('.', '%@%').replaceAll('~', '%%@@%%') + \"']\";\n  })\n  // Properties operator\n  .replaceAll('~', ';~;')\n  // Split by property boundaries\n  .replaceAll(/['\"]?\\.['\"]?(?![^[]*\\])|\\[['\"]?/gu, ';')\n  // Reinsert periods within properties\n  .replaceAll('%@%', '.')\n  // Reinsert tildes within properties\n  .replaceAll('%%@@%%', '~')\n  // Parent\n  .replaceAll(/(?:;)?(\\^+)(?:;)?/gu, function ($0, ups) {\n    return ';' + ups.split('').join(';') + ';';\n  })\n  // Descendents\n  .replaceAll(/;;;|;;/gu, ';..;')\n  // Remove trailing\n  .replaceAll(/;$|'?\\]|'$/gu, '');\n  const exprList = normalized.split(';').map(function (exp) {\n    const match = exp.match(/#(\\d+)/u);\n    return !match || !match[1] ? exp : subx[match[1]];\n  });\n  cache[expr] = exprList;\n  return cache[expr].concat();\n};\nJSONPath.prototype.safeVm = {\n  Script: SafeScript\n};\n\n/**\n * @typedef {any} ContextItem\n */\n\n/**\n * @typedef {any} EvaluatedResult\n */\n\n/**\n * @callback ConditionCallback\n * @param {ContextItem} item\n * @returns {boolean}\n */\n\n/**\n * Copy items out of one array into another.\n * @param {GenericArray} source Array with items to copy\n * @param {GenericArray} target Array to which to copy\n * @param {ConditionCallback} conditionCb Callback passed the current item;\n *     will move item if evaluates to `true`\n * @returns {void}\n */\nconst moveToAnotherArray = function (source, target, conditionCb) {\n  const il = source.length;\n  for (let i = 0; i < il; i++) {\n    const item = source[i];\n    if (conditionCb(item)) {\n      // eslint-disable-next-line @stylistic/max-len -- Long\n      // eslint-disable-next-line sonarjs/updated-loop-counter -- Convenient\n      target.push(source.splice(i--, 1)[0]);\n    }\n  }\n};\n\n/**\n * In-browser replacement for NodeJS' VM.Script.\n */\nclass Script {\n  /**\n   * @param {string} expr Expression to evaluate\n   */\n  constructor(expr) {\n    this.code = expr;\n  }\n\n  /**\n   * @param {object} context Object whose items will be added\n   *   to evaluation\n   * @returns {EvaluatedResult} Result of evaluated code\n   */\n  runInNewContext(context) {\n    let expr = this.code;\n    const keys = Object.keys(context);\n    const funcs = [];\n    moveToAnotherArray(keys, funcs, key => {\n      return typeof context[key] === 'function';\n    });\n    const values = keys.map(vr => {\n      return context[vr];\n    });\n    const funcString = funcs.reduce((s, func) => {\n      let fString = context[func].toString();\n      if (!/function/u.test(fString)) {\n        fString = 'function ' + fString;\n      }\n      return 'var ' + func + '=' + fString + ';' + s;\n    }, '');\n    expr = funcString + expr;\n\n    // Mitigate http://perfectionkills.com/global-eval-what-are-the-options/#new_function\n    if (!/(['\"])use strict\\1/u.test(expr) && !keys.includes('arguments')) {\n      expr = 'var arguments = undefined;' + expr;\n    }\n\n    // Remove last semi so `return` will be inserted before\n    //  the previous one instead, allowing for the return\n    //  of a bare ending expression\n    expr = expr.replace(/;\\s*$/u, '');\n\n    // Insert `return`\n    const lastStatementEnd = expr.lastIndexOf(';');\n    const code = lastStatementEnd !== -1 ? expr.slice(0, lastStatementEnd + 1) + ' return ' + expr.slice(lastStatementEnd + 1) : ' return ' + expr;\n\n    // eslint-disable-next-line no-new-func -- User's choice\n    return new Function(...keys, code)(...values);\n  }\n}\nJSONPath.prototype.vm = {\n  Script\n};\n\nexport { JSONPath };\n", "import { JSONPath } from \"jsonpath-plus\";\nimport jsonpointer from \"jsonpointer\";\nexport function resolvePathAndMethod(step) {\n    return {\n        path: step.operation.path,\n        method: step.operation.method,\n    };\n}\nfunction resolveParameters(parameters, context) {\n    return parameters.reduce((acc, param) => {\n        acc[param.name] = String(resolveReference(param.value, context));\n        return acc;\n    }, {});\n}\nfunction resolveBody(requestBody, context) {\n    if (!requestBody) {\n        return undefined;\n    }\n    const { payload } = requestBody;\n    // Handle string payload (runtime expression)\n    if (typeof payload === \"string\") {\n        return resolveReference(payload, context);\n    }\n    // Handle object payload\n    if (typeof payload === \"object\") {\n        const resolvedBody = Object.entries(payload).reduce((acc, [key, value]) => {\n            acc[key] =\n                typeof value === \"string\" && value.startsWith(\"$\")\n                    ? resolveReference(value, context)\n                    : value;\n            return acc;\n        }, {});\n        return resolvedBody;\n    }\n    return undefined;\n}\nexport async function resolveStepParams(step, context) {\n    const parameters = resolveParameters(step.parameters, context);\n    const body = resolveBody(step.requestBody, context);\n    return {\n        parameters,\n        ...(body ? { body } : {}),\n    };\n}\nexport function resolveOutputs(workflow, context) {\n    return workflow.outputs.reduce((acc, output) => {\n        acc[output.key] = resolveReference(output.value, context);\n        return acc;\n    }, {});\n}\nexport function resolveReference(value, context) {\n    // If not an expression, return as is\n    if (!value.startsWith(\"$\") && !value.includes(\"{$\")) {\n        return value;\n    }\n    // Handle template expressions like \"Bearer {$steps.authenticate.outputs.token}\"\n    if (value.includes(\"{$\")) {\n        return value.replace(/\\{([^}]+)\\}/g, (_, expr) => {\n            const resolved = resolveReference(expr, context);\n            return resolved === undefined ? \"\" : String(resolved);\n        });\n    }\n    // Split into JSONPath and JSON Pointer parts\n    const [jsonPath, jsonPointerPath] = value.split(\"#\");\n    // For response references, we need to use a different context\n    if (jsonPath.startsWith(\"$response\") && \"response\" in context) {\n        const path = jsonPath.replace(\"$response\", \"$\");\n        const result = JSONPath({\n            path,\n            json: context.response,\n            resultType: \"value\",\n        })[0];\n        if (jsonPointerPath && result) {\n            return jsonpointer.get(result, jsonPointerPath.startsWith(\"/\")\n                ? jsonPointerPath\n                : `/${jsonPointerPath}`);\n        }\n        return result;\n    }\n    // Transform the path into proper JSONPath format\n    // Example: $inputs.name -> $.inputs.name\n    // Example: $steps.listItems.outputs.items[1].id -> $.steps.listItems.outputs.items[1].id\n    const transformedPath = jsonPath.replace(/^\\$/, \"$.\");\n    const result = JSONPath({\n        path: transformedPath,\n        json: context,\n        resultType: \"value\",\n    })[0];\n    if (jsonPointerPath && result) {\n        return jsonpointer.get(result, jsonPointerPath.startsWith(\"/\") ? jsonPointerPath : `/${jsonPointerPath}`);\n    }\n    return result;\n}\nexport function resolveStepOutputs(step, response) {\n    if (!step.outputs?.length) {\n        return undefined;\n    }\n    return step.outputs.reduce((acc, output) => {\n        acc[output.key] = resolveReference(output.value, { response });\n        return acc;\n    }, {});\n}\n", "import { HTTPException } from \"hono/http-exception\";\nimport { getContext } from \"../../utils/index.js\";\nexport async function getWorkflowById(workflowId, apiKey, fiberplaneServicesUrl, partitionKey) {\n    const c = getContext();\n    const app = c.get(\"userApp\");\n    const env = c.get(\"userEnv\");\n    if (!app) {\n        throw new HTTPException(500, {\n            message: \"app is not configured for running workflows\",\n        });\n    }\n    const path = `/api/workflows/${workflowId}`;\n    const request = new Request(`${fiberplaneServicesUrl}${path}`, {\n        method: \"GET\",\n        headers: {\n            Authorization: `Bearer ${apiKey}`,\n            \"X-Fiberplane-Partition-Key\": partitionKey,\n        },\n    });\n    // Check if we're running in the PLAYGROUND_SERVICES_URL itself\n    if (new URL(c.req.url).origin === fiberplaneServicesUrl) {\n        const response = await app.request(request, {}, env);\n        if (!response.ok) {\n            throw new HTTPException(response.status, {\n                message: await response.text(),\n            });\n        }\n        return await response.json();\n    }\n    // Otherwise use external fetch\n    const workflowResponse = await fetch(request);\n    return await workflowResponse.json();\n}\n/**\n * Formats a ZodError into a readable string for debugging purposes.\n * Includes detailed information about validation errors including:\n * - Path to the error in the object\n * - Error code and message\n * - Validation details\n * - Fatal flag if present\n * - Union validation errors if present\n */\nexport function formatZodError(error) {\n    return error.errors\n        .map((err) => {\n        const path = err.path.length > 0 ? `at path: \"${err.path.join(\".\")}\"` : \"at root\";\n        const code = err.code ? ` [${err.code}]` : \"\";\n        let details = \"\";\n        // Handle invalid_type errors specifically\n        if (\"expected\" in err && \"received\" in err) {\n            details += `\\n  Expected: ${err.expected}`;\n            details += `\\n  Received: ${err.received}`;\n        }\n        if (\"fatal\" in err && err.fatal) {\n            details += \"\\n  Fatal: true\";\n        }\n        if (\"validation\" in err) {\n            details += `\\n  Validation: ${err.validation}`;\n        }\n        if (\"type\" in err && !(\"expected\" in err)) {\n            // Avoid duplicate info for invalid_type\n            details += `\\n  Expected type: ${err.type}`;\n        }\n        if (\"received\" in err && !(\"expected\" in err)) {\n            // Avoid duplicate info for invalid_type\n            details += `\\n  Received: ${JSON.stringify(err.received)}`;\n        }\n        if (\"unionErrors\" in err && Array.isArray(err.unionErrors)) {\n            details += \"\\n  Union validation errors:\";\n            err.unionErrors.forEach((unionError, index) => {\n                details += `\\n    Option ${index + 1}:\\n      ${unionError.message.replace(/\\n/g, \"\\n      \")}`;\n            });\n        }\n        return `Error${code} ${path}\\n  ${err.message}${details}`;\n    })\n        .join(\"\\n\\n\");\n}\n", "// TODO: ideally we'd replace this with a zod validator but cheaper and simpler\n// to use a basic json schema validator for now\nimport { sValidator } from \"@hono/standard-validator\";\nimport { Hono } from \"hono\";\nimport { HTTPException } from \"hono/http-exception\";\nimport { Draft2019 } from \"json-schema-library\";\nimport { z } from \"zod\";\nimport { InputSchema } from \"../../schemas/workflows.js\";\nimport { getContext } from \"../../utils/index.js\";\nimport { resolveOutputs, resolvePathAndMethod, resolveStepOutputs, resolveStepParams, } from \"./resolvers.js\";\nimport { getWorkflowById } from \"./utils.js\";\nclass WorkflowError extends HTTPException {\n    details;\n    cause;\n    constructor(status, message, details, cause) {\n        super(status, {\n            message,\n            cause,\n        });\n        this.details = details;\n        this.cause = cause;\n    }\n    toResponse() {\n        const { body, ...details } = this.details;\n        return {\n            type: \"EXECUTION_ERROR\",\n            message: this.message,\n            payload: details,\n        };\n    }\n}\nfunction serialize(content) {\n    if (typeof content === \"string\") {\n        return content;\n    }\n    if (content === undefined) {\n        return undefined;\n    }\n    return JSON.stringify(content);\n}\nconst BaseJsonErrorSchema = z.object({\n    type: z.literal(\"error\"),\n    name: z.string(),\n    message: z.string(),\n});\nconst RequiredPropertyErrorDataSchema = z.object({\n    key: z.string(),\n    pointer: z.string(),\n    schema: InputSchema,\n    value: z.any(),\n});\nconst TypeErrorDataSchema = z.object({\n    value: z.any(),\n    pointer: z.string(),\n    expected: z.string(),\n    received: z.string(),\n    schema: InputSchema,\n});\nconst RequiredPropertyErrorSchema = BaseJsonErrorSchema.extend({\n    code: z.literal(\"required-property-error\"),\n    data: RequiredPropertyErrorDataSchema,\n});\nconst TypeErrorSchema = BaseJsonErrorSchema.extend({\n    code: z.literal(\"type-error\"),\n    data: TypeErrorDataSchema,\n});\nconst SupportedValidationErrorSchema = z.discriminatedUnion(\"code\", [\n    RequiredPropertyErrorSchema,\n    TypeErrorSchema,\n]);\nexport default function createRunnerRoute(apiKey, fiberplaneServicesUrl) {\n    const runner = new Hono().post(\"/:workflowId\", sValidator(\"param\", z.object({ workflowId: z.string() })), async (c) => {\n        const { workflowId } = c.req.valid(\"param\");\n        const partitionKey = c.req.header(\"X-Fiberplane-Partition-Key\");\n        if (!partitionKey) {\n            return c.json({ error: \"Missing `X-Fiberplane-Partition-Key` header\" }, 400);\n        }\n        const { data: workflow } = await getWorkflowById(workflowId, apiKey, fiberplaneServicesUrl, partitionKey);\n        const inputs = workflow.inputs;\n        if (inputs.type === \"object\" && inputs.properties) {\n            inputs.properties = Object.fromEntries(Object.entries(inputs.properties).map(([key, value]) => {\n                return [key, { ...value, id: key }];\n            }));\n        }\n        const draft = new Draft2019(inputs);\n        const body = await c.req.json();\n        const errors = draft.validate(body);\n        if (errors.length) {\n            const details = errors\n                .map((item) => {\n                const parsedResult = SupportedValidationErrorSchema.safeParse(item);\n                if (parsedResult.success) {\n                    return parsedResult.data;\n                }\n                return null;\n            })\n                .filter((item) => item !== null)\n                .map((item) => {\n                if (item.code === \"required-property-error\") {\n                    return {\n                        key: item.data.key,\n                        message: item.message,\n                        code: item.code,\n                    };\n                }\n                return {\n                    code: item.code,\n                    key: item.data.pointer,\n                    message: item.message,\n                };\n            });\n            const response = {\n                type: \"VALIDATION_ERROR\",\n                message: \"validation failed\",\n                payload: details,\n            };\n            return c.json(response, 400);\n        }\n        const context = getContext();\n        const userApp = context.get(\"userApp\");\n        if (!userApp) {\n            return c.json({\n                type: \"CONFIGURATION_ERROR\",\n                message: \"Missing `app` parameter for @fiberplane/hono middleware\",\n            }, 500);\n        }\n        try {\n            const result = await executeWorkflow(workflow, body);\n            return c.json(result);\n        }\n        catch (error) {\n            if (error instanceof WorkflowError) {\n                return c.json(error.toResponse(), error.status);\n            }\n            throw error;\n        }\n    });\n    return runner;\n}\nasync function executeWorkflow(workflow, inputs) {\n    const workflowContext = {\n        inputs,\n        steps: {},\n    };\n    for (const step of workflow.steps) {\n        try {\n            const stepParameters = await resolveStepParams(step, workflowContext);\n            const c = getContext();\n            const baseUrl = new URL(c.req.url).origin;\n            const request = createRequest(step, stepParameters, baseUrl);\n            const response = await executeRequest(request);\n            if (response.statusCode >= 400) {\n                const request = createRequest(step, stepParameters, baseUrl);\n                const errorDetails = {\n                    stepId: step.stepId,\n                    parameters: stepParameters.parameters,\n                    request: {\n                        url: request.url,\n                        method: request.method,\n                        headers: Object.fromEntries(request.headers.entries()),\n                        body: stepParameters.body\n                            ? serialize(stepParameters.body)\n                            : undefined,\n                    },\n                    response: {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: serialize(response.body),\n                    },\n                };\n                throw new WorkflowError(response.statusCode, \"Workflow failed\", errorDetails);\n            }\n            const outputs = resolveStepOutputs(step, response);\n            workflowContext.steps[step.stepId] = {\n                ...(outputs ? { outputs } : {}),\n            };\n        }\n        catch (error) {\n            if (error instanceof WorkflowError) {\n                throw error;\n            }\n            throw new WorkflowError(500, \"Unknown step execution error\", {\n                stepId: step.stepId,\n            });\n        }\n    }\n    return resolveOutputs(workflow, workflowContext);\n}\nasync function executeRequest(request) {\n    const c = getContext();\n    const userApp = c.get(\"userApp\");\n    const userEnv = c.get(\"userEnv\");\n    const userExecutionCtx = c.get(\"userExecutionCtx\");\n    const response = await userApp.request(request, {}, userEnv, userExecutionCtx);\n    const contentType = response.headers.get(\"content-type\");\n    const responseBody = contentType?.includes(\"application/json\")\n        ? await response.json()\n        : (await response.text()) || null;\n    return {\n        statusCode: response.status,\n        headers: Object.fromEntries(response.headers.entries()),\n        body: responseBody,\n    };\n}\nfunction createRequest(step, params, origin) {\n    const baseUrl = new URL(origin);\n    const headers = new Headers();\n    const { method, path: uri } = resolvePathAndMethod(step);\n    // Collect all parameters in a single pass\n    const { pathname, searchParams } = step.parameters.reduce((acc, param) => {\n        const value = String(params.parameters[param.name]);\n        switch (param.in) {\n            case \"path\":\n                acc.pathname = acc.pathname.replace(`{${param.name}}`, value);\n                break;\n            case \"query\":\n                acc.searchParams += `${acc.searchParams ? \"&\" : \"\"}${encodeURIComponent(param.name)}=${encodeURIComponent(value)}`;\n                break;\n            case \"header\":\n                headers.append(param.name, value);\n                break;\n        }\n        return acc;\n    }, { pathname: uri, searchParams: \"\" });\n    // Construct URL with all parameters\n    const url = new URL(pathname + (searchParams ? `?${searchParams}` : \"\"), baseUrl);\n    if (params.body) {\n        headers.append(\"Content-Type\", \"application/json\");\n    }\n    return new Request(url, {\n        method: method.toUpperCase(),\n        headers,\n        body: params.body ? JSON.stringify(params.body) : undefined,\n    });\n}\n", "import { Hono } from \"hono\";\nimport { logIfDebug } from \"./debug.js\";\nimport { webStandardFetch } from \"./fetch.js\";\nimport createApiRoutes from \"./routes/api/index.js\";\nimport createTracesApiRoute from \"./routes/api/traces.js\";\nimport createEmbeddedPlayground from \"./routes/playground.js\";\nimport createRunnerRoute from \"./routes/runner/index.js\";\nimport { contextStorage } from \"./utils/index.js\";\n// We use a factory pattern to create routes, which allows for clean dependency injection\n// of the apiKey. This keeps the implementation isolated and prevents us from having to\n// extend the consuming Hono app's context with our own variables and types.\nexport function createRouter(options) {\n    // Important: whatever gets passed to createEmbeddedPlayground\n    // is passed to the playground, aka is on the HTML\n    // We therefore remove the apiKey\n    const { apiKey, otelEndpoint, otelToken, debug, fiberplaneServicesUrl, ...sanitizedOptions } = options;\n    const fetchFn = options.fetch ?? webStandardFetch;\n    const app = new Hono();\n    const isDebugEnabled = debug ?? false;\n    app.use(async (c, next) => {\n        c.set(\"debug\", isDebugEnabled);\n        await next();\n    });\n    app.use(contextStorage());\n    app.use(async (c, next) => {\n        await next();\n        logIfDebug(isDebugEnabled, \"==== matched routes ====\");\n        for (const [i, { handler, method, path },] of c.req.matchedRoutes.entries()) {\n            const name = handler.name || (handler.length < 2 ? \"[handler]\" : \"[middleware]\");\n            logIfDebug(isDebugEnabled, method, \" \", path, \" \".repeat(Math.max(10 - path.length, 0)), name, i === c.req.routeIndex ? \"<- respond from here\" : \"\");\n        }\n        logIfDebug(isDebugEnabled, \"==== end of matched routes ====\");\n    });\n    // If the OpenTelemetry endpoint is present, we create the internal traces API router\n    if (otelEndpoint) {\n        logIfDebug(isDebugEnabled, \"OpenTelemetry Endpoint Present. Creating internal traces API router.\");\n        app.route(\"/api/traces\", createTracesApiRoute(fetchFn, otelEndpoint, otelToken));\n    }\n    else {\n        logIfDebug(isDebugEnabled, \"OpenTelemetry Endpoint *NOT* Present. Internal traces API router disabled.\");\n        app.use(\"/api/traces/*\", async (c) => {\n            return c.json({ error: \"OpenTelemetry endpoint is not set\" }, 401);\n        });\n    }\n    app.use(async (c, next) => {\n        c.set(\"userApp\", options.userApp);\n        c.set(\"userEnv\", options.userEnv);\n        c.set(\"userExecutionCtx\", options.userExecutionCtx);\n        await next();\n    });\n    // If the API key is present, we create the internal API router\n    // Otherwise, we return a 402 error for all internal API requests\n    if (apiKey) {\n        logIfDebug(isDebugEnabled, \"Fiberplane API Key Present. Creating internal API router.\");\n        app.route(\"/w\", createRunnerRoute(apiKey, fiberplaneServicesUrl));\n        app.route(\"/api\", createApiRoutes(fetchFn, apiKey, fiberplaneServicesUrl));\n    }\n    else {\n        logIfDebug(isDebugEnabled, \"Fiberplane API Key *NOT* Present. Internal API router disabled.\");\n        app.use(\"/api/*\", async (c) => {\n            return c.json({ error: \"Fiberplane API key is not set\" }, 402);\n        });\n        app.use(\"/w/*\", async (c) => {\n            return c.json({ error: \"Fiberplane API key is not set\" }, 402);\n        });\n    }\n    const embeddedPlayground = createEmbeddedPlayground(sanitizedOptions);\n    app.route(\"/\", embeddedPlayground);\n    return app;\n}\n", "import { DEFAULT_PLAYGROUND_SERVICES_URL, ENV_FIBERPLANE_OTEL_TOKEN, ENV_FIBERPLANE_SERVICES_URL, ENV_FPX_AUTH_TOKEN, ENV_FPX_ENDPOINT, } from \"./constants.js\";\nimport { ENV_FIBERPLANE_OTEL_ENDPOINT } from \"./constants.js\";\nimport { logIfDebug } from \"./debug.js\";\nimport { createRouter } from \"./router.js\";\nimport { getFromEnv } from \"./utils/env.js\";\n// NOTE - We faced issues between Wrangler and Node environments when importing package.json directly in our code.\n//        Recent versions of Node wanted us to use `with` syntax,\n//        but Wrangler didn't support it yet.\n//\n// import packageJson from \"../package.json\" assert { type: \"json\" };\n/**\n * The version of assets to use for the playground ui.\n * This should correspond to the package.json version of the `@fiberplane/hono` package.\n */\nexport const ASSETS_VERSION = \"0.5.2\";\nconst CDN_URL = `https://cdn.jsdelivr.net/npm/@fiberplane/hono@${ASSETS_VERSION}/dist/playground/`;\nexport const createFiberplane = (options) => async (c, next) => {\n    const debug = options.debug ?? false;\n    const userApp = options.app;\n    const userEnv = c.env;\n    const userExecutionCtx = getExecutionCtxSafely(c);\n    logIfDebug(debug, \"debug logs are enabled\");\n    const apiKey = options.apiKey ?? getApiKey(c, debug);\n    const { mountedPath, internalPath } = getPaths(c);\n    const fiberplaneServicesUrl = options.fiberplaneServicesUrl ?? getFiberplaneServicesUrl(c);\n    const otelEndpoint = getOtelEndpoint(c);\n    const otelToken = getOtelToken(c);\n    logIfDebug(debug, \"mountedPath:\", mountedPath);\n    logIfDebug(debug, \"internalPath:\", internalPath);\n    logIfDebug(debug, \"fiberplaneServicesUrl:\", fiberplaneServicesUrl);\n    logIfDebug(debug, \"otelEndpoint:\", otelEndpoint);\n    if (otelEndpoint && !otelToken) {\n        logIfDebug(debug, \"otelToken is not set, tracing requests will not use bearer auth\");\n    }\n    if (!userExecutionCtx) {\n        logIfDebug(debug, \"userExecutionCtx is null\");\n    }\n    // Forward request to embedded router, continuing middleware chain if no route matches\n    const router = createRouter({\n        cdn: options.cdn ?? CDN_URL,\n        mountedPath,\n        otelEndpoint,\n        otelToken,\n        userApp,\n        userEnv,\n        userExecutionCtx,\n        ...options,\n        // Add the services url here because we already specified a fallback to the DEFAULT_PLAYGROUND_SERVICES_URL\n        fiberplaneServicesUrl,\n        // Add the api key with a fallback to the env var FIBERPLANE_API_KEY\n        apiKey,\n    });\n    // Create a new request with the corrected (internal) path\n    const newUrl = new URL(c.req.url);\n    newUrl.pathname = internalPath;\n    const newRequest = new Request(newUrl, c.req.raw);\n    logIfDebug(debug, \"Making internal api request:\", newRequest.method, newUrl.toString());\n    const response = await router.fetch(newRequest);\n    logIfDebug(debug, \"Finished internal api request:\", newRequest.method, newUrl.toString(), \"- returned\", response.status);\n    // Skip the middleware and continue if the embedded router doesn't match\n    // But make sure we're not ignoring a (json) bases 404.\n    if (response.status === 404 &&\n        response.headers.get(\"content-type\") !== \"application/json\") {\n        return next();\n    }\n    return response;\n};\n// This middleware is designed to be mounted within another Hono app at any path.\n// Since the parent app determines the mount path, we need to extract and remove\n// this prefix from incoming requests to ensure proper route matching\nfunction getPaths(c) {\n    const mountedPath = c.req.routePath.replace(\"/*\", \"\");\n    const internalPath = c.req.path.replace(mountedPath, \"\");\n    return {\n        mountedPath,\n        internalPath,\n    };\n}\n/**\n * Gets the OpenTelemetry endpoint from environment variables.\n * Checks both FIBERPLANE_OTEL_ENDPOINT and the legacy FPX_ENDPOINT.\n * Used to determine where to send telemetry data.\n *\n * @NOTE - The telemetry endpoint is assumed to end in `/v1/traces`\n */\nfunction getOtelEndpoint(c) {\n    const otelEndpoint = getFromEnv(c?.env, [\n        ENV_FIBERPLANE_OTEL_ENDPOINT,\n        ENV_FPX_ENDPOINT,\n    ]);\n    return otelEndpoint ?? undefined;\n}\n/**\n * Gets the Fiberplane OTel token from environment variables.\n * Checks both FIBERPLANE_OTEL_TOKEN and the legacy FPX_AUTH_TOKEN.\n * Used to authenticate requests to a Fiberplane Otel-worker HTTP API.\n */\nfunction getOtelToken(c) {\n    const otelToken = getFromEnv(c?.env, [\n        ENV_FIBERPLANE_OTEL_TOKEN,\n        ENV_FPX_AUTH_TOKEN,\n    ]);\n    return otelToken ?? undefined;\n}\nfunction getFiberplaneServicesUrl(c) {\n    const fiberplaneServicesUrl = getFromEnv(c?.env, [\n        ENV_FIBERPLANE_SERVICES_URL,\n    ]);\n    return fiberplaneServicesUrl ?? DEFAULT_PLAYGROUND_SERVICES_URL;\n}\nfunction getApiKey(c, debug) {\n    const FIBERPLANE_API_KEY = c?.env?.FIBERPLANE_API_KEY;\n    if (debug) {\n        if (FIBERPLANE_API_KEY) {\n            logIfDebug(debug, \"FIBERPLANE_API_KEY present in env\");\n        }\n        else {\n            logIfDebug(debug, \"FIBERPLANE_API_KEY not present in env\");\n        }\n    }\n    return FIBERPLANE_API_KEY;\n}\n/**\n * Gets the execution context from the context object.\n * Returns null if the execution context is not present.\n *\n * We wrap this in a try-catch because Hono will throw an error if\n * there is no `executionCtx` (e.g., in non-Cloudflare environments).\n */\nfunction getExecutionCtxSafely(c) {\n    try {\n        return c.executionCtx;\n    }\n    catch (_e) {\n        return null;\n    }\n}\n", "import { createOpenAPISpec } from \"./create-open-api/index.js\";\nimport { createFiberplane } from \"./middleware.js\";\n// Export the main function\nexport { createFiberplane, createOpenAPISpec };\n/**\n * @deprecated Use createFiberplane() instead. This alias will be removed in a future version.\n */\nexport const createMiddleware = createFiberplane;\nexport { FpService } from \"./services/index.js\";\n"],
  "mappings": "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",
  "names": ["e", "n", "o", "t", "r", "i", "l", "module", "index", "next", "parse", "_a", "isMergeableObject", "deepmerge", "next", "equal", "get", "paths", "util", "objectUtil", "errorUtil", "errorMap", "_a", "input", "ctx", "step", "result", "index", "issues", "elements", "processed", "r", "_b", "ZodFirstPartyTypeKind", "fetch", "fetch", "nameSpaceContext", "style", "next", "form", "_a", "index", "errors", "omit", "_a", "index", "result", "errors", "omit", "resolveRef", "resolvedSchema", "step", "index", "resolveRef", "index", "_a", "errors", "finalSchema", "toOmit", "LegacyCache", "_a", "index", "_a", "suffixes", "suffixes", "isObject", "_a", "import_json_pointer", "suffixes", "_a", "parentPointer", "parseIdnEmail", "validUrl", "_a", "import_json_pointer", "gp", "deepmerge", "resolveRef", "index", "next", "_a", "type", "isValid", "index", "hasOwnProperty", "errors", "schema", "index", "deepEqual", "_a", "import_fast_deep_equal", "equal", "errors", "next", "isValid", "resolveRef", "addRemoteSchema", "import_json_pointer", "COMPILED", "COMPILED_REF", "GET_REF", "GET_ROOT", "suffixes", "compileSchema", "_a", "parentPointer", "KeywordValidation", "_a", "errors", "keyword_default", "keyword_default", "addRemoteSchema", "compileSchema", "isValid", "resolveRef", "keyword_default", "addRemoteSchema", "compileSchema", "isValid", "resolveRef", "_a", "KeywordValidation", "keyword_default", "errors", "index", "keyword_default", "addRemoteSchema", "compileSchema", "isValid", "resolveRef", "resolveRef", "contextStorage", "next", "name", "jsep", "plugin", "index", "step", "script", "cache", "step", "result", "jsonpointer", "serialize", "errors", "step", "request", "next", "next"]
}
